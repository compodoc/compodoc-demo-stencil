var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AMRating.html",[0,0.298,1,0.259]],["body/components/AMRating.html",[0,0.523,1,0.32,2,0.122,3,0.122,4,0.179,5,0.179,6,0.087,7,5.275,8,5.275,9,1.508,10,0.978,11,2.861,12,3.951,13,1.563,14,2.861,15,0.179,16,0.286,17,0.637,18,2.861,19,2.861,20,1.711,21,0.07,22,0.224,23,4.08,24,4.08,25,4.08,26,4.08,27,0.549,28,2.844,29,4.08,30,4.08,31,4.08,32,4.08,33,4.08,34,4.461,35,4.08,36,4.08,37,4.08,38,4.08,39,0.255,40,3.436,41,4.08,42,2.861,43,0.408,44,2.861,45,0.623,46,1.791,47,4.08,48,2.049,49,2.861,50,0.397,51,0.029,52,0.719,53,1.791,54,2.861,55,3.291,56,1.791,57,1.791,58,1.791,59,1.791,60,1.791,61,1.791,62,3.008,63,3.573,64,0.738,65,0.376,66,0.738,67,2.204,68,1.791,69,1.132,70,1.508,71,3.573,72,1.791,73,1.791,74,1.791,75,2.204,76,0.408,77,2.75,78,2.75,79,2.229,80,0.724,81,0.87,82,1.791,83,4.08,84,2.861,85,2.861,86,1.608,87,2.861,88,1.791,89,4.004,90,4.004,91,4.756,92,4.08,93,4.756,94,2.861,95,1.791,96,2.861,97,2.861,98,1.791,99,4.756,100,1.791,101,2.861,102,2.861,103,2.844,104,2.861,105,2.409,106,4.08,107,2.861,108,2.861,109,2.861,110,4.08,111,3.087,112,4.08,113,2.861,114,4.08,115,2.861,116,1.952,117,1.791,118,2.861,119,1.889,120,2.861,121,1.791,122,1.624,123,2.641,124,1.791,125,2.861,126,2.861,127,2.861,128,1.791,129,2.861,130,4.08,131,1.791,132,2.861,133,1.791,134,1.794,135,1.791,136,2.44,137,1.791,138,2.861,139,2.409,140,1.791,141,2.409,142,4.08,143,2.861,144,2.861,145,4.08,146,2.861,147,4.08,148,2.861,149,4.08,150,2.861,151,4.08,152,2.861,153,2.861,154,2.861,155,2.861,156,1.791,157,2.861,158,4.461,159,1.791,160,2.861,161,2.861,162,0.179,163,0.179,164,0.122,165,0.159,166,2.861,167,1.791,168,1.791,169,0.591,170,1.791,171,1.791,172,1.791,173,1.791,174,1.791,175,1.791,176,0.179,177,0.286,178,0.286,179,0.408,180,0.179,181,0.641,182,0.14,183,0.14,184,0.14,185,0.14,186,0.14,187,0.14,188,0.14,189,0.14,190,0.14,191,0.14,192,0.14,193,0.14,194,0.14,195,0.14,196,0.14,197,0.14,198,0.14,199,0.14,200,0.14,201,0.14,202,0.14,203,0.14,204,0.14,205,0.14,206,0.14,207,0.14,208,0.179,209,0.012,210,0.012]],["title/components/AuthPage.html",[0,0.298,182,0.259]],["body/components/AuthPage.html",[0,0.507,1,0.239,2,0.208,3,0.208,4,0.305,5,0.305,6,0.148,15,0.305,16,0.427,17,0.951,20,1.824,21,0.119,22,0.334,27,0.534,28,2.945,39,0.38,43,0.534,45,0.598,50,0.532,51,0.029,52,0.752,64,0.787,65,0.395,66,0.787,75,2.282,76,0.29,79,2.332,80,0.527,81,0.58,122,1.96,162,0.305,163,0.305,164,0.208,165,0.272,169,1.017,176,0.305,177,0.427,178,0.61,179,0.562,180,0.305,181,0.678,182,0.418,183,0.239,184,0.239,185,0.239,186,0.239,187,0.239,188,0.239,189,0.239,190,0.239,191,0.239,192,0.239,193,0.239,194,0.239,195,0.239,196,0.239,197,0.239,198,0.239,199,0.239,200,0.239,201,0.239,202,0.239,203,0.239,204,0.239,205,0.239,206,0.239,207,0.239,208,0.305,209,0.017,210,0.017,211,4.498,212,4.498,213,1.049,214,5.335,215,1.59,216,2.332,217,1.973,218,4.294,219,1.28,220,4.269,221,4.728,222,1.097,223,5.335,224,1.667,225,4.269,226,3.05,227,3.595,228,2.568,229,3.05,230,3.05,231,1.413,232,2.014,233,2.251,234,1.049,235,0.909,236,2.014,237,2.251,238,3.05,239,3.05,240,3.05,241,3.05,242,3.05,243,4.269,244,3.05,245,1.102,246,3.05,247,3.05,248,3.05,249,3.05,250,3.05,251,3.05,252,2.568,253,2.332,254,2.332,255,4.269,256,1.699,257,3.595,258,3.595,259,3.05,260,3.05,261,3.05,262,3.05,263,2.251,264,1.531,265,2.568,266,3.05,267,1.531,268,3.05,269,1.531,270,1.824,271,2.568,272,3.05,273,2.568,274,2.251,275,3.05,276,3.05,277,2.568,278,3.05]],["title/interfaces/Bar.html",[279,1.416,280,1.53]],["body/interfaces/Bar.html",[2,0.316,3,0.316,6,0.225,10,2.537,12,3.754,21,0.181,22,0.44,51,0.028,65,0.373,76,0.427,86,1.776,123,2.799,164,0.411,209,0.023,210,0.023,279,2.692,280,2.603,281,3.066,282,3.844,283,4.632,284,1.289,285,3.066,286,3.066,287,3.613,288,3.427,289,3.427]],["title/components/BarDirections.html",[0,0.298,183,0.259]],["body/components/BarDirections.html",[0,0.481,1,0.208,2,0.18,3,0.18,4,0.265,5,0.265,6,0.128,15,0.265,16,0.387,17,0.861,21,0.103,22,0.303,27,0.574,39,0.406,43,0.501,45,0.617,48,3.008,50,0.494,51,0.029,52,0.467,65,0.389,69,1.265,76,0.39,77,1.229,78,1.229,80,0.618,81,0.754,86,1.517,103,1.586,162,0.265,163,0.265,164,0.18,165,0.236,169,1.213,176,0.265,177,0.387,178,0.387,179,0.501,180,0.265,181,0.67,182,0.208,183,0.392,184,0.208,185,0.208,186,0.208,187,0.208,188,0.208,189,0.208,190,0.208,191,0.208,192,0.208,193,0.208,194,0.208,195,0.208,196,0.208,197,0.208,198,0.208,199,0.208,200,0.208,201,0.208,202,0.208,203,0.208,204,0.208,205,0.208,206,0.208,207,0.208,208,0.265,209,0.016,210,0.016,219,1.201,222,1.115,245,1.292,264,2.514,280,2.32,290,4.117,291,5.251,292,2.234,293,3.864,294,4.481,295,4.677,296,5.007,297,5.007,298,5.007,299,2.994,300,5.007,301,5.007,302,2.653,303,2.653,304,2.653,305,2.653,306,2.653,307,2.653,308,4.558,309,2.653,310,4.558,311,2.653,312,4.558,313,0.913,314,1.329,315,1.329,316,2.653,317,4.558,318,2.653,319,3.864,320,3.864,321,2.653,322,0.849,323,2.653,324,2.653,325,2.653,326,2.653,327,2.653,328,2.653,329,2.653,330,2.653,331,2.653,332,2.234,333,2.653,334,2.653,335,2.653,336,2.851,337,2.653,338,1.229,339,2.234,340,2.234,341,2.653,342,1.586,343,1.957,344,2.234,345,2.726,346,3.253,347,2.234,348,3.864,349,2.234,350,2.653,351,2.653,352,5.007,353,2.653,354,2.653,355,2.653,356,2.653,357,2.653,358,2.653,359,3.864,360,3.864,361,2.653,362,2.234,363,3.864,364,2.653,365,2.653,366,2.653,367,1.751,368,2.653,369,2.653,370,2.653,371,3.864,372,2.653,373,2.653,374,4.558,375,2.653,376,2.653,377,2.653,378,2.653,379,2.653,380,3.864,381,2.653,382,2.653,383,2.653,384,2.653,385,2.653,386,2.653]],["title/components/BarPage.html",[0,0.298,185,0.259]],["body/components/BarPage.html",[0,0.502,1,0.232,2,0.201,3,0.201,4,0.296,5,0.296,6,0.143,15,0.296,16,0.418,17,0.931,21,0.115,22,0.328,27,0.418,28,2.898,39,0.431,43,0.527,45,0.605,48,1.487,50,0.513,51,0.029,52,0.737,64,1.079,65,0.394,66,1.079,69,1.345,75,2.246,76,0.358,80,0.65,81,0.658,116,1.618,134,2.433,162,0.418,163,0.296,164,0.201,165,0.264,169,1.087,176,0.296,177,0.418,178,0.418,179,0.527,180,0.296,181,0.676,182,0.232,183,0.232,184,0.232,185,0.413,186,0.232,187,0.232,188,0.232,189,0.232,190,0.232,191,0.232,192,0.232,193,0.232,194,0.232,195,0.232,196,0.232,197,0.232,198,0.232,199,0.232,200,0.232,201,0.232,202,0.232,203,0.232,204,0.232,205,0.232,206,0.232,207,0.232,208,0.296,209,0.017,210,0.017,213,1.019,215,1.246,216,2.284,218,4.253,219,1.263,222,1.284,231,1.372,232,1.955,233,2.185,236,1.955,237,2.185,245,1.251,267,1.487,269,1.487,270,1.771,280,2.851,290,4.061,313,1.019,314,1.438,315,1.438,322,0.948,336,2.185,338,1.372,339,2.493,340,2.493,342,2.898,343,2.185,344,2.493,346,2.493,347,2.493,349,2.493,387,5.18,388,2.877,389,4.181,390,3.52,391,3.476,392,1.955,393,4.181,394,5.554,395,2.961,396,2.961,397,3.52,398,3.52,399,2.185,400,1.771,401,2.961,402,2.648,403,2.648,404,1.955,405,1.618,406,1.372,407,2.961,408,1.955,409,1.618,410,1.487,411,1.771,412,1.618,413,2.284,414,1.618,415,2.961,416,2.961,417,2.961,418,3.52,419,2.961,420,2.961,421,2.961,422,2.961,423,2.961,424,2.961,425,2.961]],["title/interfaces/Beer.html",[279,1.416,284,0.916]],["body/interfaces/Beer.html",[2,0.308,3,0.308,6,0.219,10,3.4,12,2.708,21,0.177,22,0.433,51,0.028,65,0.37,76,0.442,86,1.784,123,2.098,164,0.406,209,0.023,210,0.023,279,2.669,280,2.098,281,2.989,282,3.817,283,3.341,284,1.535,285,4.108,286,4.108,287,3.969,288,3.341,289,3.341]],["title/components/BeerDetail.html",[0,0.298,186,0.259]],["body/components/BeerDetail.html",[0,0.503,1,0.234,2,0.203,3,0.203,4,0.299,5,0.299,6,0.144,10,1.631,15,0.299,16,0.421,17,0.937,21,0.116,22,0.329,27,0.421,39,0.374,43,0.529,45,0.607,48,1.499,50,0.529,51,0.029,52,0.526,64,0.771,65,0.394,66,0.771,69,1.351,76,0.331,80,0.601,81,0.718,86,1.257,119,3.214,162,0.487,163,0.299,164,0.203,165,0.266,169,0.868,176,0.299,177,0.421,178,0.421,179,0.529,180,0.299,181,0.677,182,0.234,183,0.234,184,0.234,185,0.234,186,0.414,187,0.234,188,0.234,189,0.234,190,0.234,191,0.234,192,0.234,193,0.234,194,0.234,195,0.234,196,0.234,197,0.234,198,0.234,199,0.234,200,0.234,201,0.234,202,0.234,203,0.234,204,0.234,205,0.234,206,0.234,207,0.234,208,0.299,209,0.017,210,0.017,219,1.268,222,1.373,245,1.364,267,1.499,269,1.499,270,1.785,284,1.806,285,1.971,286,1.971,299,1.785,313,1.027,314,1.447,315,1.447,322,0.956,342,1.785,367,1.971,388,2.887,391,3.489,402,2.66,403,2.887,406,1.383,408,1.971,409,2.297,410,2.111,411,1.785,412,2.297,413,2.297,414,2.297,426,3.368,427,5.19,428,2.203,429,2.776,430,4.205,431,4.45,432,4.111,433,4.099,434,2.985,435,2.985,436,2.985,437,3.541,438,2.985,439,2.985,440,2.985,441,2.985,442,2.985,443,2.514,444,2.985,445,2.514,446,2.515,447,2.985,448,1.971,449,2.514,450,1.971,451,2.514,452,1.785,453,2.514,454,1.971,455,2.514,456,2.514,457,2.514,458,4.205,459,4.205,460,3.541,461,2.514]],["title/components/BeerItem.html",[0,0.298,187,0.259]],["body/components/BeerItem.html",[0,0.439,1,0.168,2,0.146,3,0.146,4,0.214,5,0.214,6,0.104,10,1.169,13,1.169,15,0.214,16,0.329,17,0.733,21,0.083,22,0.258,27,0.329,39,0.293,43,0.45,45,0.626,50,0.53,51,0.029,52,0.903,55,2.428,64,1.323,65,0.386,66,1.323,67,1.857,75,1.857,76,0.41,77,0.992,78,1.857,79,1.797,80,0.633,81,0.725,86,1.034,90,1.802,111,1.074,116,2.19,119,2.172,122,0.852,136,2.69,162,0.401,163,0.214,164,0.146,165,0.19,169,1.002,176,0.214,177,0.329,178,0.551,179,0.486,180,0.214,181,0.655,182,0.168,183,0.168,184,0.168,185,0.168,186,0.168,187,0.352,188,0.168,189,0.168,190,0.168,191,0.168,192,0.168,193,0.168,194,0.168,195,0.168,196,0.168,197,0.168,198,0.168,199,0.168,200,0.168,201,0.168,202,0.168,203,0.168,204,0.168,205,0.168,206,0.168,207,0.168,208,0.214,209,0.013,210,0.013,217,1.664,219,1.079,221,1.802,222,1.259,234,0.736,235,0.638,245,1.378,253,1.169,254,1.169,256,0.852,257,1.802,258,1.802,263,1.579,264,1.652,265,1.802,277,1.802,284,1.827,313,1.132,314,1.548,315,1.548,322,1.053,388,2.458,402,2.19,403,2.458,406,0.992,409,1.797,410,2.012,412,2.19,413,1.797,414,1.797,426,3.441,429,2.172,431,2.77,452,1.967,457,1.802,460,2.77,462,4.647,463,1.413,464,3.29,465,2.969,466,4.499,467,3.788,468,3.319,469,3.319,470,3.29,471,3.29,472,3.29,473,3.29,474,3.319,475,3.29,476,3.29,477,2.14,478,2.14,479,3.29,480,2.14,481,3.29,482,2.14,483,2.14,484,3.29,485,3.939,486,2.14,487,3.29,488,2.14,489,2.14,490,2.14,491,3.29,492,2.14,493,3.29,494,2.14,495,2.646,496,2.646,497,1.802,498,2.14,499,1.802,500,2.14,501,2.14,502,3.319,503,2.14,504,2.14,505,1.797,506,1.28,507,1.579,508,2.172,509,2.957,510,1.579,511,1.579,512,1.413,513,1.579,514,1.579,515,1.579,516,1.579,517,2.14,518,1.579,519,2.14,520,2.14,521,2.14,522,4.008,523,3.29,524,3.29,525,1.579,526,2.14,527,3.29,528,2.14,529,3.29,530,2.14,531,2.14,532,2.14,533,2.14,534,2.14,535,1.413,536,2.14,537,2.428,538,1.579,539,1.579,540,1.579,541,2.14,542,2.14,543,1.413,544,2.957,545,1.579,546,1.579,547,1.579,548,2.428,549,1.579,550,1.579,551,1.579,552,2.14,553,1.579,554,2.14,555,2.14,556,2.14,557,2.14,558,1.579,559,1.802,560,1.579,561,2.14,562,2.14,563,2.14,564,2.14,565,2.14,566,2.14,567,2.14,568,2.14,569,2.14,570,2.14,571,2.172,572,2.428,573,2.14]],["title/components/BeerList.html",[0,0.298,188,0.259]],["body/components/BeerList.html",[0,0.541,1,0.288,2,0.25,3,0.25,4,0.368,5,0.368,6,0.178,15,0.368,16,0.485,17,1.08,21,0.143,22,0.38,27,0.485,39,0.431,43,0.577,45,0.543,50,0.513,51,0.028,65,0.399,75,2.512,76,0.33,80,0.598,81,0.814,134,2.722,162,0.485,163,0.368,164,0.25,165,0.327,169,0.759,176,0.368,177,0.485,178,0.485,179,0.577,180,0.368,181,0.688,182,0.288,183,0.288,184,0.288,185,0.288,186,0.288,187,0.288,188,0.452,189,0.288,190,0.288,191,0.288,192,0.288,193,0.288,194,0.288,195,0.288,196,0.288,197,0.288,198,0.288,199,0.288,200,0.288,201,0.288,202,0.288,203,0.288,204,0.288,205,0.288,206,0.288,207,0.288,208,0.368,209,0.02,210,0.02,284,1.818,406,1.704,426,3.149,446,2.199,467,4.854,574,4.854,575,2.199,576,3.2,577,3.577,578,3.096,579,3.096,580,3.096,581,3.677]],["title/components/BeerPage.html",[0,0.298,189,0.259]],["body/components/BeerPage.html",[0,0.457,1,0.184,2,0.16,3,0.16,4,0.235,5,0.235,6,0.114,15,0.235,16,0.353,17,0.787,21,0.092,22,0.277,27,0.353,39,0.314,43,0.472,45,0.609,48,1.179,50,0.505,51,0.029,52,0.414,64,0.912,65,0.394,66,0.912,69,1.177,76,0.375,77,1.966,78,1.966,80,0.582,81,0.48,103,1.405,111,1.179,116,2.318,123,2.689,134,2.668,162,0.425,163,0.235,164,0.16,165,0.209,169,0.974,176,0.235,177,0.353,178,0.568,179,0.472,180,0.235,181,0.662,182,0.184,183,0.184,184,0.184,185,0.184,186,0.184,187,0.184,188,0.184,189,0.37,190,0.184,191,0.184,192,0.184,193,0.184,194,0.184,195,0.184,196,0.184,197,0.184,198,0.184,199,0.184,200,0.184,201,0.184,202,0.184,203,0.184,204,0.184,205,0.184,206,0.184,207,0.184,208,0.235,209,0.014,210,0.014,213,0.808,215,1.584,216,1.929,217,1.745,219,1.132,222,1.37,231,1.088,245,1.423,256,0.935,267,2.369,269,2.369,270,2.822,271,1.978,282,3.714,284,1.64,313,0.808,314,1.215,315,1.215,322,0.752,332,1.978,342,1.405,367,1.551,388,2.578,390,2.973,391,3.115,397,2.973,398,2.973,399,1.733,400,1.405,402,2.318,403,2.318,404,1.551,405,1.283,406,1.088,408,2.801,409,1.283,410,1.179,411,1.405,412,1.283,413,1.283,414,1.283,426,3.361,443,1.978,445,2.973,446,3.297,582,5.179,583,4.719,584,3.973,585,3.532,586,4.719,587,1.978,588,3.532,589,2.349,590,2.349,591,2.349,592,2.349,593,2.349,594,2.349,595,4.719,596,1.733,597,3.532,598,4.719,599,3.532,600,3.532,601,3.532,602,3.532,603,3.532,604,3.532,605,3.532,606,3.532,607,3.532,608,3.532,609,2.349,610,1.733,611,1.733,612,2.349,613,1.978,614,1.978,615,2.349,616,4.244,617,3.532,618,1.978,619,1.978,620,1.978,621,1.978,622,1.978,623,1.978,624,1.978,625,1.733,626,2.349,627,3.532,628,2.349,629,2.349,630,2.349,631,2.349,632,3.532,633,2.349,634,2.349,635,1.978,636,2.349,637,2.349,638,2.349,639,2.349,640,2.349,641,2.349,642,2.349,643,2.349]],["title/components/FeedPage.html",[0,0.298,191,0.259]],["body/components/FeedPage.html",[0,0.535,1,0.253,2,0.22,3,0.22,4,0.323,5,0.323,6,0.156,15,0.323,16,0.444,17,0.989,21,0.126,22,0.348,27,0.444,39,0.395,43,0.547,45,0.607,50,0.527,51,0.029,52,0.783,62,4.604,65,0.396,69,1.409,76,0.302,77,1.497,78,1.497,80,0.627,81,0.603,162,0.444,163,0.323,164,0.22,165,0.287,169,1.048,176,0.323,177,0.444,178,0.444,179,0.574,180,0.323,181,0.681,182,0.253,183,0.253,184,0.253,185,0.253,186,0.253,187,0.253,188,0.253,189,0.253,190,0.253,191,0.428,192,0.253,193,0.253,194,0.253,195,0.253,196,0.253,197,0.253,198,0.253,199,0.253,200,0.253,201,0.253,202,0.253,203,0.253,204,0.253,205,0.253,206,0.253,207,0.253,208,0.323,209,0.018,210,0.018,213,1.111,215,1.513,216,2.427,219,1.312,222,1.319,224,1.765,231,1.497,234,1.111,235,0.963,245,1.31,256,1.285,313,1.111,314,1.528,315,1.528,322,1.034,338,2.534,399,2.383,405,1.765,505,2.427,506,1.932,644,3.697,645,4.562,646,4.23,647,5.468,648,5.468,649,5.468,650,2.72,651,3.23,652,3.23,653,4.442,654,3.23,655,5.077,656,4.604,657,4.442,658,4.442,659,2.72,660,3.23,661,2.72,662,3.23,663,3.23,664,2.72,665,3.23,666,3.23,667,3.23]],["title/components/FeedPageModal.html",[0,0.298,192,0.259]],["body/components/FeedPageModal.html",[0,0.435,1,0.165,2,0.143,3,0.143,4,0.211,5,0.211,6,0.233,12,2.373,15,0.211,16,0.325,17,0.724,21,0.082,22,0.255,27,0.325,39,0.289,43,0.446,45,0.632,50,0.528,51,0.029,52,0.898,64,1.024,65,0.384,66,1.024,67,2.36,69,1.561,76,0.391,77,0.976,78,0.976,79,1.151,80,0.655,81,0.441,86,1.452,111,1.632,123,1.838,139,1.773,162,0.211,163,0.211,164,0.143,165,0.187,169,0.921,176,0.211,177,0.325,178,0.549,179,0.482,180,0.211,181,0.654,182,0.165,183,0.165,184,0.165,185,0.165,186,0.165,187,0.165,188,0.165,189,0.165,190,0.165,191,0.165,192,0.349,193,0.165,194,0.165,195,0.165,196,0.165,197,0.165,198,0.165,199,0.165,200,0.165,201,0.165,202,0.165,203,0.165,204,0.165,205,0.165,206,0.165,207,0.165,208,0.211,209,0.013,210,0.013,215,2.011,217,1.65,219,1.07,222,1.134,234,0.725,235,0.628,245,1.244,253,1.151,256,1.293,264,1.992,284,0.584,313,0.725,314,1.365,315,1.118,322,0.674,338,2.233,400,1.943,405,1.151,410,1.057,450,2.145,452,2.668,465,2.945,495,2.619,496,2.945,538,2.398,539,2.398,543,2.145,544,4.239,545,2.398,546,3.291,547,2.398,548,3.291,549,2.398,550,2.398,551,2.398,553,2.398,558,1.554,559,1.773,644,3.801,646,3.291,656,3.341,668,4.689,669,1.554,670,3.25,671,4.461,672,4.461,673,4.461,674,4.461,675,4.461,676,4.461,677,4.461,678,3.291,679,4.461,680,3.25,681,3.25,682,3.25,683,5.094,684,4.461,685,2.106,686,2.106,687,2.106,688,3.25,689,2.106,690,3.25,691,2.106,692,3.25,693,3.25,694,2.106,695,2.106,696,2.106,697,2.106,698,2.106,699,2.106,700,2.106,701,2.106,702,2.106,703,2.106,704,2.106,705,2.106,706,2.106,707,2.106,708,2.106,709,1.773,710,2.106,711,2.106,712,2.106,713,3.968,714,3.25,715,2.106,716,3.968,717,2.106,718,2.106,719,2.106,720,2.106,721,2.106,722,3.968,723,2.106,724,2.106,725,3.25,726,2.106,727,2.106,728,2.106,729,2.928,730,2.106,731,2.106,732,2.106,733,2.106,734,2.106,735,2.106,736,2.106,737,2.106,738,2.106,739,2.106,740,2.106,741,2.106,742,2.106,743,3.25,744,2.106,745,2.106,746,2.106,747,3.968,748,2.106,749,2.106,750,2.106,751,2.106,752,2.106,753,2.106,754,3.968,755,2.106,756,2.106,757,3.25,758,3.25,759,2.106,760,2.106,761,2.106,762,2.736,763,2.106,764,2.106,765,1.773,766,2.106]],["title/interfaces/Labels.html",[279,1.416,287,1.974]],["body/interfaces/Labels.html",[2,0.324,3,0.324,6,0.231,10,2.604,12,2.851,21,0.186,22,0.447,51,0.028,65,0.331,76,0.388,86,1.773,123,2.209,164,0.416,209,0.023,210,0.023,279,2.716,280,2.209,281,3.147,282,3.413,283,3.518,284,1.323,285,3.147,286,3.147,287,3.787,288,4.672,289,4.672]],["title/components/LazyImg.html",[0,0.298,193,0.259]],["body/components/LazyImg.html",[0,0.535,1,0.214,2,0.186,3,0.186,4,0.273,5,0.273,6,0.132,13,2.94,15,0.273,16,0.394,17,0.878,21,0.106,22,0.309,27,0.394,39,0.351,43,0.508,45,0.627,48,2.702,50,0.527,51,0.029,52,0.948,65,0.39,67,2.145,69,1.285,76,0.382,80,0.664,81,0.731,86,1.557,122,1.843,136,3.033,162,0.273,163,0.273,164,0.186,165,0.243,169,0.563,176,0.273,177,0.394,178,0.561,179,0.508,180,0.273,181,0.672,182,0.214,183,0.214,184,0.214,185,0.214,186,0.214,187,0.214,188,0.214,189,0.214,190,0.214,191,0.214,192,0.214,193,0.397,194,0.214,195,0.214,196,0.214,197,0.214,198,0.214,199,0.214,200,0.214,201,0.214,202,0.214,203,0.214,204,0.214,205,0.214,206,0.214,207,0.214,208,0.273,209,0.016,210,0.016,217,1.876,219,1.217,256,1.085,264,1.369,345,1.631,468,3.743,469,3.743,474,3.743,485,3.416,502,3.743,507,2.909,508,1.8,509,3.416,510,2.012,511,2.012,512,1.8,513,2.012,514,2.012,515,2.012,516,2.012,518,2.012,525,2.012,613,3.319,625,2.909,729,4.369,767,5.328,768,5.328,769,1.8,770,5.381,771,3.319,772,3.943,773,4.271,774,4.271,775,4.271,776,5.08,777,4.271,778,4.271,779,2.727,780,2.727,781,2.727,782,2.727,783,2.727,784,2.727,785,2.296,786,2.727,787,2.727,788,2.296,789,2.727,790,2.727,791,3.943,792,3.943,793,2.727,794,2.296,795,2.727,796,3.943,797,2.727,798,2.727,799,2.727,800,2.727,801,2.296,802,2.727,803,2.727,804,2.727,805,2.727,806,2.727,807,2.012,808,2.727,809,2.296,810,2.296,811,3.898,812,2.296,813,2.296,814,2.296,815,2.296,816,2.727,817,3.943,818,2.727,819,2.296,820,2.727,821,2.296,822,3.319,823,2.296,824,2.296,825,2.296,826,2.296,827,2.296]],["title/components/PopoverPage.html",[0,0.298,194,0.259]],["body/components/PopoverPage.html",[0,0.52,1,0.256,2,0.222,3,0.222,4,0.327,5,0.327,6,0.158,15,0.327,16,0.448,21,0.127,22,0.35,27,0.448,39,0.398,43,0.55,45,0.62,50,0.529,51,0.028,52,0.899,65,0.396,67,2.365,76,0.347,80,0.63,81,0.608,103,3.284,122,1.299,136,3.284,162,0.327,163,0.327,164,0.222,165,0.29,176,0.327,177,0.448,178,0.62,179,0.576,180,0.327,181,0.682,182,0.256,183,0.256,184,0.256,185,0.256,186,0.256,187,0.256,188,0.256,189,0.256,190,0.256,191,0.256,192,0.256,193,0.256,194,0.43,195,0.256,196,0.256,197,0.256,198,0.256,199,0.256,200,0.256,201,0.256,202,0.256,203,0.256,204,0.256,205,0.256,206,0.256,207,0.256,208,0.327,209,0.018,210,0.018,213,1.123,215,1.771,217,2.031,222,1.137,234,1.123,235,0.973,245,0.842,254,3,313,1.123,314,1.539,315,1.539,322,1.045,392,2.154,404,2.154,535,2.154,596,2.408,828,4.639,829,4.639,830,4.624,831,4.624,832,4.624,833,4.624,834,5.492,835,5.492,836,2.748,837,3.263,838,3.263,839,2.748,840,4.298,841,2.408,842,5.492,843,4.624,844,3.263,845,2.748,846,3.263,847,2.748,848,2.748,849,2.748,850,3.263,851,1.952,852,3.263,853,3.263,854,3.263]],["title/components/PostDetail.html",[0,0.298,195,0.259]],["body/components/PostDetail.html",[0,0.554,1,0.31,2,0.269,3,0.269,4,0.396,5,0.396,6,0.191,15,0.396,16,0.508,21,0.154,22,0.398,27,0.508,39,0.452,43,0.593,45,0.508,50,0.452,51,0.028,65,0.401,76,0.269,80,0.488,81,0.763,162,0.396,163,0.396,164,0.269,165,0.352,176,0.396,177,0.508,178,0.508,179,0.593,180,0.396,181,0.691,182,0.31,183,0.31,184,0.31,185,0.31,186,0.31,187,0.31,188,0.31,189,0.31,190,0.31,191,0.31,192,0.31,193,0.31,194,0.31,195,0.464,196,0.31,197,0.31,198,0.31,199,0.31,200,0.31,201,0.31,202,0.31,203,0.31,204,0.31,205,0.31,206,0.31,207,0.31,208,0.396,209,0.021,210,0.021,338,2.908,428,2.917,429,3.354,855,3.358,856,4.728,857,3.953,858,3.953,859,3.329,860,3.329]],["title/components/PostImg.html",[0,0.298,196,0.259]],["body/components/PostImg.html",[0,0.492,1,0.22,2,0.191,3,0.191,4,0.281,5,0.281,6,0.136,13,1.533,15,0.281,16,0.403,21,0.109,22,0.315,27,0.403,39,0.358,43,0.514,45,0.636,48,1.409,50,0.531,51,0.029,52,0.906,65,0.391,67,2.18,69,1.51,76,0.397,80,0.699,81,0.739,86,1.627,136,3.074,162,0.281,163,0.281,164,0.191,165,0.25,169,1.061,176,0.281,177,0.403,178,0.567,179,0.544,180,0.281,181,0.673,182,0.22,183,0.22,184,0.22,185,0.22,186,0.22,187,0.22,188,0.22,189,0.22,190,0.22,191,0.22,192,0.22,193,0.22,194,0.22,195,0.22,196,0.403,197,0.22,198,0.22,199,0.22,200,0.22,201,0.22,202,0.22,203,0.22,204,0.22,205,0.22,206,0.22,207,0.22,208,0.281,209,0.016,210,0.016,217,1.901,219,1.233,222,1.048,234,0.965,235,0.836,245,0.724,256,1.117,264,1.409,299,2.407,338,1.865,468,3.792,469,3.792,474,3.792,485,3.472,502,3.792,507,2.969,508,1.852,509,3.472,510,2.071,511,2.071,512,1.852,513,2.071,514,2.071,515,2.071,516,2.071,518,2.071,525,2.071,678,2.071,709,2.363,729,2.969,769,1.852,771,3.388,773,4.327,774,4.327,775,4.327,776,4.581,777,4.327,778,4.327,785,2.363,788,2.363,809,2.363,810,2.363,811,3.961,812,2.363,813,2.363,814,2.363,815,2.363,819,2.363,821,2.363,822,3.388,823,2.363,824,2.363,825,2.363,826,2.363,827,2.363,855,3.832,861,4.729,862,5.14,863,2.806,864,2.806,865,2.806,866,2.806,867,2.806,868,2.806,869,2.806,870,2.806,871,2.806,872,2.806,873,2.806,874,2.806,875,2.806,876,2.806,877,2.806]],["title/components/PostItem.html",[0,0.298,197,0.259]],["body/components/PostItem.html",[0,0.539,1,0.285,2,0.247,3,0.247,4,0.364,5,0.364,6,0.176,15,0.364,16,0.481,21,0.142,22,0.377,27,0.481,39,0.428,43,0.574,45,0.597,50,0.511,51,0.028,52,0.848,55,3.549,64,0.938,65,0.4,66,0.938,76,0.327,80,0.594,81,0.732,162,0.364,163,0.364,164,0.247,165,0.324,176,0.364,177,0.481,178,0.636,179,0.574,180,0.364,181,0.687,182,0.285,183,0.285,184,0.285,185,0.285,186,0.285,187,0.285,188,0.285,189,0.285,190,0.285,191,0.285,192,0.285,193,0.285,194,0.285,195,0.285,196,0.285,197,0.45,198,0.285,199,0.285,200,0.285,201,0.285,202,0.285,203,0.285,204,0.285,205,0.285,206,0.285,207,0.285,208,0.364,209,0.02,210,0.02,217,2.122,219,1.377,253,1.986,338,2.943,429,2.399,463,2.399,497,3.06,499,3.06,855,3.668,859,3.06,860,3.06,878,5.164,879,4.81,880,4.81,881,3.635,882,3.635,883,3.635,884,3.635,885,3.635,886,3.635,887,3.635]],["title/components/ProfileHeader.html",[0,0.298,198,0.259]],["body/components/ProfileHeader.html",[0,0.535,1,0.252,2,0.219,3,0.219,4,0.322,5,0.322,6,0.156,15,0.322,16,0.443,17,0.987,20,2.649,21,0.125,22,0.347,27,0.443,39,0.394,43,0.546,45,0.607,50,0.51,51,0.028,52,0.781,64,0.83,65,0.396,66,0.83,67,2.053,69,1.406,76,0.345,80,0.625,81,0.602,86,1.308,122,1.28,162,0.443,163,0.322,164,0.219,165,0.286,176,0.322,177,0.443,178,0.443,179,0.573,180,0.322,181,0.681,182,0.252,183,0.252,184,0.252,185,0.252,186,0.252,187,0.252,188,0.252,189,0.252,190,0.252,191,0.252,192,0.252,193,0.252,194,0.252,195,0.252,196,0.252,197,0.252,198,0.428,199,0.252,200,0.252,201,0.252,202,0.252,203,0.252,204,0.252,205,0.252,206,0.252,207,0.252,208,0.322,209,0.018,210,0.018,215,0.959,219,1.31,222,1.128,234,1.107,235,0.959,245,1.144,252,2.709,256,1.28,274,2.374,313,1.107,314,1.524,315,1.524,322,1.03,400,1.924,405,1.758,505,2.42,506,1.924,539,3.269,572,2.374,830,5.105,831,4.597,832,4.597,840,4.266,851,3.265,888,4.077,889,4.557,890,2.374,891,4.43,892,4.43,893,5.459,894,4.43,895,4.43,896,3.218,897,3.218,898,4.43,899,3.218,900,3.218,901,5.067,902,3.218,903,3.218,904,3.218,905,3.218,906,4.43,907,3.218,908,3.218,909,2.709,910,3.218,911,3.218,912,3.218,913,3.218]],["title/components/ProfilePage.html",[0,0.298,199,0.259]],["body/components/ProfilePage.html",[0,0.478,1,0.204,2,0.177,3,0.177,4,0.261,5,0.261,6,0.126,15,0.261,16,0.382,17,0.85,20,2.7,21,0.102,22,0.299,27,0.382,28,2.7,39,0.34,40,4.183,43,0.497,45,0.622,50,0.531,51,0.029,52,0.795,65,0.389,69,1.583,75,2.765,76,0.36,79,2.466,80,0.652,81,0.613,122,1.977,162,0.382,163,0.261,164,0.177,165,0.232,169,0.788,176,0.261,177,0.382,178,0.382,179,0.529,180,0.261,181,0.669,182,0.204,183,0.204,184,0.204,185,0.204,186,0.204,187,0.204,188,0.204,189,0.204,190,0.204,191,0.204,192,0.204,193,0.204,194,0.204,195,0.204,196,0.204,197,0.204,198,0.204,199,0.389,200,0.204,201,0.204,202,0.204,203,0.204,204,0.204,205,0.204,206,0.204,207,0.204,208,0.261,209,0.016,210,0.016,213,0.898,215,1.346,216,2.086,218,4.075,219,1.192,222,1.329,224,1.425,231,1.209,232,1.722,234,0.898,235,0.778,236,1.722,237,2.817,245,1.165,254,1.425,267,1.31,269,1.31,274,2.817,313,0.898,314,1.313,315,1.313,322,0.835,367,1.722,388,2.714,391,3.279,402,2.466,403,2.466,404,1.722,408,1.722,409,1.425,410,1.31,411,1.56,412,1.425,413,1.425,414,1.425,448,1.722,454,1.722,508,1.722,535,1.722,587,2.197,650,2.197,765,4.183,833,4.183,836,2.197,843,2.197,847,2.197,848,2.197,849,2.197,851,2.971,888,4.144,914,4.632,915,4.968,916,4.968,917,4.183,918,4.968,919,2.609,920,2.609,921,2.609,922,2.609,923,2.609,924,1.925,925,2.817,926,2.609,927,2.98,928,1.925,929,2.609,930,2.609,931,4.968,932,3.817,933,3.817,934,2.609,935,3.817,936,3.817,937,2.609,938,5.286,939,2.609,940,2.197,941,2.609,942,3.817,943,2.609,944,3.817,945,3.817,946,2.609,947,2.609,948,2.609,949,2.609,950,2.609,951,3.817,952,3.817,953,3.817]],["title/components/SettingsPage.html",[0,0.298,200,0.259]],["body/components/SettingsPage.html",[0,0.469,1,0.195,2,0.169,3,0.169,4,0.249,5,0.249,6,0.12,13,2.4,15,0.249,16,0.369,20,2.905,21,0.097,22,0.289,27,0.369,39,0.328,43,0.486,45,0.6,50,0.514,51,0.029,52,0.439,64,0.643,65,0.388,66,0.643,69,1.439,70,3.106,75,2.036,76,0.33,77,1.154,78,1.154,79,2.654,80,0.6,81,0.597,86,1.134,103,2.206,111,1.852,162,0.369,163,0.249,164,0.169,165,0.222,169,1.16,176,0.249,177,0.369,178,0.369,179,0.519,180,0.249,181,0.666,182,0.195,183,0.195,184,0.195,185,0.195,186,0.195,187,0.195,188,0.195,189,0.195,190,0.195,191,0.195,192,0.195,193,0.195,194,0.195,195,0.195,196,0.195,197,0.195,198,0.195,199,0.195,200,0.381,201,0.195,202,0.195,203,0.195,204,0.195,205,0.195,206,0.195,207,0.195,208,0.249,209,0.015,210,0.015,213,0.857,215,1.1,219,1.165,222,1.372,224,1.361,231,1.154,234,0.857,235,0.742,245,1.522,267,1.25,269,1.25,270,1.489,313,1.269,314,1.671,315,1.671,322,1.181,362,4.367,388,2.654,392,1.644,400,1.489,402,2.4,403,2.967,409,2.654,410,2.604,411,1.489,412,2.654,413,2.654,414,2.654,448,2.435,450,1.644,452,2.206,465,3.207,495,2.9,496,2.9,506,1.489,512,1.644,535,1.644,538,1.838,540,1.838,543,1.644,544,3.242,545,1.838,546,1.838,547,1.838,548,2.722,549,1.838,550,1.838,553,1.838,596,1.838,678,2.722,762,2.097,794,2.097,839,2.097,909,2.097,924,1.838,954,4.49,955,4.49,956,4.858,957,4.858,958,4.858,959,4.858,960,4.858,961,3.689,962,2.491,963,2.491,964,2.491,965,2.491,966,1.838,967,2.491,968,2.491,969,2.491,970,3.689,971,2.491,972,2.491,973,3.689,974,2.491,975,2.491,976,4.394,977,2.491,978,2.491,979,5.186,980,5.431,981,5.186,982,3.689,983,2.097,984,2.491,985,2.491,986,3.106,987,2.491,988,3.689,989,2.491,990,2.491,991,3.689,992,3.689,993,2.491,994,2.491,995,3.689,996,2.491,997,2.491,998,2.491,999,2.491,1000,3.689,1001,2.491,1002,2.491,1003,2.491,1004,2.491]],["title/components/ShareButton.html",[0,0.298,201,0.259]],["body/components/ShareButton.html",[0,0.522,1,0.259,2,0.225,3,0.225,4,0.331,5,0.331,6,0.16,15,0.331,16,0.452,21,0.129,22,0.354,27,0.452,39,0.402,43,0.553,45,0.597,50,0.514,51,0.028,52,0.583,64,1.326,65,0.398,66,1.326,76,0.307,80,0.557,81,0.75,119,2.182,162,0.331,163,0.331,164,0.225,165,0.294,176,0.331,177,0.452,178,0.452,179,0.553,180,0.331,181,0.682,182,0.259,183,0.259,184,0.259,185,0.259,186,0.259,187,0.259,188,0.259,189,0.259,190,0.259,191,0.259,192,0.259,193,0.259,194,0.259,195,0.259,196,0.259,197,0.259,198,0.259,199,0.259,200,0.259,201,0.433,202,0.259,203,0.259,204,0.259,205,0.259,206,0.259,207,0.259,208,0.331,209,0.018,210,0.018,222,1.329,267,1.66,269,2.266,284,1.725,299,1.977,313,1.137,314,1.553,315,1.553,322,1.059,433,4.867,437,3.8,448,2.979,449,3.8,450,2.182,451,2.784,452,1.977,453,2.784,454,2.182,455,2.784,456,2.784,461,2.784,465,3.645,495,3.392,496,2.979,543,2.979,571,2.182,572,2.439,940,2.784,983,2.784,1005,5.142,1006,5.142,1007,2.784,1008,4.514,1009,4.514,1010,4.514,1011,3.306,1012,4.514,1013,3.306,1014,3.306,1015,3.306,1016,3.306,1017,3.306,1018,3.306,1019,3.306,1020,3.306,1021,3.306,1022,3.306,1023,4.514,1024,3.306,1025,3.306]],["title/components/StencilBeer.html",[0,0.298,202,0.259]],["body/components/StencilBeer.html",[0,0.556,1,0.314,2,0.273,3,0.273,4,0.401,5,0.401,6,0.194,15,0.401,16,0.513,17,1.142,21,0.156,27,0.513,39,0.456,43,0.596,45,0.401,50,0.456,51,0.028,65,0.402,162,0.513,163,0.401,164,0.273,165,0.357,176,0.401,177,0.513,178,0.513,179,0.596,180,0.401,181,0.692,182,0.314,183,0.314,184,0.314,185,0.314,186,0.314,187,0.314,188,0.314,189,0.314,190,0.314,191,0.314,192,0.314,193,0.314,194,0.314,195,0.314,196,0.314,197,0.314,198,0.314,199,0.314,200,0.314,201,0.314,202,0.467,203,0.314,204,0.314,205,0.314,206,0.314,207,0.314,208,0.401,209,0.021,210,0.021,284,1.423,1026,4.318,1027,4.318,1028,3.376,1029,5.017,1030,5.128,1031,4.01,1032,4.01]],["title/components/StencilComponent.html",[0,0.298,203,0.259]],["body/components/StencilComponent.html",[0,0.549,1,0.302,2,0.262,3,0.262,4,0.385,5,0.385,6,0.186,15,0.385,16,0.5,21,0.15,22,0.391,27,0.5,39,0.445,43,0.587,45,0.5,50,0.522,51,0.028,65,0.401,76,0.262,80,0.475,81,0.753,162,0.385,163,0.385,164,0.262,165,0.343,169,0.795,176,0.385,177,0.5,178,0.5,179,0.587,180,0.385,181,0.69,182,0.302,183,0.302,184,0.302,185,0.302,186,0.302,187,0.302,188,0.302,189,0.302,190,0.302,191,0.302,192,0.302,193,0.302,194,0.302,195,0.302,196,0.302,197,0.302,198,0.302,199,0.302,200,0.302,201,0.302,202,0.302,203,0.46,204,0.302,205,0.302,206,0.302,207,0.302,208,0.385,209,0.02,210,0.02,338,2.887,575,2.303,576,3.298,644,3.316,646,3.686,664,3.242,1033,4.669,1034,3.242,1035,3.851,1036,3.851]],["title/components/TabsPage.html",[0,0.298,204,0.259]],["body/components/TabsPage.html",[0,0.556,1,0.314,2,0.273,3,0.273,4,0.401,5,0.401,6,0.194,15,0.401,16,0.513,21,0.156,27,0.513,39,0.456,43,0.596,45,0.401,50,0.456,51,0.028,65,0.402,162,0.513,163,0.401,164,0.273,165,0.357,176,0.401,177,0.513,178,0.513,179,0.596,180,0.401,181,0.692,182,0.314,183,0.314,184,0.314,185,0.314,186,0.314,187,0.314,188,0.314,189,0.314,190,0.314,191,0.314,192,0.314,193,0.314,194,0.314,195,0.314,196,0.314,197,0.314,198,0.314,199,0.314,200,0.314,201,0.314,202,0.314,203,0.314,204,0.467,205,0.314,206,0.314,207,0.314,208,0.401,209,0.021,210,0.021,213,1.379,215,1.529,256,1.596,505,2.802,506,2.398,841,2.959,986,4.318,1037,4.318,1038,4.318]],["title/components/UserProfile.html",[0,0.298,205,0.259]],["body/components/UserProfile.html",[0,0.5,1,0.23,2,0.2,3,0.2,4,0.294,5,0.294,6,0.142,15,0.294,16,0.416,17,0.925,21,0.114,22,0.325,27,0.416,39,0.37,43,0.525,45,0.604,50,0.546,51,0.029,64,1.072,65,0.395,66,1.072,69,1.536,76,0.328,80,0.595,81,0.655,86,1.245,111,1.473,122,2.402,134,2.421,162,0.416,163,0.294,164,0.2,165,0.261,169,1.22,176,0.294,177,0.416,178,0.416,179,0.554,180,0.294,181,0.676,182,0.23,183,0.23,184,0.23,185,0.23,186,0.23,187,0.23,188,0.23,189,0.23,190,0.23,191,0.23,192,0.23,193,0.23,194,0.23,195,0.23,196,0.23,197,0.23,198,0.23,199,0.23,200,0.23,201,0.23,202,0.23,203,0.23,204,0.23,205,0.411,206,0.23,207,0.23,208,0.294,209,0.017,210,0.017,219,1.258,222,1.367,227,2.47,234,1.009,235,0.874,245,1.525,256,1.919,273,2.47,284,1.594,406,1.359,446,2.884,537,2.164,560,3.065,807,3.869,851,2.484,927,2.742,928,2.164,1039,3.671,1040,4.53,1041,2.164,1042,4.153,1043,4.415,1044,4.153,1045,4.153,1046,2.933,1047,2.933,1048,4.153,1049,2.933,1050,4.153,1051,2.933,1052,2.933,1053,2.933,1054,2.933,1055,2.933,1056,2.933,1057,2.933,1058,2.933,1059,2.933,1060,2.933,1061,2.933,1062,2.47,1063,2.933,1064,4.153,1065,4.153,1066,4.153,1067,2.933,1068,4.153,1069,2.933,1070,2.933,1071,2.933,1072,2.47,1073,2.933,1074,2.933,1075,2.933,1076,2.47,1077,2.933,1078,2.933,1079,2.47,1080,2.933,1081,2.933,1082,2.933]],["title/components/UsersList.html",[0,0.298,206,0.259]],["body/components/UsersList.html",[0,0.536,1,0.279,2,0.242,3,0.242,4,0.356,5,0.356,6,0.172,15,0.356,16,0.475,17,1.057,21,0.139,22,0.372,27,0.475,39,0.423,43,0.57,45,0.57,50,0.528,51,0.028,52,0.628,64,0.92,65,0.399,66,0.92,76,0.363,80,0.586,81,0.725,86,1.378,122,2.516,162,0.356,163,0.356,164,0.242,165,0.317,176,0.356,177,0.475,178,0.633,179,0.57,180,0.356,181,0.686,182,0.279,183,0.279,184,0.279,185,0.279,186,0.279,187,0.279,188,0.279,189,0.279,190,0.279,191,0.279,192,0.279,193,0.279,194,0.279,195,0.279,196,0.279,197,0.279,198,0.279,199,0.279,200,0.279,201,0.279,202,0.279,203,0.279,204,0.279,205,0.279,206,0.446,207,0.279,208,0.356,209,0.019,210,0.019,217,2.105,253,1.946,254,1.946,571,2.352,575,2.131,576,3.134,577,3.503,579,3,801,3,845,3,851,2.839,927,2.352,1034,3,1039,3.546,1043,3.997,1083,4.993,1084,4.747,1085,4.747,1086,3.563,1087,3.563,1088,3.563,1089,3.563,1090,3.563,1091,3]],["title/components/UsersPage.html",[0,0.298,207,0.259]],["body/components/UsersPage.html",[0,0.503,1,0.233,2,0.202,3,0.202,4,0.298,5,0.298,6,0.144,15,0.298,16,0.42,21,0.116,22,0.329,27,0.42,28,2.906,39,0.373,43,0.528,45,0.625,50,0.539,51,0.029,52,0.739,64,0.768,65,0.394,66,0.768,69,1.348,75,2.251,76,0.378,80,0.6,81,0.57,116,2.292,122,2.297,123,2.251,162,0.298,163,0.298,164,0.202,165,0.265,169,1.089,176,0.298,177,0.42,178,0.606,179,0.557,180,0.298,181,0.677,182,0.233,183,0.233,184,0.233,185,0.233,186,0.233,187,0.233,188,0.233,189,0.233,190,0.233,191,0.233,192,0.233,193,0.233,194,0.233,195,0.233,196,0.233,197,0.233,198,0.233,199,0.233,200,0.233,201,0.233,202,0.233,203,0.233,204,0.233,205,0.233,206,0.233,207,0.413,208,0.298,209,0.017,210,0.017,213,1.023,215,1.25,217,1.951,219,1.266,222,0.663,224,1.625,231,1.378,232,1.964,233,2.195,234,1.023,235,0.887,236,1.964,245,0.768,392,1.964,618,2.505,619,2.505,620,2.505,621,2.505,622,4.443,623,4.091,624,2.505,625,2.195,659,2.505,661,2.505,841,2.195,924,2.195,927,2.769,928,2.195,1039,3.775,1079,2.505,1092,4.658,1093,5.773,1094,5.564,1095,5.277,1096,4.195,1097,5.277,1098,2.975,1099,4.195,1100,2.975,1101,2.975,1102,2.975,1103,2.975,1104,2.975,1105,4.195,1106,2.975,1107,2.505,1108,4.195,1109,4.195,1110,2.975,1111,4.195,1112,2.975,1113,2.975,1114,2.975,1115,2.975,1116,2.975,1117,2.975,1118,2.975,1119,2.975,1120,2.975,1121,2.975,1122,4.195,1123,2.975,1124,4.195]],["title/components/barList.html",[0,0.298,184,0.259]],["body/components/barList.html",[0,0.526,1,0.264,2,0.229,3,0.229,4,0.337,5,0.337,6,0.163,15,0.337,16,0.457,17,1.018,21,0.131,22,0.358,27,0.557,39,0.407,43,0.557,45,0.557,50,0.518,51,0.029,52,0.593,64,0.869,65,0.397,66,0.869,76,0.353,80,0.564,81,0.705,86,1.548,89,4.685,134,2.605,162,0.457,163,0.337,164,0.229,165,0.3,176,0.337,177,0.457,178,0.625,179,0.557,180,0.337,181,0.683,182,0.264,183,0.264,184,0.436,185,0.264,186,0.264,187,0.264,188,0.264,189,0.264,190,0.264,191,0.264,192,0.264,193,0.264,194,0.264,195,0.264,196,0.264,197,0.264,198,0.264,199,0.264,200,0.264,201,0.264,202,0.264,203,0.264,204,0.264,205,0.264,206,0.264,207,0.264,208,0.337,209,0.019,210,0.019,217,2.058,253,1.84,254,1.84,280,2.965,290,3.84,294,3.848,295,4.685,406,1.56,418,2.836,571,2.223,575,2.014,576,3.017,577,3.373,578,2.836,580,2.836,1091,2.836,1125,4.898,1126,4.571,1127,4.571,1128,3.368,1129,3.368,1130,3.368,1131,3.368,1132,5.189,1133,3.368,1134,3.368,1135,3.368,1136,3.368,1137,3.368,1138,4.571,1139,3.368,1140,3.368]],["title/coverage.html",[1141,3.797]],["body/coverage.html",[0,0.608,1,0.222,6,0.137,7,2.387,8,2.387,9,2.387,51,0.028,76,0.193,111,3.471,141,2.387,182,0.222,183,0.222,184,0.222,185,0.222,186,0.222,187,0.222,188,0.222,189,0.222,190,0.222,191,0.222,192,0.222,193,0.222,194,0.222,195,0.222,196,0.222,197,0.222,198,0.222,199,0.222,200,0.222,201,0.222,202,0.222,203,0.222,204,0.222,205,0.222,206,0.222,207,0.222,209,0.017,210,0.017,211,2.991,212,2.991,213,2.247,215,1.539,235,1.883,264,1.423,279,2.029,280,1.313,281,3.123,284,0.786,287,1.695,290,3.123,291,2.387,292,2.387,387,2.387,426,2.984,427,2.387,428,2.991,432,2.092,462,2.991,463,3.123,505,1.549,574,2.387,575,3.088,582,2.387,610,2.092,611,2.092,644,3.267,645,2.991,668,2.991,669,2.991,767,2.387,768,2.387,769,3.123,828,2.991,829,2.991,855,3.088,856,2.387,861,2.991,878,2.387,888,3.408,889,2.991,890,2.991,914,2.991,925,2.092,954,2.991,955,2.991,966,2.092,1005,2.387,1006,2.387,1007,2.387,1026,2.387,1027,2.387,1028,2.387,1033,2.387,1037,2.387,1038,2.387,1039,3.267,1040,2.991,1041,2.991,1083,2.387,1092,2.991,1125,2.387,1141,2.387,1142,2.092,1143,2.835,1144,2.835,1145,2.835,1146,4.732,1147,4.795,1148,6.69,1149,2.835,1150,4.732,1151,5.163,1152,2.835,1153,2.835,1154,4.732,1155,2.991,1156,2.991,1157,4.053,1158,4.732,1159,2.835,1160,2.835,1161,4.053,1162,4.053,1163,4.053,1164,4.347,1165,4.414,1166,2.387,1167,4.347,1168,4.414,1169,2.387,1170,2.387,1171,2.387,1172,4.347,1173,2.387,1174,2.387,1175,2.835,1176,2.835]],["title/components/favoritesPage.html",[0,0.298,190,0.259]],["body/components/favoritesPage.html",[0,0.529,1,0.268,2,0.233,3,0.233,4,0.343,5,0.343,6,0.166,15,0.343,16,0.463,17,1.03,21,0.134,22,0.362,27,0.463,39,0.412,43,0.561,45,0.586,50,0.537,51,0.029,52,0.604,65,0.397,69,1.453,76,0.233,80,0.571,134,2.628,162,0.463,163,0.343,164,0.233,165,0.305,169,0.955,176,0.343,177,0.463,178,0.463,179,0.586,180,0.343,181,0.684,182,0.268,183,0.268,184,0.268,185,0.268,186,0.268,187,0.268,188,0.268,189,0.268,190,0.439,191,0.268,192,0.268,193,0.268,194,0.268,195,0.268,196,0.268,197,0.268,198,0.268,199,0.268,200,0.268,201,0.268,202,0.268,203,0.268,204,0.268,205,0.268,206,0.268,207,0.268,208,0.343,209,0.019,210,0.019,213,1.179,215,1.379,216,2.527,219,1.345,222,1.166,224,1.872,228,2.886,231,1.588,234,1.179,235,1.022,284,1.624,405,1.872,406,1.588,446,2.766,537,4.136,1062,2.886,1072,4.719,1076,3.894,1107,3.894,1155,4.45,1156,4.45,1177,5.605,1178,5.605,1179,4.625,1180,3.427,1181,3.427,1182,4.625,1183,3.427]],["title/miscellaneous/functions.html",[1168,2.93,1184,1.819]],["body/miscellaneous/functions.html",[21,0.184,51,0.027,64,1.629,65,0.366,66,1.629,209,0.023,210,0.023,505,3.324,551,3.485,925,4.49,966,4.188,1165,4.765,1167,3.976,1168,3.485,1169,5.123,1170,5.123,1171,4.779,1172,3.976,1173,4.779,1174,4.779,1184,3.117,1185,6.313,1186,6.313,1187,4.723,1188,5.676,1189,4.723,1190,4.723,1191,5.676,1192,4.723,1193,4.723,1194,4.723,1195,4.723,1196,4.723]],["title/index.html",[21,0.107,345,1.648,1197,2.033]],["body/index.html",[0,0.533,22,0.394,39,0.448,51,0.026,165,0.448,209,0.024,210,0.024,279,2.159,284,1.397,345,3.01,540,3.714,560,3.714,1029,4.238,1142,4.612,1197,3.714,1198,5.894,1199,6.251,1200,5.033,1201,5.894,1202,5.033,1203,5.033,1204,5.033,1205,5.033,1206,5.033,1207,5.033,1208,5.894,1209,5.894]],["title/license.html",[345,1.648,1197,2.033,1210,2.32]],["body/license.html",[6,0.218,13,3.016,51,0.023,67,2.09,105,3.799,209,0.023,210,0.023,263,3.329,322,1.445,454,2.978,558,3.329,807,3.329,917,4.648,1142,3.329,1210,3.799,1211,4.512,1212,5.965,1213,4.512,1214,4.512,1215,4.512,1216,5.521,1217,4.512,1218,4.512,1219,4.512,1220,4.512,1221,5.521,1222,4.512,1223,6.216,1224,6.683,1225,4.512,1226,5.521,1227,5.965,1228,4.512,1229,5.965,1230,5.521,1231,4.512,1232,4.512,1233,4.512,1234,4.512,1235,4.512,1236,4.512,1237,4.512,1238,4.512,1239,4.512,1240,4.512,1241,4.512,1242,4.512,1243,5.521,1244,4.512,1245,4.512,1246,5.521,1247,4.512,1248,4.512,1249,4.512,1250,4.512,1251,4.512,1252,4.512,1253,4.512,1254,4.512,1255,4.512,1256,4.512,1257,4.512,1258,4.512,1259,4.512,1260,4.512,1261,4.512,1262,4.512,1263,4.512,1264,4.512,1265,4.512]],["title/modules.html",[1266,3.797]],["body/modules.html",[51,0.025,209,0.025,210,0.025,1266,4.536]],["title/overview.html",[1267,3.797]],["body/overview.html",[0,0.483,51,0.025,209,0.025,210,0.025,279,2.291,1267,4.498,1268,5.342,1269,5.342]],["title/miscellaneous/variables.html",[1147,2.93,1184,1.819]],["body/miscellaneous/variables.html",[21,0.131,50,0.579,51,0.029,76,0.442,77,2.573,78,2.573,86,1.176,116,1.83,123,2.11,169,1.332,209,0.019,210,0.019,211,2.472,212,2.472,213,2.265,215,1.655,222,0.746,235,2.055,245,1.433,282,2.003,299,3.32,336,2.472,342,2.724,343,2.472,426,1.83,432,3.818,462,2.472,463,3.006,584,2.821,610,3.818,611,3.818,614,2.821,635,2.821,644,2.724,645,2.472,668,2.472,669,3.36,769,3.006,828,2.472,829,2.472,855,2.003,861,2.472,888,3.006,889,2.472,890,3.36,914,2.472,954,2.472,955,2.472,1039,2.724,1040,2.472,1041,3.36,1092,2.472,1147,2.472,1155,2.472,1156,2.472,1164,2.821,1165,4.285,1166,4.357,1184,2.211,1270,5.552,1271,4.554,1272,3.35,1273,3.35,1274,3.35,1275,4.554,1276,3.35,1277,3.35,1278,4.554,1279,3.35,1280,5.552,1281,5.552,1282,5.552,1283,3.35,1284,5.174,1285,5.174,1286,5.174,1287,5.807,1288,3.35,1289,3.35,1290,5.174,1291,3.35,1292,3.35,1293,3.35,1294,3.35,1295,3.35]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":111,"title":{},"body":{"components/AMRating.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"components/UserProfile.html":{},"coverage.html":{}}}],["0\",\"y1",{"_index":115,"title":{},"body":{"components/AMRating.html":{}}}],["0\",\"y2",{"_index":114,"title":{},"body":{"components/AMRating.html":{}}}],["0.2",{"_index":520,"title":{},"body":{"components/BeerItem.html":{}}}],["0.447174185",{"_index":148,"title":{},"body":{"components/AMRating.html":{}}}],["0/1",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":94,"title":{},"body":{"components/AMRating.html":{}}}],["0ebd6396901832ee0176a008410ef5d9",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":116,"title":{},"body":{"components/AMRating.html":{},"components/BarPage.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["1\",\"y1",{"_index":113,"title":{},"body":{"components/AMRating.html":{}}}],["100",{"_index":158,"title":{},"body":{"components/AMRating.html":{}}}],["1000",{"_index":413,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["112",{"_index":604,"title":{},"body":{"components/BeerPage.html":{}}}],["18.6107374",{"_index":144,"title":{},"body":{"components/AMRating.html":{}}}],["2",{"_index":595,"title":{},"body":{"components/BeerPage.html":{}}}],["2.9",{"_index":1135,"title":{},"body":{"components/barList.html":{}}}],["20",{"_index":602,"title":{},"body":{"components/BeerPage.html":{}}}],["2017",{"_index":1214,"title":{},"body":{"license.html":{}}}],["21/22",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["24.2235871",{"_index":146,"title":{},"body":{"components/AMRating.html":{}}}],["27",{"_index":1268,"title":{},"body":{"overview.html":{}}}],["29.7745751",{"_index":151,"title":{},"body":{"components/AMRating.html":{}}}],["3",{"_index":1269,"title":{},"body":{"overview.html":{}}}],["300",{"_index":531,"title":{},"body":{"components/BeerItem.html":{}}}],["31",{"_index":600,"title":{},"body":{"components/BeerPage.html":{}}}],["33.3053687",{"_index":150,"title":{},"body":{"components/AMRating.html":{}}}],["34.5491503",{"_index":149,"title":{},"body":{"components/AMRating.html":{}}}],["4.0",{"_index":1133,"title":{},"body":{"components/barList.html":{}}}],["48",{"_index":142,"title":{},"body":{"components/AMRating.html":{}}}],["5",{"_index":127,"title":{},"body":{"components/AMRating.html":{}}}],["500",{"_index":638,"title":{},"body":{"components/BeerPage.html":{}}}],["57.7254249",{"_index":147,"title":{},"body":{"components/AMRating.html":{}}}],["62.6946313",{"_index":152,"title":{},"body":{"components/AMRating.html":{}}}],["666666",{"_index":97,"title":{},"body":{"components/AMRating.html":{}}}],["7",{"_index":356,"title":{},"body":{"components/BarDirections.html":{}}}],["71.7764129",{"_index":154,"title":{},"body":{"components/AMRating.html":{}}}],["75",{"_index":143,"title":{},"body":{"components/AMRating.html":{}}}],["77.3892626",{"_index":155,"title":{},"body":{"components/AMRating.html":{}}}],["82",{"_index":606,"title":{},"body":{"components/BeerPage.html":{}}}],["90.4508497",{"_index":145,"title":{},"body":{"components/AMRating.html":{}}}],["93",{"_index":608,"title":{},"body":{"components/BeerPage.html":{}}}],["95",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["95.5528258",{"_index":153,"title":{},"body":{"components/AMRating.html":{}}}],["abov",{"_index":1242,"title":{},"body":{"license.html":{}}}],["abv",{"_index":285,"title":{},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"interfaces/Labels.html":{}}}],["action",{"_index":1261,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":208,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["addintersectionobserv",{"_index":469,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["address",{"_index":294,"title":{},"body":{"components/BarDirections.html":{},"components/barList.html":{}}}],["advanc",{"_index":979,"title":{},"body":{"components/SettingsPage.html":{}}}],["alert",{"_index":496,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["alert.pres",{"_index":553,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["alertctrl",{"_index":465,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["alldata",{"_index":1056,"title":{},"body":{"components/UserProfile.html":{}}}],["alldata[0",{"_index":1061,"title":{},"body":{"components/UserProfile.html":{}}}],["alldata[1",{"_index":1059,"title":{},"body":{"components/UserProfile.html":{}}}],["alldata[1].length",{"_index":1058,"title":{},"body":{"components/UserProfile.html":{}}}],["allow",{"_index":85,"title":{},"body":{"components/AMRating.html":{}}}],["allowhalfr",{"_index":23,"title":{},"body":{"components/AMRating.html":{}}}],["alt",{"_index":773,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["amrat",{"_index":1,"title":{"components/AMRating.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["and/or",{"_index":1236,"title":{},"body":{"license.html":{}}}],["anim",{"_index":257,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{}}}],["anonym",{"_index":541,"title":{},"body":{"components/BeerItem.html":{}}}],["any).dismiss",{"_index":712,"title":{},"body":{"components/FeedPageModal.html":{}}}],["any).firebase.auth().currentuser.email",{"_index":565,"title":{},"body":{"components/BeerItem.html":{}}}],["any).shar",{"_index":449,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["any).storag",{"_index":967,"title":{},"body":{"components/SettingsPage.html":{}}}],["any).storage.estim",{"_index":969,"title":{},"body":{"components/SettingsPage.html":{}}}],["any).style.opac",{"_index":524,"title":{},"body":{"components/BeerItem.html":{}}}],["anywhere.herokuapp.com/http://api.brewerydb.com/v2/beer/${id}?key=${key",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anywhere.herokuapp.com/http://api.brewerydb.com/v2/beers?key=${key}&p=${page}&styleid=${styl",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anywhere.herokuapp.com/http://api.brewerydb.com/v2/search?key=${key}&q=${searchterm}&type=b",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anywhere.herokuapp.com/http://api.brewerydb.com/v2/styles?key=${key",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["architectur",{"_index":1205,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1265,"title":{},"body":{"license.html":{}}}],["array",{"_index":134,"title":{},"body":{"components/AMRating.html":{},"components/BarPage.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/UserProfile.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["associ",{"_index":1225,"title":{},"body":{"license.html":{}}}],["async",{"_index":222,"title":{},"body":{"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":214,"title":{},"body":{"components/AuthPage.html":{}}}],["author",{"_index":558,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"license.html":{}}}],["authpag",{"_index":182,"title":{"components/AuthPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["avail",{"_index":119,"title":{},"body":{"components/AMRating.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/ShareButton.html":{}}}],["await",{"_index":245,"title":{},"body":{"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":385,"title":{},"body":{"components/BarDirections.html":{}}}],["back",{"_index":825,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["bad",{"_index":1137,"title":{},"body":{"components/barList.html":{}}}],["bandwith",{"_index":804,"title":{},"body":{"components/LazyImg.html":{}}}],["bar",{"_index":280,"title":{"interfaces/Bar.html":{}},"body":{"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{},"components/barList.html":{},"coverage.html":{}}}],["bar.nam",{"_index":1138,"title":{},"body":{"components/barList.html":{}}}],["bar.name.tolowercase().indexof(term.tolowercas",{"_index":425,"title":{},"body":{"components/BarPage.html":{}}}],["bar.rat",{"_index":1132,"title":{},"body":{"components/barList.html":{}}}],["bar.vicin",{"_index":1139,"title":{},"body":{"components/barList.html":{}}}],["bardirect",{"_index":183,"title":{"components/BarDirections.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["barlist",{"_index":184,"title":{"components/barList.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["barpag",{"_index":185,"title":{"components/BarPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["base64str",{"_index":1194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["be",{"_index":60,"title":{},"body":{"components/AMRating.html":{}}}],["beer",{"_index":284,"title":{"interfaces/Beer.html":{}},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/UserProfile.html":{},"coverage.html":{},"components/favoritesPage.html":{},"index.html":{}}}],["beer.css",{"_index":1030,"title":{},"body":{"components/StencilBeer.html":{}}}],["beer.ref.delet",{"_index":567,"title":{},"body":{"components/BeerItem.html":{}}}],["beer.tsx",{"_index":1028,"title":{},"body":{"components/StencilBeer.html":{},"coverage.html":{}}}],["beer.tsx:10",{"_index":1031,"title":{},"body":{"components/StencilBeer.html":{}}}],["beer/stencil",{"_index":1027,"title":{},"body":{"components/StencilBeer.html":{},"coverage.html":{}}}],["beerdelet",{"_index":466,"title":{},"body":{"components/BeerItem.html":{}}}],["beerdetail",{"_index":186,"title":{"components/BeerDetail.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["beerdoc",{"_index":1073,"title":{},"body":{"components/UserProfile.html":{}}}],["beerdoc.foreach((doc",{"_index":1075,"title":{},"body":{"components/UserProfile.html":{}}}],["beerid",{"_index":431,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerItem.html":{}}}],["beeritem",{"_index":187,"title":{"components/BeerItem.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["beerlist",{"_index":188,"title":{"components/BeerList.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["beernamevalu",{"_index":671,"title":{},"body":{"components/FeedPageModal.html":{}}}],["beerpag",{"_index":189,"title":{"components/BeerPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["befor",{"_index":799,"title":{},"body":{"components/LazyImg.html":{}}}],["below",{"_index":791,"title":{},"body":{"components/LazyImg.html":{}}}],["bezier(.36,.66,.04,1",{"_index":534,"title":{},"body":{"components/BeerItem.html":{}}}],["bit",{"_index":615,"title":{},"body":{"components/BeerPage.html":{}}}],["blah",{"_index":550,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["bodi",{"_index":339,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{}}}],["boolean",{"_index":75,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UsersPage.html":{}}}],["bottom",{"_index":108,"title":{},"body":{"components/AMRating.html":{}}}],["box",{"_index":160,"title":{},"body":{"components/AMRating.html":{}}}],["browser",{"_index":991,"title":{},"body":{"components/SettingsPage.html":{}}}],["build",{"_index":1207,"title":{},"body":{"index.html":{}}}],["button",{"_index":543,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["button.tsx",{"_index":1007,"title":{},"body":{"components/ShareButton.html":{},"coverage.html":{}}}],["button.tsx:10",{"_index":1016,"title":{},"body":{"components/ShareButton.html":{}}}],["button.tsx:12",{"_index":1015,"title":{},"body":{"components/ShareButton.html":{}}}],["button.tsx:27",{"_index":1013,"title":{},"body":{"components/ShareButton.html":{}}}],["button.tsx:31",{"_index":1011,"title":{},"body":{"components/ShareButton.html":{}}}],["button.tsx:39",{"_index":1014,"title":{},"body":{"components/ShareButton.html":{}}}],["button.tsx:9",{"_index":1017,"title":{},"body":{"components/ShareButton.html":{}}}],["button/shar",{"_index":1006,"title":{},"body":{"components/ShareButton.html":{},"coverage.html":{}}}],["byte",{"_index":1192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":1213,"title":{},"body":{"license.html":{}}}],["cach",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cacheddata",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":810,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["camera",{"_index":732,"title":{},"body":{"components/FeedPageModal.html":{}}}],["cancel",{"_index":544,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["cant",{"_index":755,"title":{},"body":{"components/FeedPageModal.html":{}}}],["card",{"_index":522,"title":{},"body":{"components/BeerItem.html":{}}}],["catch",{"_index":269,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["center",{"_index":354,"title":{},"body":{"components/BarDirections.html":{}}}],["chang",{"_index":70,"title":{},"body":{"components/AMRating.html":{},"components/SettingsPage.html":{}}}],["changed(ev",{"_index":961,"title":{},"body":{"components/SettingsPage.html":{}}}],["charg",{"_index":1220,"title":{},"body":{"license.html":{}}}],["check",{"_index":453,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["checkanon",{"_index":505,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPage.html":{},"components/ProfileHeader.html":{},"components/TabsPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checked={this.offlinecheck",{"_index":1004,"title":{},"body":{"components/SettingsPage.html":{}}}],["checkstat",{"_index":958,"title":{},"body":{"components/SettingsPage.html":{}}}],["chrome",{"_index":1021,"title":{},"body":{"components/ShareButton.html":{}}}],["claim",{"_index":1257,"title":{},"body":{"license.html":{}}}],["class",{"_index":165,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{},"index.html":{}}}],["clickeddetail",{"_index":879,"title":{},"body":{"components/PostItem.html":{}}}],["clickeddetail(post",{"_index":880,"title":{},"body":{"components/PostItem.html":{}}}],["closepopov",{"_index":831,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfileHeader.html":{}}}],["color",{"_index":89,"title":{},"body":{"components/AMRating.html":{},"components/barList.html":{}}}],["color='danger'>logout",{"_index":953,"title":{},"body":{"components/ProfilePage.html":{}}}],["color='danger'>unsubscrib",{"_index":947,"title":{},"body":{"components/ProfilePage.html":{}}}],["color='dark",{"_index":641,"title":{},"body":{"components/BeerPage.html":{}}}],["color='primari",{"_index":1091,"title":{},"body":{"components/UsersList.html":{},"components/barList.html":{}}}],["color='primary'>add",{"_index":766,"title":{},"body":{"components/FeedPageModal.html":{}}}],["color='primary'>get",{"_index":949,"title":{},"body":{"components/ProfilePage.html":{}}}],["color='primary'>login",{"_index":276,"title":{},"body":{"components/AuthPage.html":{}}}],["coloroff",{"_index":24,"title":{},"body":{"components/AMRating.html":{}}}],["coloron",{"_index":25,"title":{},"body":{"components/AMRating.html":{}}}],["coloroutlin",{"_index":26,"title":{},"body":{"components/AMRating.html":{}}}],["compodoc",{"_index":1198,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":180,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["componentdidload",{"_index":219,"title":{},"body":{"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{},"components/favoritesPage.html":{}}}],["componentwillload",{"_index":40,"title":{},"body":{"components/AMRating.html":{},"components/ProfilePage.html":{}}}],["componentwillupd",{"_index":777,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["condit",{"_index":1241,"title":{},"body":{"license.html":{}}}],["connect",{"_index":322,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"license.html":{}}}],["console.error(err",{"_index":271,"title":{},"body":{"components/AuthPage.html":{},"components/BeerPage.html":{}}}],["console.log('chang",{"_index":734,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log('componentwillupd",{"_index":809,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["console.log('confirm",{"_index":549,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["console.log('her",{"_index":535,"title":{},"body":{"components/BeerItem.html":{},"components/PopoverPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["console.log('i",{"_index":717,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log('offlin",{"_index":977,"title":{},"body":{"components/SettingsPage.html":{}}}],["console.log('tak",{"_index":724,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log((ev.target",{"_index":735,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log(checkanon",{"_index":907,"title":{},"body":{"components/ProfileHeader.html":{}}}],["console.log(data",{"_index":417,"title":{},"body":{"components/BarPage.html":{}}}],["console.log(db",{"_index":241,"title":{},"body":{"components/AuthPage.html":{}}}],["console.log(err",{"_index":445,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerPage.html":{}}}],["console.log(ev",{"_index":909,"title":{},"body":{"components/ProfileHeader.html":{},"components/SettingsPage.html":{}}}],["console.log(event.detail.valu",{"_index":721,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log(event.target.localnam",{"_index":718,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log(firebas",{"_index":238,"title":{},"body":{"components/AuthPage.html":{}}}],["console.log(fullus",{"_index":1078,"title":{},"body":{"components/UserProfile.html":{}}}],["console.log(image.getattribute('data",{"_index":816,"title":{},"body":{"components/LazyImg.html":{}}}],["console.log(location.protocol",{"_index":262,"title":{},"body":{"components/AuthPage.html":{}}}],["console.log(nam",{"_index":1063,"title":{},"body":{"components/UserProfile.html":{}}}],["console.log(offlinest",{"_index":975,"title":{},"body":{"components/SettingsPage.html":{}}}],["console.log(perm",{"_index":943,"title":{},"body":{"components/ProfilePage.html":{}}}],["console.log(respons",{"_index":373,"title":{},"body":{"components/BarDirections.html":{}}}],["console.log(temppost",{"_index":663,"title":{},"body":{"components/FeedPage.html":{}}}],["console.log(term",{"_index":422,"title":{},"body":{"components/BarPage.html":{}}}],["console.log(this.b",{"_index":1060,"title":{},"body":{"components/UserProfile.html":{}}}],["console.log(this.bar",{"_index":423,"title":{},"body":{"components/BarPage.html":{}}}],["console.log(this.directionsleg",{"_index":376,"title":{},"body":{"components/BarDirections.html":{}}}],["console.log(this.imagesrc",{"_index":745,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log(this.post",{"_index":884,"title":{},"body":{"components/PostItem.html":{}}}],["console.log(this.postvalu",{"_index":715,"title":{},"body":{"components/FeedPageModal.html":{}}}],["console.log(this.us",{"_index":1120,"title":{},"body":{"components/UsersPage.html":{}}}],["console.log(us",{"_index":1069,"title":{},"body":{"components/UserProfile.html":{}}}],["console.log(user.data",{"_index":1081,"title":{},"body":{"components/UserProfile.html":{}}}],["const",{"_index":169,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/StencilComponent.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":332,"title":{},"body":{"components/BarDirections.html":{},"components/BeerPage.html":{}}}],["context",{"_index":236,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["contract",{"_index":1262,"title":{},"body":{"license.html":{}}}],["control",{"_index":315,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["cool",{"_index":455,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["copi",{"_index":1223,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1212,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":1141,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":54,"title":{},"body":{"components/AMRating.html":{}}}],["createratingitem",{"_index":41,"title":{},"body":{"components/AMRating.html":{}}}],["cssclass",{"_index":546,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["cubic",{"_index":533,"title":{},"body":{"components/BeerItem.html":{}}}],["current",{"_index":990,"title":{},"body":{"components/SettingsPage.html":{}}}],["currentstyl",{"_index":583,"title":{},"body":{"components/BeerPage.html":{}}}],["currentus",{"_index":1079,"title":{},"body":{"components/UserProfile.html":{},"components/UsersPage.html":{}}}],["currentuser.email",{"_index":1109,"title":{},"body":{"components/UsersPage.html":{}}}],["damag",{"_index":1258,"title":{},"body":{"license.html":{}}}],["danger",{"_index":758,"title":{},"body":{"components/FeedPageModal.html":{}}}],["data",{"_index":342,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"miscellaneous/variables.html":{}}}],["data.data",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.results[0].geometry.location.lat",{"_index":350,"title":{},"body":{"components/BarDirections.html":{}}}],["data.results[0].geometry.location.lng",{"_index":351,"title":{},"body":{"components/BarDirections.html":{}}}],["data[0",{"_index":515,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["data[0].isintersect",{"_index":516,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["db",{"_index":239,"title":{},"body":{"components/AuthPage.html":{}}}],["db.collection('users').add",{"_index":248,"title":{},"body":{"components/AuthPage.html":{}}}],["deal",{"_index":1226,"title":{},"body":{"license.html":{}}}],["debounc",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debounce(fn",{"_index":1187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decim",{"_index":1191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declar",{"_index":234,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{},"components/favoritesPage.html":{}}}],["decor",{"_index":80,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilComponent.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["default",{"_index":77,"title":{},"body":{"components/AMRating.html":{},"components/BarDirections.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":45,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["delay",{"_index":1188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deleteb",{"_index":470,"title":{},"body":{"components/BeerItem.html":{}}}],["deletebeer(b",{"_index":479,"title":{},"body":{"components/BeerItem.html":{}}}],["deletebeerhelp",{"_index":471,"title":{},"body":{"components/BeerItem.html":{}}}],["deletebeerhelper(passedb",{"_index":481,"title":{},"body":{"components/BeerItem.html":{}}}],["demo",{"_index":1199,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":1204,"title":{},"body":{"index.html":{}}}],["descript",{"_index":10,"title":{},"body":{"components/AMRating.html":{},"interfaces/Bar.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"interfaces/Labels.html":{}}}],["desktop",{"_index":1020,"title":{},"body":{"components/ShareButton.html":{}}}],["dest",{"_index":295,"title":{},"body":{"components/BarDirections.html":{},"components/barList.html":{}}}],["destin",{"_index":359,"title":{},"body":{"components/BarDirections.html":{}}}],["detail",{"_index":429,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/PostDetail.html":{},"components/PostItem.html":{}}}],["detail.css",{"_index":430,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx",{"_index":428,"title":{},"body":{"components/BeerDetail.html":{},"components/PostDetail.html":{},"coverage.html":{}}}],["detail.tsx:11",{"_index":857,"title":{},"body":{"components/PostDetail.html":{}}}],["detail.tsx:12",{"_index":440,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:14",{"_index":442,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:15",{"_index":441,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:17",{"_index":434,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:27",{"_index":439,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:32",{"_index":435,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:36",{"_index":438,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:47",{"_index":436,"title":{},"body":{"components/BeerDetail.html":{}}}],["detail.tsx:9",{"_index":858,"title":{},"body":{"components/PostDetail.html":{}}}],["detail/b",{"_index":427,"title":{},"body":{"components/BeerDetail.html":{},"coverage.html":{}}}],["detail/post",{"_index":856,"title":{},"body":{"components/PostDetail.html":{},"coverage.html":{}}}],["determin",{"_index":83,"title":{},"body":{"components/AMRating.html":{}}}],["devic",{"_index":998,"title":{},"body":{"components/SettingsPage.html":{}}}],["direct",{"_index":27,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["directions.css",{"_index":293,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx",{"_index":292,"title":{},"body":{"components/BarDirections.html":{},"coverage.html":{}}}],["directions.tsx:10",{"_index":307,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:11",{"_index":316,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:13",{"_index":309,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:15",{"_index":321,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:16",{"_index":318,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:17",{"_index":311,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:19",{"_index":303,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:28",{"_index":302,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:81",{"_index":304,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:85",{"_index":305,"title":{},"body":{"components/BarDirections.html":{}}}],["directions.tsx:9",{"_index":306,"title":{},"body":{"components/BarDirections.html":{}}}],["directions/bar",{"_index":291,"title":{},"body":{"components/BarDirections.html":{},"coverage.html":{}}}],["directionsdisplay",{"_index":357,"title":{},"body":{"components/BarDirections.html":{}}}],["directionsdisplay.setdirections(respons",{"_index":379,"title":{},"body":{"components/BarDirections.html":{}}}],["directionset",{"_index":29,"title":{},"body":{"components/AMRating.html":{}}}],["directionsleg",{"_index":296,"title":{},"body":{"components/BarDirections.html":{}}}],["directionsservic",{"_index":368,"title":{},"body":{"components/BarDirections.html":{}}}],["directionsservice.route(request",{"_index":370,"title":{},"body":{"components/BarDirections.html":{}}}],["disabl",{"_index":994,"title":{},"body":{"components/SettingsPage.html":{}}}],["disableofflin",{"_index":959,"title":{},"body":{"components/SettingsPage.html":{}}}],["discard",{"_index":757,"title":{},"body":{"components/FeedPageModal.html":{}}}],["dismiss",{"_index":679,"title":{},"body":{"components/FeedPageModal.html":{}}}],["display",{"_index":377,"title":{},"body":{"components/BarDirections.html":{}}}],["distribut",{"_index":1234,"title":{},"body":{"license.html":{}}}],["doc",{"_index":560,"title":{},"body":{"components/BeerItem.html":{},"components/UserProfile.html":{},"index.html":{}}}],["doc.data().email",{"_index":1108,"title":{},"body":{"components/UsersPage.html":{}}}],["doc.foreach((b",{"_index":566,"title":{},"body":{"components/BeerItem.html":{}}}],["doc.foreach((us",{"_index":1068,"title":{},"body":{"components/UserProfile.html":{}}}],["document",{"_index":1142,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["document.body.appendchild(this.script",{"_index":328,"title":{},"body":{"components/BarDirections.html":{}}}],["document.createelement('input",{"_index":726,"title":{},"body":{"components/FeedPageModal.html":{}}}],["document.createelement('script",{"_index":325,"title":{},"body":{"components/BarDirections.html":{}}}],["document.queryselector('ion",{"_index":843,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfilePage.html":{}}}],["document.titl",{"_index":451,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["dosearch",{"_index":611,"title":{},"body":{"components/BeerPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dosearch(searchterm",{"_index":637,"title":{},"body":{"components/BeerPage.html":{}}}],["durat",{"_index":412,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["e",{"_index":940,"title":{},"body":{"components/ProfilePage.html":{},"components/ShareButton.html":{}}}],["eas",{"_index":532,"title":{},"body":{"components/BeerItem.html":{}}}],["eat",{"_index":802,"title":{},"body":{"components/LazyImg.html":{}}}],["el",{"_index":217,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{}}}],["element",{"_index":178,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["element.anim",{"_index":526,"title":{},"body":{"components/BeerItem.html":{}}}],["email",{"_index":227,"title":{},"body":{"components/AuthPage.html":{},"components/UserProfile.html":{}}}],["email).get",{"_index":273,"title":{},"body":{"components/AuthPage.html":{},"components/UserProfile.html":{}}}],["emptyus",{"_index":1115,"title":{},"body":{"components/UsersPage.html":{}}}],["emptyusers.push(doc.data",{"_index":1118,"title":{},"body":{"components/UsersPage.html":{}}}],["enabl",{"_index":981,"title":{},"body":{"components/SettingsPage.html":{}}}],["enableofflin",{"_index":960,"title":{},"body":{"components/SettingsPage.html":{}}}],["english",{"_index":597,"title":{},"body":{"components/BeerPage.html":{}}}],["enter",{"_index":756,"title":{},"body":{"components/FeedPageModal.html":{}}}],["err",{"_index":270,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/SettingsPage.html":{}}}],["err.cod",{"_index":982,"title":{},"body":{"components/SettingsPage.html":{}}}],["error",{"_index":411,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["estim",{"_index":968,"title":{},"body":{"components/SettingsPage.html":{}}}],["etc",{"_index":1206,"title":{},"body":{"index.html":{}}}],["ev",{"_index":400,"title":{},"body":{"components/BarPage.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"components/ProfileHeader.html":{},"components/SettingsPage.html":{}}}],["ev.detail.target.valu",{"_index":421,"title":{},"body":{"components/BarPage.html":{}}}],["ev.target",{"_index":738,"title":{},"body":{"components/FeedPageModal.html":{}}}],["ev.target.check",{"_index":995,"title":{},"body":{"components/SettingsPage.html":{}}}],["ev.target.valu",{"_index":636,"title":{},"body":{"components/BeerPage.html":{}}}],["ev.target.value.length",{"_index":634,"title":{},"body":{"components/BeerPage.html":{}}}],["even",{"_index":800,"title":{},"body":{"components/LazyImg.html":{}}}],["event",{"_index":67,"title":{},"body":{"components/AMRating.html":{},"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"license.html":{}}}],["event.detail.valu",{"_index":723,"title":{},"body":{"components/FeedPageModal.html":{}}}],["event.target.localnam",{"_index":719,"title":{},"body":{"components/FeedPageModal.html":{}}}],["event.target.valu",{"_index":714,"title":{},"body":{"components/FeedPageModal.html":{}}}],["eventemitt",{"_index":136,"title":{},"body":{"components/AMRating.html":{},"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{}}}],["expand='block",{"_index":765,"title":{},"body":{"components/FeedPageModal.html":{},"components/ProfilePage.html":{}}}],["export",{"_index":164,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["express",{"_index":1248,"title":{},"body":{"license.html":{}}}],["f4",{"_index":320,"title":{},"body":{"components/BarDirections.html":{}}}],["fail",{"_index":983,"title":{},"body":{"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["fall",{"_index":824,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["fals",{"_index":79,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["fave",{"_index":467,"title":{},"body":{"components/BeerItem.html":{},"components/BeerList.html":{}}}],["favorit",{"_index":537,"title":{},"body":{"components/BeerItem.html":{},"components/UserProfile.html":{},"components/favoritesPage.html":{}}}],["favoritespag",{"_index":190,"title":{"components/favoritesPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["featur",{"_index":540,"title":{},"body":{"components/BeerItem.html":{},"components/SettingsPage.html":{},"index.html":{}}}],["feed",{"_index":646,"title":{},"body":{"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/StencilComponent.html":{}}}],["feedpag",{"_index":191,"title":{"components/FeedPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["feedpagemod",{"_index":192,"title":{"components/FeedPageModal.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["fetch('/googlegeocod",{"_index":337,"title":{},"body":{"components/BarDirections.html":{}}}],["fetch('/googleplac",{"_index":415,"title":{},"body":{"components/BarPage.html":{}}}],["fetch(url",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetch(url).then((r",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchbeer",{"_index":610,"title":{},"body":{"components/BeerPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetchbeers(1",{"_index":632,"title":{},"body":{"components/BeerPage.html":{}}}],["fetchbeers(this.pag",{"_index":616,"title":{},"body":{"components/BeerPage.html":{}}}],["fetchstyl",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ffffff",{"_index":87,"title":{},"body":{"components/AMRating.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{},"license.html":{}}}],["fileread",{"_index":741,"title":{},"body":{"components/FeedPageModal.html":{}}}],["filetoupload",{"_index":672,"title":{},"body":{"components/FeedPageModal.html":{}}}],["fill",{"_index":90,"title":{},"body":{"components/AMRating.html":{},"components/BeerItem.html":{}}}],["fill='clear",{"_index":571,"title":{},"body":{"components/BeerItem.html":{},"components/ShareButton.html":{},"components/UsersList.html":{},"components/barList.html":{}}}],["fire",{"_index":138,"title":{},"body":{"components/AMRating.html":{}}}],["firebas",{"_index":235,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{},"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["firebase.auth().currentus",{"_index":928,"title":{},"body":{"components/ProfilePage.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{}}}],["firebase.auth().currentuser.email",{"_index":559,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{}}}],["firebase.auth().currentuser.email).get",{"_index":1183,"title":{},"body":{"components/favoritesPage.html":{}}}],["firebase.auth().currentuser.linkwithredirect(provid",{"_index":552,"title":{},"body":{"components/BeerItem.html":{}}}],["firebase.auth().onauthstatechanged((us",{"_index":905,"title":{},"body":{"components/ProfileHeader.html":{}}}],["firebase.auth().onauthstatechanged(async",{"_index":242,"title":{},"body":{"components/AuthPage.html":{}}}],["firebase.auth().signinanonym",{"_index":268,"title":{},"body":{"components/AuthPage.html":{}}}],["firebase.auth().signinwithredirect(provid",{"_index":266,"title":{},"body":{"components/AuthPage.html":{}}}],["firebase.auth().signout",{"_index":847,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfilePage.html":{}}}],["firebase.auth.googleauthprovid",{"_index":265,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{}}}],["firebase.firestor",{"_index":240,"title":{},"body":{"components/AuthPage.html":{}}}],["firebase.firestore().collection('feed').add",{"_index":750,"title":{},"body":{"components/FeedPageModal.html":{}}}],["firebase.firestore().collection('feed').get",{"_index":660,"title":{},"body":{"components/FeedPage.html":{}}}],["firebase.firestore().collection('savedb",{"_index":561,"title":{},"body":{"components/BeerItem.html":{}}}],["firebase.firestore().collection('savedbeers').add",{"_index":557,"title":{},"body":{"components/BeerItem.html":{}}}],["firebase.firestore().collection('savedbeers').where('author",{"_index":1062,"title":{},"body":{"components/UserProfile.html":{},"components/favoritesPage.html":{}}}],["firebase.firestore().collection('us",{"_index":1122,"title":{},"body":{"components/UsersPage.html":{}}}],["firebase.firestore().collection('users').where('email",{"_index":272,"title":{},"body":{"components/AuthPage.html":{}}}],["firebase.firestore().collection('users').where('nam",{"_index":1066,"title":{},"body":{"components/UserProfile.html":{}}}],["firebase.firestore().enablenetwork",{"_index":993,"title":{},"body":{"components/SettingsPage.html":{}}}],["firebase.firestore().enablepersist",{"_index":978,"title":{},"body":{"components/SettingsPage.html":{}}}],["firebase.storag",{"_index":709,"title":{},"body":{"components/FeedPageModal.html":{},"components/PostImg.html":{}}}],["firebasesrc",{"_index":862,"title":{},"body":{"components/PostImg.html":{}}}],["first",{"_index":614,"title":{},"body":{"components/BeerPage.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":1251,"title":{},"body":{"license.html":{}}}],["fn",{"_index":1189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fold",{"_index":792,"title":{},"body":{"components/LazyImg.html":{}}}],["follow",{"_index":807,"title":{},"body":{"components/LazyImg.html":{},"components/UserProfile.html":{},"license.html":{}}}],["for(var",{"_index":173,"title":{},"body":{"components/AMRating.html":{}}}],["fork",{"_index":1202,"title":{},"body":{"index.html":{}}}],["formatbyt",{"_index":966,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatbytes(byt",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatbytes(estimate.usag",{"_index":971,"title":{},"body":{"components/SettingsPage.html":{}}}],["forward",{"_index":258,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{}}}],["free",{"_index":1219,"title":{},"body":{"license.html":{}}}],["frequent",{"_index":1002,"title":{},"body":{"components/SettingsPage.html":{}}}],["front",{"_index":798,"title":{},"body":{"components/LazyImg.html":{}}}],["fullus",{"_index":1064,"title":{},"body":{"components/UserProfile.html":{}}}],["fulluser.push(tempb",{"_index":1077,"title":{},"body":{"components/UserProfile.html":{}}}],["fulluser.push(user.data",{"_index":1070,"title":{},"body":{"components/UserProfile.html":{}}}],["function",{"_index":1168,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1239,"title":{},"body":{"license.html":{}}}],["get",{"_index":1197,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["get('cachedbeerdata",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getbar",{"_index":389,"title":{},"body":{"components/BarPage.html":{}}}],["getbars(posit",{"_index":393,"title":{},"body":{"components/BarPage.html":{}}}],["getbeerdetail",{"_index":432,"title":{},"body":{"components/BeerDetail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getbeerdetail(this.beerid",{"_index":447,"title":{},"body":{"components/BeerDetail.html":{}}}],["getcertainus",{"_index":220,"title":{},"body":{"components/AuthPage.html":{}}}],["getcertainuser(email",{"_index":225,"title":{},"body":{"components/AuthPage.html":{}}}],["getfreshb",{"_index":1177,"title":{},"body":{"components/favoritesPage.html":{}}}],["getfullus",{"_index":1044,"title":{},"body":{"components/UserProfile.html":{}}}],["getfulluser(nam",{"_index":1048,"title":{},"body":{"components/UserProfile.html":{}}}],["getpost",{"_index":648,"title":{},"body":{"components/FeedPage.html":{}}}],["getsavedb",{"_index":1178,"title":{},"body":{"components/favoritesPage.html":{}}}],["getserverkey",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getus",{"_index":1095,"title":{},"body":{"components/UsersPage.html":{}}}],["getuserb",{"_index":1045,"title":{},"body":{"components/UserProfile.html":{}}}],["getuserbeers(email",{"_index":1050,"title":{},"body":{"components/UserProfile.html":{}}}],["global/http",{"_index":443,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerPage.html":{}}}],["global/interfac",{"_index":406,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/UserProfile.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["global/notifi",{"_index":926,"title":{},"body":{"components/ProfilePage.html":{}}}],["global/util",{"_index":506,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPage.html":{},"components/ProfileHeader.html":{},"components/SettingsPage.html":{},"components/TabsPage.html":{}}}],["good",{"_index":1134,"title":{},"body":{"components/barList.html":{}}}],["googl",{"_index":277,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{}}}],["google.maps.directionsleg",{"_index":308,"title":{},"body":{"components/BarDirections.html":{}}}],["google.maps.directionsrender",{"_index":358,"title":{},"body":{"components/BarDirections.html":{}}}],["google.maps.directionsservic",{"_index":369,"title":{},"body":{"components/BarDirections.html":{}}}],["google.maps.directionsstatus.ok",{"_index":372,"title":{},"body":{"components/BarDirections.html":{}}}],["google.maps.map(document.queryselector('#map",{"_index":353,"title":{},"body":{"components/BarDirections.html":{}}}],["google.maps.travelmode.driv",{"_index":365,"title":{},"body":{"components/BarDirections.html":{}}}],["gotodirect",{"_index":1126,"title":{},"body":{"components/barList.html":{}}}],["gotodirections(address",{"_index":1127,"title":{},"body":{"components/barList.html":{}}}],["gotous",{"_index":1084,"title":{},"body":{"components/UsersList.html":{}}}],["gotouser(usernam",{"_index":1085,"title":{},"body":{"components/UsersList.html":{}}}],["gradient",{"_index":120,"title":{},"body":{"components/AMRating.html":{}}}],["grant",{"_index":1218,"title":{},"body":{"license.html":{}}}],["half",{"_index":84,"title":{},"body":{"components/AMRating.html":{}}}],["handl",{"_index":58,"title":{},"body":{"components/AMRating.html":{}}}],["handleanim",{"_index":472,"title":{},"body":{"components/BeerItem.html":{}}}],["handleanimation(el",{"_index":484,"title":{},"body":{"components/BeerItem.html":{}}}],["handlebeernamevalu",{"_index":680,"title":{},"body":{"components/FeedPageModal.html":{}}}],["handlebeernamevalue(ev",{"_index":688,"title":{},"body":{"components/FeedPageModal.html":{}}}],["handleimag",{"_index":778,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["handlemousedown",{"_index":42,"title":{},"body":{"components/AMRating.html":{}}}],["handlemousedown(ev",{"_index":56,"title":{},"body":{"components/AMRating.html":{}}}],["handlenativeshar",{"_index":1008,"title":{},"body":{"components/ShareButton.html":{}}}],["handlenativeshare(b",{"_index":1010,"title":{},"body":{"components/ShareButton.html":{}}}],["handlepostvalu",{"_index":681,"title":{},"body":{"components/FeedPageModal.html":{}}}],["handlepostvalue(ev",{"_index":690,"title":{},"body":{"components/FeedPageModal.html":{}}}],["handler",{"_index":548,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["handleratingvalu",{"_index":682,"title":{},"body":{"components/FeedPageModal.html":{}}}],["handleratingvalue(ev",{"_index":692,"title":{},"body":{"components/FeedPageModal.html":{}}}],["handletradshar",{"_index":1009,"title":{},"body":{"components/ShareButton.html":{}}}],["handletradshare(b",{"_index":1012,"title":{},"body":{"components/ShareButton.html":{}}}],["header",{"_index":539,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/ProfileHeader.html":{}}}],["header.css",{"_index":891,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header.tsx",{"_index":890,"title":{},"body":{"components/ProfileHeader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header.tsx:14",{"_index":902,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header.tsx:16",{"_index":904,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header.tsx:18",{"_index":903,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header.tsx:20",{"_index":897,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header.tsx:31",{"_index":896,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header.tsx:35",{"_index":899,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header.tsx:45",{"_index":900,"title":{},"body":{"components/ProfileHeader.html":{}}}],["header/profil",{"_index":889,"title":{},"body":{"components/ProfileHeader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":1018,"title":{},"body":{"components/ShareButton.html":{}}}],["herebi",{"_index":1217,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1255,"title":{},"body":{"license.html":{}}}],["html",{"_index":177,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["htmlelement",{"_index":485,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["htmlimageel",{"_index":814,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["htmlinputelement).fil",{"_index":736,"title":{},"body":{"components/FeedPageModal.html":{}}}],["htmlinputelement).files[0",{"_index":739,"title":{},"body":{"components/FeedPageModal.html":{}}}],["htmlionalertcontrollerel",{"_index":495,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["htmlioninfinitescrollel",{"_index":623,"title":{},"body":{"components/BeerPage.html":{},"components/UsersPage.html":{}}}],["htmlionloadingcontrollerel",{"_index":312,"title":{},"body":{"components/BarDirections.html":{}}}],["htmlionloadingel",{"_index":310,"title":{},"body":{"components/BarDirections.html":{}}}],["htmlionmodalcontrollerel",{"_index":655,"title":{},"body":{"components/FeedPage.html":{}}}],["htmlionnavelement).push('b",{"_index":568,"title":{},"body":{"components/BeerItem.html":{}}}],["htmlionnavelement).push('bar",{"_index":1130,"title":{},"body":{"components/barList.html":{}}}],["htmlionnavelement).push('post",{"_index":886,"title":{},"body":{"components/PostItem.html":{}}}],["htmlionnavelement).push('profil",{"_index":844,"title":{},"body":{"components/PopoverPage.html":{}}}],["htmlionnavelement).push('set",{"_index":846,"title":{},"body":{"components/PopoverPage.html":{}}}],["htmlionnavelement).push('us",{"_index":845,"title":{},"body":{"components/PopoverPage.html":{},"components/UsersList.html":{}}}],["htmlionnavelement).setroot('auth",{"_index":849,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfilePage.html":{}}}],["htmlionnavelement).setroot('tab",{"_index":255,"title":{},"body":{"components/AuthPage.html":{}}}],["htmlionpopovercontrollerel",{"_index":840,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfileHeader.html":{}}}],["htmlionpopoverel",{"_index":901,"title":{},"body":{"components/ProfileHeader.html":{}}}],["htmliontoastcontrollerel",{"_index":402,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["htmlscriptel",{"_index":317,"title":{},"body":{"components/BarDirections.html":{}}}],["https://cor",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/jgw96/stencil",{"_index":1203,"title":{},"body":{"index.html":{}}}],["https://maps.googleapis.com/maps/api/js?key=aizasycb9lhlyxunrjsp1oigl6aasxlodc3o",{"_index":319,"title":{},"body":{"components/BarDirections.html":{}}}],["ibu",{"_index":286,"title":{},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"interfaces/Labels.html":{}}}],["icon",{"_index":572,"title":{},"body":{"components/BeerItem.html":{},"components/ProfileHeader.html":{},"components/ShareButton.html":{}}}],["id",{"_index":282,"title":{},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"components/BeerPage.html":{},"interfaces/Labels.html":{},"miscellaneous/variables.html":{}}}],["id='logoutbutton",{"_index":952,"title":{},"body":{"components/ProfilePage.html":{}}}],["identifi",{"_index":141,"title":{},"body":{"components/AMRating.html":{},"coverage.html":{}}}],["ie",{"_index":827,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["imag",{"_index":729,"title":{},"body":{"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["image.getattribute('data",{"_index":817,"title":{},"body":{"components/LazyImg.html":{}}}],["image.onload",{"_index":819,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["image.removeattribute('data",{"_index":820,"title":{},"body":{"components/LazyImg.html":{}}}],["image.setattribute('src",{"_index":818,"title":{},"body":{"components/LazyImg.html":{}}}],["imagepath",{"_index":874,"title":{},"body":{"components/PostImg.html":{}}}],["imagepath.getdownloadurl",{"_index":876,"title":{},"body":{"components/PostImg.html":{}}}],["imageref",{"_index":673,"title":{},"body":{"components/FeedPageModal.html":{}}}],["imagesrc",{"_index":674,"title":{},"body":{"components/FeedPageModal.html":{}}}],["img",{"_index":771,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["img.css",{"_index":772,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx",{"_index":769,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["img.tsx:11",{"_index":873,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:12",{"_index":867,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:14",{"_index":872,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:15",{"_index":869,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:17",{"_index":871,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:18",{"_index":786,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:19",{"_index":870,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:20",{"_index":790,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:21",{"_index":785,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["img.tsx:23",{"_index":789,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:25",{"_index":788,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["img.tsx:27",{"_index":787,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:29",{"_index":780,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:32",{"_index":864,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:33",{"_index":781,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:40",{"_index":782,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:47",{"_index":863,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:52",{"_index":779,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:69",{"_index":865,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:74",{"_index":783,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:76",{"_index":866,"title":{},"body":{"components/PostImg.html":{}}}],["img.tsx:81",{"_index":784,"title":{},"body":{"components/LazyImg.html":{}}}],["img.tsx:9",{"_index":868,"title":{},"body":{"components/PostImg.html":{}}}],["img/lazi",{"_index":768,"title":{},"body":{"components/LazyImg.html":{},"coverage.html":{}}}],["img/post",{"_index":861,"title":{},"body":{"components/PostImg.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imperi",{"_index":599,"title":{},"body":{"components/BeerPage.html":{}}}],["impli",{"_index":1249,"title":{},"body":{"license.html":{}}}],["import",{"_index":162,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["improv",{"_index":793,"title":{},"body":{"components/LazyImg.html":{}}}],["includ",{"_index":1229,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinitescrol",{"_index":621,"title":{},"body":{"components/BeerPage.html":{},"components/UsersPage.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["init",{"_index":620,"title":{},"body":{"components/BeerPage.html":{},"components/UsersPage.html":{}}}],["input",{"_index":139,"title":{},"body":{"components/AMRating.html":{},"components/FeedPageModal.html":{}}}],["input.accept",{"_index":730,"title":{},"body":{"components/FeedPageModal.html":{}}}],["input.addeventlistener('chang",{"_index":733,"title":{},"body":{"components/FeedPageModal.html":{}}}],["input.click",{"_index":749,"title":{},"body":{"components/FeedPageModal.html":{}}}],["input.nam",{"_index":728,"title":{},"body":{"components/FeedPageModal.html":{}}}],["input.setattribute('captur",{"_index":731,"title":{},"body":{"components/FeedPageModal.html":{}}}],["input.typ",{"_index":727,"title":{},"body":{"components/FeedPageModal.html":{}}}],["instanc",{"_index":513,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["instead",{"_index":797,"title":{},"body":{"components/LazyImg.html":{}}}],["interact",{"_index":30,"title":{},"body":{"components/AMRating.html":{}}}],["interfac",{"_index":279,"title":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{}},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["intern",{"_index":63,"title":{},"body":{"components/AMRating.html":{}}}],["internalr",{"_index":31,"title":{},"body":{"components/AMRating.html":{}}}],["intersectionobserv",{"_index":502,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["intersectionobserver((data",{"_index":510,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["intersectionobserverentri",{"_index":511,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["io",{"_index":468,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["ion",{"_index":314,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["ionic",{"_index":1215,"title":{},"body":{"license.html":{}}}],["ionic/cor",{"_index":1032,"title":{},"body":{"components/StencilBeer.html":{}}}],["ionicb",{"_index":274,"title":{},"body":{"components/AuthPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{}}}],["ipa",{"_index":598,"title":{},"body":{"components/BeerPage.html":{}}}],["iscrol",{"_index":622,"title":{},"body":{"components/BeerPage.html":{},"components/UsersPage.html":{}}}],["iscroll.addeventlistener('ioninfinit",{"_index":626,"title":{},"body":{"components/BeerPage.html":{}}}],["iscroll.complet",{"_index":630,"title":{},"body":{"components/BeerPage.html":{}}}],["isprerend",{"_index":1093,"title":{},"body":{"components/UsersPage.html":{}}}],["isserv",{"_index":218,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/ProfilePage.html":{}}}],["it'",{"_index":91,"title":{},"body":{"components/AMRating.html":{}}}],["item",{"_index":55,"title":{},"body":{"components/AMRating.html":{},"components/BeerItem.html":{},"components/PostItem.html":{}}}],["item.css",{"_index":464,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx",{"_index":463,"title":{},"body":{"components/BeerItem.html":{},"components/PostItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.tsx:105",{"_index":480,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:11",{"_index":882,"title":{},"body":{"components/PostItem.html":{}}}],["item.tsx:114",{"_index":494,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:121",{"_index":482,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:13",{"_index":881,"title":{},"body":{"components/PostItem.html":{}}}],["item.tsx:132",{"_index":488,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:136",{"_index":490,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:14",{"_index":498,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:15",{"_index":501,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:16",{"_index":504,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:17",{"_index":497,"title":{},"body":{"components/BeerItem.html":{},"components/PostItem.html":{}}}],["item.tsx:19",{"_index":500,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:21",{"_index":499,"title":{},"body":{"components/BeerItem.html":{},"components/PostItem.html":{}}}],["item.tsx:23",{"_index":503,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:25",{"_index":478,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:29",{"_index":477,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:49",{"_index":489,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:56",{"_index":486,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:73",{"_index":492,"title":{},"body":{"components/BeerItem.html":{}}}],["item.tsx:9",{"_index":883,"title":{},"body":{"components/PostItem.html":{}}}],["item/b",{"_index":462,"title":{},"body":{"components/BeerItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item/post",{"_index":878,"title":{},"body":{"components/PostItem.html":{},"coverage.html":{}}}],["json.stringifi",{"_index":340,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{}}}],["keep",{"_index":125,"title":{},"body":{"components/AMRating.html":{}}}],["key",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1247,"title":{},"body":{"license.html":{}}}],["label",{"_index":287,"title":{"interfaces/Labels.html":{}},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{},"coverage.html":{}}}],["lager",{"_index":607,"title":{},"body":{"components/BeerPage.html":{}}}],["larg",{"_index":289,"title":{},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{}}}],["last",{"_index":1094,"title":{},"body":{"components/UsersPage.html":{}}}],["lat",{"_index":346,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{}}}],["lazi",{"_index":770,"title":{},"body":{"components/LazyImg.html":{}}}],["lazyimg",{"_index":193,"title":{"components/LazyImg.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["lazyimgload",{"_index":774,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["left",{"_index":104,"title":{},"body":{"components/AMRating.html":{}}}],["legend",{"_index":176,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["let",{"_index":619,"title":{},"body":{"components/BeerPage.html":{},"components/UsersPage.html":{}}}],["liabil",{"_index":1259,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1256,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1210,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1230,"title":{},"body":{"license.html":{}}}],["limit(12",{"_index":1124,"title":{},"body":{"components/UsersPage.html":{}}}],["list",{"_index":576,"title":{},"body":{"components/BeerList.html":{},"components/StencilComponent.html":{},"components/UsersList.html":{},"components/barList.html":{}}}],["list.css",{"_index":577,"title":{},"body":{"components/BeerList.html":{},"components/UsersList.html":{},"components/barList.html":{}}}],["list.tsx",{"_index":575,"title":{},"body":{"components/BeerList.html":{},"components/StencilComponent.html":{},"components/UsersList.html":{},"components/barList.html":{},"coverage.html":{}}}],["list.tsx:10",{"_index":1034,"title":{},"body":{"components/StencilComponent.html":{},"components/UsersList.html":{}}}],["list.tsx:11",{"_index":1129,"title":{},"body":{"components/barList.html":{}}}],["list.tsx:12",{"_index":579,"title":{},"body":{"components/BeerList.html":{},"components/UsersList.html":{}}}],["list.tsx:13",{"_index":580,"title":{},"body":{"components/BeerList.html":{},"components/barList.html":{}}}],["list.tsx:14",{"_index":1086,"title":{},"body":{"components/UsersList.html":{}}}],["list.tsx:15",{"_index":578,"title":{},"body":{"components/BeerList.html":{},"components/barList.html":{}}}],["list.tsx:18",{"_index":1087,"title":{},"body":{"components/UsersList.html":{}}}],["list.tsx:19",{"_index":1128,"title":{},"body":{"components/barList.html":{}}}],["list.tsx:8",{"_index":1035,"title":{},"body":{"components/StencilComponent.html":{}}}],["list/bar",{"_index":1125,"title":{},"body":{"components/barList.html":{},"coverage.html":{}}}],["list/beer",{"_index":574,"title":{},"body":{"components/BeerList.html":{},"coverage.html":{}}}],["list/fe",{"_index":1033,"title":{},"body":{"components/StencilComponent.html":{},"coverage.html":{}}}],["list/us",{"_index":1083,"title":{},"body":{"components/UsersList.html":{},"coverage.html":{}}}],["listen",{"_index":405,"title":{},"body":{"components/BarPage.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/ProfileHeader.html":{},"components/favoritesPage.html":{}}}],["listen('beerdelet",{"_index":1179,"title":{},"body":{"components/favoritesPage.html":{}}}],["listen('body:closepopov",{"_index":895,"title":{},"body":{"components/ProfileHeader.html":{}}}],["listen('body:ionmodaldiddismiss",{"_index":653,"title":{},"body":{"components/FeedPage.html":{}}}],["listen('ionchang",{"_index":693,"title":{},"body":{"components/FeedPageModal.html":{}}}],["listen('ioninput",{"_index":398,"title":{},"body":{"components/BarPage.html":{},"components/BeerPage.html":{}}}],["live",{"_index":1200,"title":{},"body":{"index.html":{}}}],["lng",{"_index":348,"title":{},"body":{"components/BarDirections.html":{}}}],["load",{"_index":48,"title":{},"body":{"components/AMRating.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["loadingctrl",{"_index":297,"title":{},"body":{"components/BarDirections.html":{}}}],["loadscript",{"_index":300,"title":{},"body":{"components/BarDirections.html":{}}}],["localstorage.getitem('offlineen",{"_index":974,"title":{},"body":{"components/SettingsPage.html":{}}}],["localstorage.setitem('offlineen",{"_index":1000,"title":{},"body":{"components/SettingsPage.html":{}}}],["log",{"_index":941,"title":{},"body":{"components/ProfilePage.html":{}}}],["login",{"_index":221,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{}}}],["loginanon",{"_index":223,"title":{},"body":{"components/AuthPage.html":{}}}],["logout",{"_index":833,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfilePage.html":{}}}],["long",{"_index":416,"title":{},"body":{"components/BarPage.html":{}}}],["ltr",{"_index":99,"title":{},"body":{"components/AMRating.html":{}}}],["makenewpost",{"_index":649,"title":{},"body":{"components/FeedPage.html":{}}}],["map",{"_index":352,"title":{},"body":{"components/BarDirections.html":{}}}],["markup",{"_index":808,"title":{},"body":{"components/LazyImg.html":{}}}],["match",{"_index":210,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(this.internalr",{"_index":171,"title":{},"body":{"components/AMRating.html":{}}}],["max",{"_index":93,"title":{},"body":{"components/AMRating.html":{}}}],["maximum",{"_index":129,"title":{},"body":{"components/AMRating.html":{}}}],["maxrat",{"_index":32,"title":{},"body":{"components/AMRating.html":{}}}],["medium",{"_index":288,"title":{},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{}}}],["merchant",{"_index":1250,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1232,"title":{},"body":{"license.html":{}}}],["messag",{"_index":410,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["method",{"_index":39,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{},"index.html":{}}}],["minimum",{"_index":132,"title":{},"body":{"components/AMRating.html":{}}}],["minrat",{"_index":33,"title":{},"body":{"components/AMRating.html":{}}}],["miscellan",{"_index":1184,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1211,"title":{},"body":{"license.html":{}}}],["modal",{"_index":656,"title":{},"body":{"components/FeedPage.html":{},"components/FeedPageModal.html":{}}}],["modal.css",{"_index":670,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.pres",{"_index":666,"title":{},"body":{"components/FeedPage.html":{}}}],["modal.tsx",{"_index":669,"title":{},"body":{"components/FeedPageModal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal.tsx:11",{"_index":704,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:119",{"_index":685,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:12",{"_index":699,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:13",{"_index":705,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:14",{"_index":703,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:142",{"_index":695,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:16",{"_index":698,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:18",{"_index":700,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:20",{"_index":707,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:21",{"_index":706,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:22",{"_index":702,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:23",{"_index":701,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:25",{"_index":686,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:30",{"_index":687,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:34",{"_index":691,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:39",{"_index":689,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:44",{"_index":694,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:53",{"_index":697,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal.tsx:79",{"_index":696,"title":{},"body":{"components/FeedPageModal.html":{}}}],["modal/fe",{"_index":668,"title":{},"body":{"components/FeedPageModal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalctrl",{"_index":647,"title":{},"body":{"components/FeedPage.html":{}}}],["mode",{"_index":362,"title":{},"body":{"components/BarDirections.html":{},"components/SettingsPage.html":{}}}],["modifi",{"_index":1231,"title":{},"body":{"license.html":{}}}],["modul",{"_index":1266,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":997,"title":{},"body":{"components/SettingsPage.html":{}}}],["mous",{"_index":59,"title":{},"body":{"components/AMRating.html":{}}}],["multipl",{"_index":985,"title":{},"body":{"components/SettingsPage.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{},"miscellaneous/functions.html":{}}}],["name).get",{"_index":1067,"title":{},"body":{"components/UserProfile.html":{}}}],["nav",{"_index":254,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{},"components/PopoverPage.html":{},"components/ProfilePage.html":{},"components/UsersList.html":{},"components/barList.html":{}}}],["nav')a",{"_index":885,"title":{},"body":{"components/PostItem.html":{}}}],["navig",{"_index":448,"title":{},"body":{"components/BeerDetail.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["navigatetodetail",{"_index":473,"title":{},"body":{"components/BeerItem.html":{}}}],["navigatetodetail(beerid",{"_index":487,"title":{},"body":{"components/BeerItem.html":{}}}],["navigator.geolocation.getcurrentposition((posit",{"_index":344,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{}}}],["navigator.serviceworker.getregistration().then((reg",{"_index":932,"title":{},"body":{"components/ProfilePage.html":{}}}],["network",{"_index":803,"title":{},"body":{"components/LazyImg.html":{}}}],["new",{"_index":264,"title":{},"body":{"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"coverage.html":{}}}],["newbeer",{"_index":628,"title":{},"body":{"components/BeerPage.html":{}}}],["newrat",{"_index":74,"title":{},"body":{"components/AMRating.html":{}}}],["newstyl",{"_index":585,"title":{},"body":{"components/BeerPage.html":{}}}],["newstyle(id",{"_index":588,"title":{},"body":{"components/BeerPage.html":{}}}],["noninfring",{"_index":1254,"title":{},"body":{"license.html":{}}}],["notic",{"_index":917,"title":{},"body":{"components/ProfilePage.html":{},"license.html":{}}}],["notif",{"_index":950,"title":{},"body":{"components/ProfilePage.html":{}}}],["notifi",{"_index":925,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["now",{"_index":618,"title":{},"body":{"components/BeerPage.html":{},"components/UsersPage.html":{}}}],["npm",{"_index":1209,"title":{},"body":{"index.html":{}}}],["null",{"_index":256,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{}}}],["number",{"_index":123,"title":{},"body":{"components/AMRating.html":{},"interfaces/Bar.html":{},"interfaces/Beer.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":109,"title":{},"body":{"components/AMRating.html":{}}}],["observ",{"_index":514,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["obtain",{"_index":1222,"title":{},"body":{"license.html":{}}}],["offlin",{"_index":980,"title":{},"body":{"components/SettingsPage.html":{}}}],["offlinecheck",{"_index":956,"title":{},"body":{"components/SettingsPage.html":{}}}],["offlinest",{"_index":973,"title":{},"body":{"components/SettingsPage.html":{}}}],["ok",{"_index":1136,"title":{},"body":{"components/barList.html":{}}}],["oktoberfest",{"_index":605,"title":{},"body":{"components/BeerPage.html":{}}}],["oldsrc",{"_index":775,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["on",{"_index":512,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/SettingsPage.html":{}}}],["onc",{"_index":47,"title":{},"body":{"components/AMRating.html":{}}}],["opac",{"_index":529,"title":{},"body":{"components/BeerItem.html":{}}}],["open",{"_index":987,"title":{},"body":{"components/SettingsPage.html":{}}}],["openal",{"_index":834,"title":{},"body":{"components/PopoverPage.html":{}}}],["openmap",{"_index":301,"title":{},"body":{"components/BarDirections.html":{}}}],["openpopov",{"_index":894,"title":{},"body":{"components/ProfileHeader.html":{}}}],["openpopover(ev",{"_index":898,"title":{},"body":{"components/ProfileHeader.html":{}}}],["openprofil",{"_index":835,"title":{},"body":{"components/PopoverPage.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":360,"title":{},"body":{"components/BarDirections.html":{}}}],["otherwis",{"_index":1264,"title":{},"body":{"license.html":{}}}],["out",{"_index":454,"title":{},"body":{"components/BeerDetail.html":{},"components/ProfilePage.html":{},"components/ShareButton.html":{},"license.html":{}}}],["out!&url=${window.location.href}/detail/${beer.id",{"_index":1025,"title":{},"body":{"components/ShareButton.html":{}}}],["outwith",{"_index":92,"title":{},"body":{"components/AMRating.html":{}}}],["overview",{"_index":1267,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["page",{"_index":215,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/TabsPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["page.css",{"_index":216,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/ProfilePage.html":{},"components/favoritesPage.html":{}}}],["page.tsx",{"_index":213,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/PopoverPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/TabsPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["page.tsx:10",{"_index":841,"title":{},"body":{"components/PopoverPage.html":{},"components/TabsPage.html":{},"components/UsersPage.html":{}}}],["page.tsx:100",{"_index":965,"title":{},"body":{"components/SettingsPage.html":{}}}],["page.tsx:11",{"_index":233,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/UsersPage.html":{}}}],["page.tsx:115",{"_index":590,"title":{},"body":{"components/BeerPage.html":{}}}],["page.tsx:12",{"_index":596,"title":{},"body":{"components/BeerPage.html":{},"components/PopoverPage.html":{},"components/SettingsPage.html":{}}}],["page.tsx:13",{"_index":231,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UsersPage.html":{},"components/favoritesPage.html":{}}}],["page.tsx:14",{"_index":404,"title":{},"body":{"components/BarPage.html":{},"components/BeerPage.html":{},"components/PopoverPage.html":{},"components/ProfilePage.html":{}}}],["page.tsx:15",{"_index":224,"title":{},"body":{"components/AuthPage.html":{},"components/FeedPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UsersPage.html":{},"components/favoritesPage.html":{}}}],["page.tsx:16",{"_index":392,"title":{},"body":{"components/BarPage.html":{},"components/PopoverPage.html":{},"components/SettingsPage.html":{},"components/UsersPage.html":{}}}],["page.tsx:17",{"_index":650,"title":{},"body":{"components/FeedPage.html":{},"components/ProfilePage.html":{}}}],["page.tsx:18",{"_index":924,"title":{},"body":{"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UsersPage.html":{}}}],["page.tsx:20",{"_index":919,"title":{},"body":{"components/ProfilePage.html":{}}}],["page.tsx:21",{"_index":651,"title":{},"body":{"components/FeedPage.html":{}}}],["page.tsx:22",{"_index":837,"title":{},"body":{"components/PopoverPage.html":{}}}],["page.tsx:24",{"_index":1102,"title":{},"body":{"components/UsersPage.html":{}}}],["page.tsx:27",{"_index":839,"title":{},"body":{"components/PopoverPage.html":{},"components/SettingsPage.html":{}}}],["page.tsx:28",{"_index":1181,"title":{},"body":{"components/favoritesPage.html":{}}}],["page.tsx:29",{"_index":401,"title":{},"body":{"components/BarPage.html":{}}}],["page.tsx:32",{"_index":836,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfilePage.html":{}}}],["page.tsx:33",{"_index":1180,"title":{},"body":{"components/favoritesPage.html":{}}}],["page.tsx:34",{"_index":395,"title":{},"body":{"components/BarPage.html":{}}}],["page.tsx:35",{"_index":654,"title":{},"body":{"components/FeedPage.html":{}}}],["page.tsx:38",{"_index":964,"title":{},"body":{"components/SettingsPage.html":{}}}],["page.tsx:39",{"_index":652,"title":{},"body":{"components/FeedPage.html":{}}}],["page.tsx:40",{"_index":838,"title":{},"body":{"components/PopoverPage.html":{}}}],["page.tsx:41",{"_index":594,"title":{},"body":{"components/BeerPage.html":{}}}],["page.tsx:43",{"_index":609,"title":{},"body":{"components/BeerPage.html":{}}}],["page.tsx:45",{"_index":228,"title":{},"body":{"components/AuthPage.html":{},"components/favoritesPage.html":{}}}],["page.tsx:46",{"_index":399,"title":{},"body":{"components/BarPage.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{}}}],["page.tsx:48",{"_index":587,"title":{},"body":{"components/BeerPage.html":{},"components/ProfilePage.html":{}}}],["page.tsx:51",{"_index":229,"title":{},"body":{"components/AuthPage.html":{}}}],["page.tsx:52",{"_index":592,"title":{},"body":{"components/BeerPage.html":{}}}],["page.tsx:56",{"_index":920,"title":{},"body":{"components/ProfilePage.html":{}}}],["page.tsx:58",{"_index":396,"title":{},"body":{"components/BarPage.html":{}}}],["page.tsx:59",{"_index":226,"title":{},"body":{"components/AuthPage.html":{}}}],["page.tsx:62",{"_index":963,"title":{},"body":{"components/SettingsPage.html":{}}}],["page.tsx:63",{"_index":230,"title":{},"body":{"components/AuthPage.html":{}}}],["page.tsx:64",{"_index":1100,"title":{},"body":{"components/UsersPage.html":{}}}],["page.tsx:67",{"_index":923,"title":{},"body":{"components/ProfilePage.html":{}}}],["page.tsx:69",{"_index":962,"title":{},"body":{"components/SettingsPage.html":{}}}],["page.tsx:71",{"_index":1098,"title":{},"body":{"components/UsersPage.html":{}}}],["page.tsx:72",{"_index":921,"title":{},"body":{"components/ProfilePage.html":{}}}],["page.tsx:77",{"_index":1101,"title":{},"body":{"components/UsersPage.html":{}}}],["page.tsx:80",{"_index":589,"title":{},"body":{"components/BeerPage.html":{}}}],["page.tsx:83",{"_index":922,"title":{},"body":{"components/ProfilePage.html":{}}}],["page.tsx:93",{"_index":593,"title":{},"body":{"components/BeerPage.html":{}}}],["page.tsx:99",{"_index":591,"title":{},"body":{"components/BeerPage.html":{}}}],["page/auth",{"_index":212,"title":{},"body":{"components/AuthPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/b",{"_index":582,"title":{},"body":{"components/BeerPage.html":{},"coverage.html":{}}}],["page/bar",{"_index":387,"title":{},"body":{"components/BarPage.html":{},"coverage.html":{}}}],["page/favorit",{"_index":1156,"title":{},"body":{"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["page/fe",{"_index":645,"title":{},"body":{"components/FeedPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/popov",{"_index":829,"title":{},"body":{"components/PopoverPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/profil",{"_index":914,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/set",{"_index":955,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/tab",{"_index":1038,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["page/us",{"_index":1092,"title":{},"body":{"components/UsersPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagin",{"_index":1096,"title":{},"body":{"components/UsersPage.html":{}}}],["paginate(last",{"_index":1099,"title":{},"body":{"components/UsersPage.html":{}}}],["paramet",{"_index":64,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPageModal.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1252,"title":{},"body":{"license.html":{}}}],["pass",{"_index":366,"title":{},"body":{"components/BarDirections.html":{}}}],["passedb",{"_index":483,"title":{},"body":{"components/BeerItem.html":{}}}],["passedbeer.nam",{"_index":563,"title":{},"body":{"components/BeerItem.html":{}}}],["perm",{"_index":942,"title":{},"body":{"components/ProfilePage.html":{}}}],["permiss",{"_index":1216,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1238,"title":{},"body":{"license.html":{}}}],["persist",{"_index":988,"title":{},"body":{"components/SettingsPage.html":{}}}],["person",{"_index":1221,"title":{},"body":{"license.html":{}}}],["photo",{"_index":251,"title":{},"body":{"components/AuthPage.html":{}}}],["pictur",{"_index":725,"title":{},"body":{"components/FeedPageModal.html":{}}}],["popov",{"_index":830,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfileHeader.html":{}}}],["popoverctrl",{"_index":832,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfileHeader.html":{}}}],["popoverpag",{"_index":194,"title":{"components/PopoverPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["portion",{"_index":1245,"title":{},"body":{"license.html":{}}}],["posit",{"_index":394,"title":{},"body":{"components/BarPage.html":{}}}],["position.coords.latitud",{"_index":347,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{}}}],["position.coords.longitud",{"_index":349,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{}}}],["possibl",{"_index":130,"title":{},"body":{"components/AMRating.html":{}}}],["post",{"_index":338,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/StencilComponent.html":{}}}],["postdetail",{"_index":195,"title":{"components/PostDetail.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["postimg",{"_index":196,"title":{"components/PostImg.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["postitem",{"_index":197,"title":{"components/PostItem.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["posttext",{"_index":751,"title":{},"body":{"components/FeedPageModal.html":{}}}],["postvalu",{"_index":675,"title":{},"body":{"components/FeedPageModal.html":{}}}],["precondit",{"_index":984,"title":{},"body":{"components/SettingsPage.html":{}}}],["press",{"_index":61,"title":{},"body":{"components/AMRating.html":{}}}],["privat",{"_index":28,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarPage.html":{},"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["profil",{"_index":851,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{}}}],["profile.css",{"_index":1042,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx",{"_index":1041,"title":{},"body":{"components/UserProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile.tsx:13",{"_index":1055,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx:15",{"_index":1053,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx:16",{"_index":1054,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx:18",{"_index":1046,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx:28",{"_index":1051,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx:32",{"_index":1049,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx:59",{"_index":1047,"title":{},"body":{"components/UserProfile.html":{}}}],["profile.tsx:68",{"_index":1052,"title":{},"body":{"components/UserProfile.html":{}}}],["profile/us",{"_index":1040,"title":{},"body":{"components/UserProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilehead",{"_index":198,"title":{"components/ProfileHeader.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["profilep",{"_index":893,"title":{},"body":{"components/ProfileHeader.html":{}}}],["profilepag",{"_index":199,"title":{"components/ProfilePage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["project",{"_index":1201,"title":{},"body":{"index.html":{}}}],["promise((resolv",{"_index":323,"title":{},"body":{"components/BarDirections.html":{}}}],["prop",{"_index":81,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilComponent.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{}}}],["prop({connect",{"_index":313,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/PopoverPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["prop({context",{"_index":232,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["properti",{"_index":22,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilComponent.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{},"index.html":{}}}],["provid",{"_index":263,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{},"license.html":{}}}],["publish",{"_index":1233,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1253,"title":{},"body":{"license.html":{}}}],["pushmanag",{"_index":930,"title":{},"body":{"components/ProfilePage.html":{}}}],["pushsubscript",{"_index":936,"title":{},"body":{"components/ProfilePage.html":{}}}],["put",{"_index":805,"title":{},"body":{"components/LazyImg.html":{}}}],["pwa",{"_index":806,"title":{},"body":{"components/LazyImg.html":{}}}],["querysnapshot",{"_index":244,"title":{},"body":{"components/AuthPage.html":{}}}],["querysnapshot.docs[querysnapshot.docs.length",{"_index":1112,"title":{},"body":{"components/UsersPage.html":{}}}],["querysnapshot.empti",{"_index":247,"title":{},"body":{"components/AuthPage.html":{}}}],["querysnapshot.foreach((doc",{"_index":1107,"title":{},"body":{"components/UsersPage.html":{},"components/favoritesPage.html":{}}}],["rang",{"_index":720,"title":{},"body":{"components/FeedPageModal.html":{}}}],["rate",{"_index":12,"title":{},"body":{"components/AMRating.html":{},"interfaces/Bar.html":{},"interfaces/Beer.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{}}}],["rating.css",{"_index":18,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx",{"_index":9,"title":{},"body":{"components/AMRating.html":{},"coverage.html":{}}}],["rating.tsx:106",{"_index":53,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:127",{"_index":57,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:14",{"_index":140,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:146",{"_index":73,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:160",{"_index":68,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:19",{"_index":121,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:24",{"_index":133,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:29",{"_index":131,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:34",{"_index":128,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:39",{"_index":82,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:44",{"_index":156,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:49",{"_index":135,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:54",{"_index":95,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:59",{"_index":88,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:64",{"_index":98,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:70",{"_index":100,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:75",{"_index":159,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:80",{"_index":137,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:85",{"_index":124,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:90",{"_index":117,"title":{},"body":{"components/AMRating.html":{}}}],["rating.tsx:98",{"_index":46,"title":{},"body":{"components/AMRating.html":{}}}],["rating/am",{"_index":8,"title":{},"body":{"components/AMRating.html":{},"coverage.html":{}}}],["ratingfloor",{"_index":170,"title":{},"body":{"components/AMRating.html":{}}}],["ratingitem",{"_index":34,"title":{},"body":{"components/AMRating.html":{}}}],["ratingremaind",{"_index":172,"title":{},"body":{"components/AMRating.html":{}}}],["ratingupd",{"_index":35,"title":{},"body":{"components/AMRating.html":{}}}],["ratingvalu",{"_index":676,"title":{},"body":{"components/FeedPageModal.html":{}}}],["reader",{"_index":740,"title":{},"body":{"components/FeedPageModal.html":{}}}],["reader.onloadend",{"_index":742,"title":{},"body":{"components/FeedPageModal.html":{}}}],["reader.readasdataurl(this.filetoupload",{"_index":746,"title":{},"body":{"components/FeedPageModal.html":{}}}],["reader.result",{"_index":744,"title":{},"body":{"components/FeedPageModal.html":{}}}],["reassign",{"_index":126,"title":{},"body":{"components/AMRating.html":{}}}],["refer",{"_index":36,"title":{},"body":{"components/AMRating.html":{}}}],["reg",{"_index":934,"title":{},"body":{"components/ProfilePage.html":{}}}],["reg.pushmanager.getsubscription().then((sub",{"_index":935,"title":{},"body":{"components/ProfilePage.html":{}}}],["removeintersectionobserv",{"_index":474,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["render",{"_index":43,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["request",{"_index":363,"title":{},"body":{"components/BarDirections.html":{}}}],["requestperm",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["requir",{"_index":762,"title":{},"body":{"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["res.json",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":631,"title":{},"body":{"components/BeerPage.html":{}}}],["resolv",{"_index":329,"title":{},"body":{"components/BarDirections.html":{}}}],["respons",{"_index":336,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"miscellaneous/variables.html":{}}}],["response.json",{"_index":343,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"miscellaneous/variables.html":{}}}],["response.routes[0].legs[0",{"_index":375,"title":{},"body":{"components/BarDirections.html":{}}}],["restrict",{"_index":1228,"title":{},"body":{"license.html":{}}}],["result",{"_index":209,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":50,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":105,"title":{},"body":{"components/AMRating.html":{},"license.html":{}}}],["role",{"_index":545,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["rootref",{"_index":677,"title":{},"body":{"components/FeedPageModal.html":{}}}],["rout",{"_index":378,"title":{},"body":{"components/BarDirections.html":{}}}],["run",{"_index":1208,"title":{},"body":{"index.html":{}}}],["safari",{"_index":826,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["save",{"_index":475,"title":{},"body":{"components/BeerItem.html":{}}}],["save(b",{"_index":491,"title":{},"body":{"components/BeerItem.html":{}}}],["saveb",{"_index":476,"title":{},"body":{"components/BeerItem.html":{}}}],["savebeer(valu",{"_index":493,"title":{},"body":{"components/BeerItem.html":{}}}],["scope",{"_index":892,"title":{},"body":{"components/ProfileHeader.html":{}}}],["script",{"_index":298,"title":{},"body":{"components/BarDirections.html":{}}}],["scroll",{"_index":625,"title":{},"body":{"components/BeerPage.html":{},"components/LazyImg.html":{},"components/UsersPage.html":{}}}],["search",{"_index":390,"title":{},"body":{"components/BarPage.html":{},"components/BeerPage.html":{}}}],["search(ev",{"_index":397,"title":{},"body":{"components/BarPage.html":{},"components/BeerPage.html":{}}}],["searchterm",{"_index":635,"title":{},"body":{"components/BeerPage.html":{},"miscellaneous/variables.html":{}}}],["secondari",{"_index":547,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["see",{"_index":801,"title":{},"body":{"components/LazyImg.html":{},"components/UsersList.html":{}}}],["seen",{"_index":795,"title":{},"body":{"components/LazyImg.html":{}}}],["selector",{"_index":181,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["sell",{"_index":1237,"title":{},"body":{"license.html":{}}}],["sendtokentoserv",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendtokentoserver(token",{"_index":1195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["servic",{"_index":367,"title":{},"body":{"components/BarDirections.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{}}}],["service.t",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["servicework",{"_index":929,"title":{},"body":{"components/ProfilePage.html":{}}}],["serviceworkerregistr",{"_index":933,"title":{},"body":{"components/ProfilePage.html":{}}}],["sessionstorag",{"_index":259,"title":{},"body":{"components/AuthPage.html":{}}}],["sessionstorage.setitem('anon",{"_index":261,"title":{},"body":{"components/AuthPage.html":{}}}],["set",{"_index":103,"title":{},"body":{"components/AMRating.html":{},"components/BarDirections.html":{},"components/BeerPage.html":{},"components/PopoverPage.html":{},"components/SettingsPage.html":{}}}],["set('cachedbeerdata",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settimeout",{"_index":419,"title":{},"body":{"components/BarPage.html":{}}}],["settimeout(async",{"_index":633,"title":{},"body":{"components/BeerPage.html":{}}}],["settingspag",{"_index":200,"title":{"components/SettingsPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["setup",{"_index":49,"title":{},"body":{"components/AMRating.html":{}}}],["setupb",{"_index":586,"title":{},"body":{"components/BeerPage.html":{}}}],["setupus",{"_index":1097,"title":{},"body":{"components/UsersPage.html":{}}}],["shade",{"_index":101,"title":{},"body":{"components/AMRating.html":{}}}],["shadow",{"_index":19,"title":{},"body":{"components/AMRating.html":{}}}],["shall",{"_index":1243,"title":{},"body":{"license.html":{}}}],["shape='round",{"_index":642,"title":{},"body":{"components/BeerPage.html":{}}}],["share",{"_index":433,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["share(b",{"_index":437,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["sharebutton",{"_index":201,"title":{"components/ShareButton.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["showerrortoast",{"_index":391,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{}}}],["sign",{"_index":542,"title":{},"body":{"components/BeerItem.html":{}}}],["simpl",{"_index":11,"title":{},"body":{"components/AMRating.html":{}}}],["snapshot",{"_index":659,"title":{},"body":{"components/FeedPage.html":{},"components/UsersPage.html":{}}}],["snapshot.docs[snapshot.docs.length",{"_index":1117,"title":{},"body":{"components/UsersPage.html":{}}}],["snapshot.foreach((doc",{"_index":661,"title":{},"body":{"components/FeedPage.html":{},"components/UsersPage.html":{}}}],["softwar",{"_index":1224,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["specifi",{"_index":118,"title":{},"body":{"components/AMRating.html":{}}}],["src",{"_index":776,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["src/.../auth",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../beer",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorit",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notifi",{"_index":1186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../popov",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../post",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profil",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../set",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":1185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components/am",{"_index":7,"title":{},"body":{"components/AMRating.html":{},"coverage.html":{}}}],["src/components/auth",{"_index":211,"title":{},"body":{"components/AuthPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/b",{"_index":426,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/bar",{"_index":290,"title":{},"body":{"components/BarDirections.html":{},"components/BarPage.html":{},"components/barList.html":{},"coverage.html":{}}}],["src/components/favorit",{"_index":1155,"title":{},"body":{"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["src/components/fe",{"_index":644,"title":{},"body":{"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/StencilComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/lazi",{"_index":767,"title":{},"body":{"components/LazyImg.html":{},"coverage.html":{}}}],["src/components/popov",{"_index":828,"title":{},"body":{"components/PopoverPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/post",{"_index":855,"title":{},"body":{"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/profil",{"_index":888,"title":{},"body":{"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/set",{"_index":954,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/shar",{"_index":1005,"title":{},"body":{"components/ShareButton.html":{},"coverage.html":{}}}],["src/components/stencil",{"_index":1026,"title":{},"body":{"components/StencilBeer.html":{},"coverage.html":{}}}],["src/components/tab",{"_index":1037,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/components/us",{"_index":1039,"title":{},"body":{"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/global/http",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/global/interfaces.t",{"_index":281,"title":{},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{},"coverage.html":{}}}],["src/global/notifi",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/global/utils.t",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["star",{"_index":157,"title":{},"body":{"components/AMRating.html":{}}}],["start",{"_index":345,"title":{"index.html":{},"license.html":{}},"body":{"components/BarDirections.html":{},"components/LazyImg.html":{},"index.html":{}}}],["startafter(last",{"_index":1123,"title":{},"body":{"components/UsersPage.html":{}}}],["state",{"_index":69,"title":{},"body":{"components/AMRating.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/UserProfile.html":{},"components/UsersPage.html":{},"components/favoritesPage.html":{}}}],["statement",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":371,"title":{},"body":{"components/BarDirections.html":{}}}],["stencil",{"_index":1029,"title":{},"body":{"components/StencilBeer.html":{},"index.html":{}}}],["stencil/cor",{"_index":163,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["stencilb",{"_index":202,"title":{"components/StencilBeer.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["stencilcompon",{"_index":203,"title":{"components/StencilComponent.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["stencilj",{"_index":14,"title":{},"body":{"components/AMRating.html":{}}}],["storag",{"_index":678,"title":{},"body":{"components/FeedPageModal.html":{},"components/PostImg.html":{},"components/SettingsPage.html":{}}}],["storage.ref(this.src",{"_index":875,"title":{},"body":{"components/PostImg.html":{}}}],["storageus",{"_index":957,"title":{},"body":{"components/SettingsPage.html":{}}}],["stout",{"_index":601,"title":{},"body":{"components/BeerPage.html":{}}}],["string",{"_index":86,"title":{},"body":{"components/AMRating.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/ProfileHeader.html":{},"components/SettingsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/barList.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":584,"title":{},"body":{"components/BeerPage.html":{},"miscellaneous/variables.html":{}}}],["style.nam",{"_index":643,"title":{},"body":{"components/BeerPage.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/StencilBeer.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["sub",{"_index":937,"title":{},"body":{"components/ProfilePage.html":{}}}],["sub.unsubscrib",{"_index":939,"title":{},"body":{"components/ProfilePage.html":{}}}],["subject",{"_index":1240,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1235,"title":{},"body":{"license.html":{}}}],["submit",{"_index":683,"title":{},"body":{"components/FeedPageModal.html":{}}}],["subscrib",{"_index":915,"title":{},"body":{"components/ProfilePage.html":{}}}],["substanti",{"_index":1244,"title":{},"body":{"license.html":{}}}],["support",{"_index":992,"title":{},"body":{"components/SettingsPage.html":{}}}],["sure",{"_index":996,"title":{},"body":{"components/SettingsPage.html":{}}}],["svg",{"_index":161,"title":{},"body":{"components/AMRating.html":{}}}],["svgpoint",{"_index":37,"title":{},"body":{"components/AMRating.html":{}}}],["svgviewbox",{"_index":38,"title":{},"body":{"components/AMRating.html":{}}}],["swsupport",{"_index":916,"title":{},"body":{"components/ProfilePage.html":{}}}],["tab",{"_index":986,"title":{},"body":{"components/SettingsPage.html":{},"components/TabsPage.html":{}}}],["tabl",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["tabspag",{"_index":204,"title":{"components/TabsPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["tag",{"_index":16,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["takepictur",{"_index":684,"title":{},"body":{"components/FeedPageModal.html":{}}}],["tempbeer",{"_index":1072,"title":{},"body":{"components/UserProfile.html":{},"components/favoritesPage.html":{}}}],["tempbeers.push(doc.data().b",{"_index":1076,"title":{},"body":{"components/UserProfile.html":{},"components/favoritesPage.html":{}}}],["temppost",{"_index":658,"title":{},"body":{"components/FeedPage.html":{}}}],["tempposts.push(doc.data",{"_index":662,"title":{},"body":{"components/FeedPage.html":{}}}],["tempus",{"_index":1105,"title":{},"body":{"components/UsersPage.html":{}}}],["tempusers.push(doc.data",{"_index":1110,"title":{},"body":{"components/UsersPage.html":{}}}],["term",{"_index":420,"title":{},"body":{"components/BarPage.html":{}}}],["text",{"_index":452,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["then((data",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.addintersectionobserv",{"_index":507,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.address",{"_index":341,"title":{},"body":{"components/BarDirections.html":{}}}],["this.alertctrl.cr",{"_index":538,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{}}}],["this.bar",{"_index":418,"title":{},"body":{"components/BarPage.html":{},"components/barList.html":{}}}],["this.bars.filter((bar",{"_index":424,"title":{},"body":{"components/BarPage.html":{}}}],["this.bars.map((bar",{"_index":1131,"title":{},"body":{"components/barList.html":{}}}],["this.beer",{"_index":446,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/UserProfile.html":{},"components/favoritesPage.html":{}}}],["this.beer.abv",{"_index":458,"title":{},"body":{"components/BeerDetail.html":{}}}],["this.beer.descript",{"_index":460,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerItem.html":{}}}],["this.beer.ibu",{"_index":459,"title":{},"body":{"components/BeerDetail.html":{}}}],["this.beer.nam",{"_index":457,"title":{},"body":{"components/BeerDetail.html":{},"components/BeerItem.html":{}}}],["this.beerdeleted.emit",{"_index":555,"title":{},"body":{"components/BeerItem.html":{}}}],["this.beernamevalu",{"_index":716,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.beers.concat(newb",{"_index":629,"title":{},"body":{"components/BeerPage.html":{}}}],["this.beers.map((b",{"_index":581,"title":{},"body":{"components/BeerList.html":{}}}],["this.cancel()}>cancel",{"_index":759,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.changed(ev",{"_index":1003,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.checkst",{"_index":972,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.clickeddetail(this.post",{"_index":887,"title":{},"body":{"components/PostItem.html":{}}}],["this.closepopover.emit",{"_index":842,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.createratingitem",{"_index":168,"title":{},"body":{"components/AMRating.html":{}}}],["this.currentstyl",{"_index":617,"title":{},"body":{"components/BeerPage.html":{}}}],["this.deletebeer(this.b",{"_index":570,"title":{},"body":{"components/BeerItem.html":{}}}],["this.deletebeerhelper(b",{"_index":554,"title":{},"body":{"components/BeerItem.html":{}}}],["this.dest",{"_index":383,"title":{},"body":{"components/BarDirections.html":{}}}],["this.directionsleg",{"_index":374,"title":{},"body":{"components/BarDirections.html":{}}}],["this.directionsleg.duration.text",{"_index":384,"title":{},"body":{"components/BarDirections.html":{}}}],["this.directionsleg.end_address",{"_index":386,"title":{},"body":{"components/BarDirections.html":{}}}],["this.disableofflin",{"_index":1001,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.dismiss",{"_index":754,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.el.closest('ion",{"_index":253,"title":{},"body":{"components/AuthPage.html":{},"components/BeerItem.html":{},"components/FeedPageModal.html":{},"components/PostItem.html":{},"components/UsersList.html":{},"components/barList.html":{}}}],["this.el.queryselector('#infinit",{"_index":624,"title":{},"body":{"components/BeerPage.html":{},"components/UsersPage.html":{}}}],["this.el.queryselector('img",{"_index":815,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.el.queryselector('img').getattribute('data",{"_index":813,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.el.queryselector('ion",{"_index":523,"title":{},"body":{"components/BeerItem.html":{}}}],["this.enableofflin",{"_index":999,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.fav",{"_index":569,"title":{},"body":{"components/BeerItem.html":{}}}],["this.filetoupload",{"_index":737,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.firebasesrc",{"_index":877,"title":{},"body":{"components/PostImg.html":{}}}],["this.getbars(posit",{"_index":407,"title":{},"body":{"components/BarPage.html":{}}}],["this.getbeerdetail",{"_index":444,"title":{},"body":{"components/BeerDetail.html":{}}}],["this.getcertainuser(user.email",{"_index":246,"title":{},"body":{"components/AuthPage.html":{}}}],["this.getfulluser(this.usernam",{"_index":1057,"title":{},"body":{"components/UserProfile.html":{}}}],["this.getpost",{"_index":657,"title":{},"body":{"components/FeedPage.html":{}}}],["this.getsavedbeers().then((querysnapshot",{"_index":1182,"title":{},"body":{"components/favoritesPage.html":{}}}],["this.getuserbeers(useremail",{"_index":1074,"title":{},"body":{"components/UserProfile.html":{}}}],["this.getusers().then((querysnapshot",{"_index":1106,"title":{},"body":{"components/UsersPage.html":{}}}],["this.gotodirections(bar.vicin",{"_index":1140,"title":{},"body":{"components/barList.html":{}}}],["this.gotouser(user.nam",{"_index":1090,"title":{},"body":{"components/UsersList.html":{}}}],["this.handleanimation((data[0].target",{"_index":517,"title":{},"body":{"components/BeerItem.html":{}}}],["this.handlebeernamevalue(ev",{"_index":761,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.handleimag",{"_index":822,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.handlemousedown(ev",{"_index":175,"title":{},"body":{"components/AMRating.html":{}}}],["this.handlenativeshare(b",{"_index":1022,"title":{},"body":{"components/ShareButton.html":{}}}],["this.handlepostvalue(ev",{"_index":763,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.handletradshare(b",{"_index":1023,"title":{},"body":{"components/ShareButton.html":{}}}],["this.history.replac",{"_index":848,"title":{},"body":{"components/PopoverPage.html":{},"components/ProfilePage.html":{}}}],["this.imageref",{"_index":747,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.imageref.fullpath",{"_index":752,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.imageref.put(this.filetoupload",{"_index":753,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.imagesrc",{"_index":743,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.internalr",{"_index":166,"title":{},"body":{"components/AMRating.html":{}}}],["this.io",{"_index":509,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.io.disconnect",{"_index":525,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.io.observe(this.el.queryselector('img",{"_index":823,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.io.observe(this.el.queryselector('ion",{"_index":521,"title":{},"body":{"components/BeerItem.html":{}}}],["this.iscrol",{"_index":1113,"title":{},"body":{"components/UsersPage.html":{}}}],["this.iscroll.addeventlistener('ioninfinit",{"_index":1114,"title":{},"body":{"components/UsersPage.html":{}}}],["this.iscroll.complet",{"_index":1121,"title":{},"body":{"components/UsersPage.html":{}}}],["this.isprerend",{"_index":1103,"title":{},"body":{"components/UsersPage.html":{}}}],["this.isserv",{"_index":237,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/ProfilePage.html":{}}}],["this.last",{"_index":1111,"title":{},"body":{"components/UsersPage.html":{}}}],["this.lazyimgloaded.emit(imag",{"_index":821,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.load",{"_index":330,"title":{},"body":{"components/BarDirections.html":{}}}],["this.loading.dismiss",{"_index":380,"title":{},"body":{"components/BarDirections.html":{}}}],["this.loading.pres",{"_index":333,"title":{},"body":{"components/BarDirections.html":{}}}],["this.loadingctrl.cr",{"_index":331,"title":{},"body":{"components/BarDirections.html":{}}}],["this.loadscript",{"_index":334,"title":{},"body":{"components/BarDirections.html":{}}}],["this.login",{"_index":275,"title":{},"body":{"components/AuthPage.html":{}}}],["this.loginanon()}>anonym",{"_index":278,"title":{},"body":{"components/AuthPage.html":{}}}],["this.logout",{"_index":951,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.logout()}>logout",{"_index":854,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.makenewpost",{"_index":667,"title":{},"body":{"components/FeedPage.html":{}}}],["this.modalctrl.cr",{"_index":665,"title":{},"body":{"components/FeedPage.html":{}}}],["this.newstyle(style.id",{"_index":640,"title":{},"body":{"components/BeerPage.html":{}}}],["this.not",{"_index":948,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.offlinecheck",{"_index":976,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.oldsrc",{"_index":812,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.openall()}>al",{"_index":852,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.openmap",{"_index":382,"title":{},"body":{"components/BarDirections.html":{}}}],["this.openpopover(ev",{"_index":913,"title":{},"body":{"components/ProfileHeader.html":{}}}],["this.openprofile()}>mi",{"_index":850,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.pag",{"_index":627,"title":{},"body":{"components/BeerPage.html":{}}}],["this.paginate(this.last",{"_index":1116,"title":{},"body":{"components/UsersPage.html":{}}}],["this.popov",{"_index":910,"title":{},"body":{"components/ProfileHeader.html":{}}}],["this.popover.dismiss",{"_index":908,"title":{},"body":{"components/ProfileHeader.html":{}}}],["this.popover.pres",{"_index":912,"title":{},"body":{"components/ProfileHeader.html":{}}}],["this.popoverctrl.cr",{"_index":911,"title":{},"body":{"components/ProfileHeader.html":{}}}],["this.post",{"_index":664,"title":{},"body":{"components/FeedPage.html":{},"components/StencilComponent.html":{}}}],["this.post.posttext",{"_index":860,"title":{},"body":{"components/PostDetail.html":{},"components/PostItem.html":{}}}],["this.post.titl",{"_index":859,"title":{},"body":{"components/PostDetail.html":{},"components/PostItem.html":{}}}],["this.posts.map((post",{"_index":1036,"title":{},"body":{"components/StencilComponent.html":{}}}],["this.postvalu",{"_index":713,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.profilep",{"_index":906,"title":{},"body":{"components/ProfileHeader.html":{}}}],["this.rat",{"_index":167,"title":{},"body":{"components/AMRating.html":{}}}],["this.ratingitems.map",{"_index":174,"title":{},"body":{"components/AMRating.html":{}}}],["this.ratingvalu",{"_index":722,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.removeintersectionobserv",{"_index":518,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.rootref",{"_index":710,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.rootref.child(`images/${this.filetoupload.nam",{"_index":748,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.save(this.b",{"_index":573,"title":{},"body":{"components/BeerItem.html":{}}}],["this.savebeer(b",{"_index":536,"title":{},"body":{"components/BeerItem.html":{}}}],["this.script",{"_index":324,"title":{},"body":{"components/BarDirections.html":{}}}],["this.script.addeventlistener('load",{"_index":335,"title":{},"body":{"components/BarDirections.html":{}}}],["this.script.src",{"_index":326,"title":{},"body":{"components/BarDirections.html":{}}}],["this.settings()}>set",{"_index":853,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.setupb",{"_index":612,"title":{},"body":{"components/BeerPage.html":{}}}],["this.setupus",{"_index":1104,"title":{},"body":{"components/UsersPage.html":{}}}],["this.share(this.b",{"_index":461,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["this.showerrortoast",{"_index":408,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{}}}],["this.src",{"_index":811,"title":{},"body":{"components/LazyImg.html":{},"components/PostImg.html":{}}}],["this.storag",{"_index":708,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.storage.ref",{"_index":711,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.storageus",{"_index":970,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.styles.map((styl",{"_index":639,"title":{},"body":{"components/BeerPage.html":{}}}],["this.submit()}>post",{"_index":760,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.subscrib",{"_index":938,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.swsupport",{"_index":931,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.takepictur",{"_index":764,"title":{},"body":{"components/FeedPageModal.html":{}}}],["this.toastctrl.cr",{"_index":409,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["this.unsubscrib",{"_index":946,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.url",{"_index":327,"title":{},"body":{"components/BarDirections.html":{}}}],["this.us",{"_index":927,"title":{},"body":{"components/ProfilePage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{}}}],["this.user.displaynam",{"_index":944,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.email",{"_index":945,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.nam",{"_index":1082,"title":{},"body":{"components/UserProfile.html":{}}}],["this.username).get",{"_index":1080,"title":{},"body":{"components/UserProfile.html":{}}}],["this.users.concat(emptyus",{"_index":1119,"title":{},"body":{"components/UsersPage.html":{}}}],["this.users.map((us",{"_index":1088,"title":{},"body":{"components/UsersList.html":{}}}],["threshold",{"_index":519,"title":{},"body":{"components/BeerItem.html":{}}}],["time",{"_index":794,"title":{},"body":{"components/LazyImg.html":{},"components/SettingsPage.html":{}}}],["titl",{"_index":450,"title":{},"body":{"components/BeerDetail.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["toast",{"_index":403,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["toast.pres",{"_index":414,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["toastctrl",{"_index":388,"title":{},"body":{"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["token",{"_index":1196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["top",{"_index":107,"title":{},"body":{"components/AMRating.html":{}}}],["tort",{"_index":1263,"title":{},"body":{"license.html":{}}}],["transform",{"_index":527,"title":{},"body":{"components/BeerItem.html":{}}}],["translatey(0",{"_index":530,"title":{},"body":{"components/BeerItem.html":{}}}],["translatey(20px",{"_index":528,"title":{},"body":{"components/BeerItem.html":{}}}],["travel",{"_index":361,"title":{},"body":{"components/BarDirections.html":{}}}],["travelmod",{"_index":364,"title":{},"body":{"components/BarDirections.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["tri",{"_index":267,"title":{},"body":{"components/AuthPage.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerPage.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{}}}],["true",{"_index":20,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{}}}],["ttb",{"_index":106,"title":{},"body":{"components/AMRating.html":{}}}],["type",{"_index":76,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"interfaces/Bar.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"interfaces/Beer.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"interfaces/Labels.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilComponent.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":556,"title":{},"body":{"components/BeerItem.html":{}}}],["undefin",{"_index":260,"title":{},"body":{"components/AuthPage.html":{}}}],["unimpl",{"_index":989,"title":{},"body":{"components/SettingsPage.html":{}}}],["unsubscrib",{"_index":918,"title":{},"body":{"components/ProfilePage.html":{}}}],["until",{"_index":796,"title":{},"body":{"components/LazyImg.html":{}}}],["up",{"_index":613,"title":{},"body":{"components/BeerPage.html":{},"components/LazyImg.html":{}}}],["updat",{"_index":62,"title":{},"body":{"components/AMRating.html":{},"components/FeedPage.html":{}}}],["updater",{"_index":44,"title":{},"body":{"components/AMRating.html":{}}}],["updaterating(newr",{"_index":72,"title":{},"body":{"components/AMRating.html":{}}}],["url",{"_index":299,"title":{},"body":{"components/BarDirections.html":{},"components/BeerDetail.html":{},"components/PostImg.html":{},"components/ShareButton.html":{},"miscellaneous/variables.html":{}}}],["urlb64touint8array",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["urlb64touint8array(base64str",{"_index":1193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AMRating.html":{},"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/SettingsPage.html":{},"license.html":{}}}],["user",{"_index":122,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{}}}],["user.data().email",{"_index":1071,"title":{},"body":{"components/UserProfile.html":{}}}],["user.displaynam",{"_index":249,"title":{},"body":{"components/AuthPage.html":{}}}],["user.email",{"_index":250,"title":{},"body":{"components/AuthPage.html":{}}}],["user.isanonym",{"_index":243,"title":{},"body":{"components/AuthPage.html":{}}}],["user.nam",{"_index":1089,"title":{},"body":{"components/UsersList.html":{}}}],["user.photourl",{"_index":252,"title":{},"body":{"components/AuthPage.html":{},"components/ProfileHeader.html":{}}}],["useremail",{"_index":1065,"title":{},"body":{"components/UserProfile.html":{}}}],["usernam",{"_index":1043,"title":{},"body":{"components/UserProfile.html":{},"components/UsersList.html":{}}}],["userprofil",{"_index":205,"title":{"components/UserProfile.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["userslist",{"_index":206,"title":{"components/UsersList.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["userspag",{"_index":207,"title":{"components/UsersPage.html":{}},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"coverage.html":{},"components/favoritesPage.html":{}}}],["valid",{"_index":102,"title":{},"body":{"components/AMRating.html":{}}}],["valu",{"_index":78,"title":{},"body":{"components/AMRating.html":{},"components/BarDirections.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/SettingsPage.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":179,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerList.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostDetail.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/StencilBeer.html":{},"components/StencilComponent.html":{},"components/TabsPage.html":{},"components/UserProfile.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["variabl",{"_index":1147,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vicin",{"_index":283,"title":{},"body":{"interfaces/Bar.html":{},"interfaces/Beer.html":{},"interfaces/Labels.html":{}}}],["view",{"_index":71,"title":{},"body":{"components/AMRating.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AMRating.html":{},"components/AuthPage.html":{},"components/BarDirections.html":{},"components/BarPage.html":{},"components/BeerDetail.html":{},"components/BeerItem.html":{},"components/BeerPage.html":{},"components/FeedPage.html":{},"components/FeedPageModal.html":{},"components/LazyImg.html":{},"components/PopoverPage.html":{},"components/PostImg.html":{},"components/PostItem.html":{},"components/ProfileHeader.html":{},"components/ProfilePage.html":{},"components/SettingsPage.html":{},"components/ShareButton.html":{},"components/UsersList.html":{},"components/UsersPage.html":{},"components/barList.html":{},"components/favoritesPage.html":{}}}],["warranti",{"_index":1246,"title":{},"body":{"license.html":{}}}],["web",{"_index":1019,"title":{},"body":{"components/ShareButton.html":{}}}],["wheat",{"_index":603,"title":{},"body":{"components/BeerPage.html":{}}}],["where('author",{"_index":564,"title":{},"body":{"components/BeerItem.html":{}}}],["where('beer.nam",{"_index":562,"title":{},"body":{"components/BeerItem.html":{}}}],["whether",{"_index":1260,"title":{},"body":{"license.html":{}}}],["window",{"_index":508,"title":{},"body":{"components/BeerItem.html":{},"components/LazyImg.html":{},"components/PostImg.html":{},"components/ProfilePage.html":{}}}],["window.location.href}/detail/${beer.id",{"_index":456,"title":{},"body":{"components/BeerDetail.html":{},"components/ShareButton.html":{}}}],["window.open(`http://twitter.com/share?text=check",{"_index":1024,"title":{},"body":{"components/ShareButton.html":{}}}],["window.open(`https://www.google.com/maps/dir/?api=1&origin=${this.directionsleg.start_address}&destination=${this.directionsleg.end_address",{"_index":381,"title":{},"body":{"components/BarDirections.html":{}}}],["within",{"_index":96,"title":{},"body":{"components/AMRating.html":{}}}],["without",{"_index":1227,"title":{},"body":{"license.html":{}}}],["x1",{"_index":110,"title":{},"body":{"components/AMRating.html":{}}}],["x2",{"_index":112,"title":{},"body":{"components/AMRating.html":{}}}],["ye",{"_index":551,"title":{},"body":{"components/BeerItem.html":{},"components/FeedPageModal.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":355,"title":{},"body":{"components/BarDirections.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AMRating.html":{"url":"components/AMRating.html","title":"component - AMRating","body":"\n                   \n\n\n\n\n\n  Components\n  AMRating\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/am-rating/am-rating.tsx\n\n\n    \n        Description\n    \n    \n        A simple rating component using StencilJS\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                am-rating\n            \n\n            \n                styleUrl\n                am-rating.css\n            \n\n            \n                shadow\n                true\n            \n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowHalfRatings\n                            \n                            \n                                colorOff\n                            \n                            \n                                colorOn\n                            \n                            \n                                colorOutline\n                            \n                            \n                                direction\n                            \n                            \n                                    Private\n                                directionSettings\n                            \n                            \n                                interactive\n                            \n                            \n                                    Private\n                                internalRating\n                            \n                            \n                                maxRating\n                            \n                            \n                                minRating\n                            \n                            \n                                rating\n                            \n                            \n                                ratingItems\n                            \n                            \n                                ratingUpdated\n                            \n                            \n                                reference\n                            \n                            \n                                svgPoints\n                            \n                            \n                                svgViewBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                createRatingItems\n                            \n                            \n                                handleMouseDown\n                            \n                            \n                                render\n                            \n                            \n                                updateRating\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentWillLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentWillLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:98\n                            \n                        \n\n\n                \n                    \n                            Once the component is loaded do the setup\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRatingItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateRatingItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:106\n                            \n                        \n\n\n                \n                    \n                            Create rating items\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleMouseDown\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleMouseDown(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:127\n                            \n                        \n\n\n                \n                    \n                            Handle the mouse being pressed and update the internal rating\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:160\n                            \n                        \n\n\n                \n                    \n                            When the state changes,\nrender the view\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateRating\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateRating(newRating)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newRating\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowHalfRatings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowHalfRatings:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:39\n                            \n                        \n\n                \n                    \n                        Determines if half ratings are allowed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorOff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorOff:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"#ffffff\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:59\n                            \n                        \n\n                \n                    \n                        The color to fill the rating with when it's outwith the max\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorOn:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"#000000\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:54\n                            \n                        \n\n                \n                    \n                        The color to fill the rating with when it's within the max\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorOutline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorOutline:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"#666666\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:64\n                            \n                        \n\n                \n                    \n                        The color to fill the rating with when it's outwith the max\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            direction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        direction:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"ltr\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:70\n                            \n                        \n\n                \n                    \n                        The direction of the shading.\nValid settings are 'ltr' (left to right) and 'ttb' (top to bottom)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            directionSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        directionSettings:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'ltr' : { \"x1\" : \"0\", \"x2\" : \"1\",\"y1\" : \"0\",\"y2\" : \"0\" },\n    'ttb' : { \"x1\" : \"0\", \"x2\" : \"0\",\"y1\" : \"0\",\"y2\" : \"1\" }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:90\n                            \n                        \n\n                \n                    \n                        Specifies the available gradient directions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interactive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interactive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:19\n                            \n                        \n\n                \n                    \n                        Determines if the user can set a rating\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            internalRating\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalRating:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:85\n                            \n                        \n\n                \n                    \n                        Keeps the internal rating (prop rating cannot be reassigned)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxRating\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxRating:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:34\n                            \n                        \n\n                \n                    \n                        The maximum rating possible\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minRating\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minRating:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:29\n                            \n                        \n\n                \n                    \n                        The minimum rating possible\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rating\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rating:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:24\n                            \n                        \n\n                \n                    \n                        The rating\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ratingItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ratingItems:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:49\n                            \n                        \n\n                \n                    \n                        The rating items, set once the component is loaded\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ratingUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ratingUpdated:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:80\n                            \n                        \n\n                \n                    \n                        Event fired when the rating is updated by user input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reference\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reference:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"rating-component\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:14\n                            \n                        \n\n                \n                    \n                        The rating identifier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            svgPoints\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        svgPoints:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"48 75 18.6107374 90.4508497 24.2235871 57.7254249 0.447174185 34.5491503 33.3053687 29.7745751 48 0 62.6946313 29.7745751 95.5528258 34.5491503 71.7764129 57.7254249 77.3892626 90.4508497\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:44\n                            \n                        \n\n                \n                    \n                        This is a star!\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            svgViewBox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        svgViewBox:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"0 0 100 100\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/am-rating/am-rating.tsx:75\n                            \n                        \n\n                \n                    \n                        The view box for the SVG\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop, State, Event, EventEmitter } from '@stencil/core';\n/**\n * A simple rating component using StencilJS\n */\n@Component({\n  tag: 'am-rating',\n  styleUrl: 'am-rating.css',\n  shadow: true\n})\nexport class AMRating {\n   /**\n   * The rating identifier\n   */\n  @Prop() reference: string = \"rating-component\";\n\n   /**\n   * Determines if the user can set a rating\n   */\n  @Prop() interactive: boolean = false;\n\n  /**\n   * The rating\n   */\n  @Prop() rating: number = 0;\n\n  /**\n   * The minimum rating possible\n   */\n  @Prop() minRating: number = 0;\n\n  /**\n   * The maximum rating possible\n   */\n  @Prop() maxRating: number = 5;\n\n   /**\n   * Determines if half ratings are allowed\n   */\n  @Prop() allowHalfRatings: boolean = false;\n\n  /**\n   * This is a star!\n   */\n  @Prop() svgPoints: string = \"48 75 18.6107374 90.4508497 24.2235871 57.7254249 0.447174185 34.5491503 33.3053687 29.7745751 48 0 62.6946313 29.7745751 95.5528258 34.5491503 71.7764129 57.7254249 77.3892626 90.4508497\";\n\n  /**\n   * The rating items, set once the component is loaded\n   */\n  @State() ratingItems: Array = [];\n\n  /**\n   * The color to fill the rating with when it's within the max\n   */\n  @Prop() colorOn: string = \"#000000\";\n\n  /**\n   * The color to fill the rating with when it's outwith the max\n   */\n  @Prop() colorOff: string = \"#ffffff\";\n\n  /**\n   * The color to fill the rating with when it's outwith the max\n   */\n  @Prop() colorOutline: string = \"#666666\";\n\n   /**\n   * The direction of the shading.\n   * Valid settings are 'ltr' (left to right) and 'ttb' (top to bottom)\n   */\n  @Prop() direction: string = \"ltr\";\n\n   /**\n   * The view box for the SVG\n   */\n  @Prop() svgViewBox: string = \"0 0 100 100\";\n\n  /**\n   * Event fired when the rating is updated by user input\n   */\n  @Event() ratingUpdated: EventEmitter;\n\n  /**\n   * Keeps the internal rating (prop rating cannot be reassigned)\n   */\n  private internalRating: number = 0;\n\n  /**\n   * Specifies the available gradient directions\n   */\n  private directionSettings = {\n    'ltr' : { \"x1\" : \"0\", \"x2\" : \"1\",\"y1\" : \"0\",\"y2\" : \"0\" },\n    'ttb' : { \"x1\" : \"0\", \"x2\" : \"0\",\"y1\" : \"0\",\"y2\" : \"1\" }\n  };\n\n  /**\n   * Once the component is loaded do the setup\n   */\n  componentWillLoad() {\n    this.internalRating = this.rating;\n    this.createRatingItems();\n  }\n\n  /**\n   * Create rating items\n   */\n  createRatingItems(){\n    let items = [];\n\n    const ratingFloor = Math.floor(this.internalRating);\n    const ratingRemainder = this.internalRating % 1 * 100;\n\n    for(var i = 0; i \n        {this.ratingItems.map( (ratingItem) =>\n         this.handleMouseDown(event) }\n          >\n            \n              \n                \n                \n              \n            \n            \n                \n              \n            \n        \n        )}\n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AMRating'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthPage.html":{"url":"components/AuthPage.html","title":"component - AuthPage","body":"\n                   \n\n\n\n\n\n  Components\n  AuthPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/auth-page/auth-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                auth-page\n            \n\n            \n                styleUrl\n                auth-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                    Private\n                                isServer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                getCertainUser\n                            \n                            \n                                login\n                            \n                            \n                                    Async\n                                loginAnon\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/auth-page/auth-page.tsx:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCertainUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCertainUser(email)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/auth-page/auth-page.tsx:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/auth-page/auth-page.tsx:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loginAnon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginAnon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/auth-page/auth-page.tsx:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/auth-page/auth-page.tsx:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/auth-page/auth-page.tsx:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isServer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({context: 'isServer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/auth-page/auth-page.tsx:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, Prop } from '@stencil/core';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'auth-page',\n  styleUrl: 'auth-page.css'\n})\nexport class AuthPage {\n\n  @Prop({ context: 'isServer' }) private isServer: boolean;\n\n  @Element() el: Element;\n\n  componentDidLoad() {\n    if (!this.isServer) {\n      console.log(firebase);\n      const db = firebase.firestore();\n\n      console.log(db);\n\n      firebase.auth().onAuthStateChanged(async (user) => {\n        if (user && !user.isAnonymous) {\n\n          const querySnapshot = await this.getCertainUser(user.email);\n          if (querySnapshot.empty) {\n            db.collection('users').add({\n              name: user.displayName,\n              email: user.email,\n              photo: user.photoURL\n            })\n          };\n\n          (this.el.closest('ion-nav') as HTMLIonNavElement).setRoot('tabs-page', null, { animated: false, direction: 'forward' });\n        } else if (user && user.isAnonymous) {\n          (this.el.closest('ion-nav') as HTMLIonNavElement).setRoot('tabs-page', null, { animated: false, direction: 'forward' });\n          if (sessionStorage !== undefined) {\n            sessionStorage.setItem('anon', 'true');\n          }\n        }\n      })\n    }\n  }\n\n  login() {\n    console.log(location.protocol);\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithRedirect(provider);\n  }\n\n  async loginAnon() {\n    try {\n      await firebase.auth().signInAnonymously();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  getCertainUser(email) {\n    return firebase.firestore().collection('users').where('email', '==', email).get();\n  }\n\n  render() {\n    return (\n      \n        \n          \n            \n              \n              \n              \n            \n\n            IonicBeer\n          \n\n          \n             this.login()} color='primary'>Login with Google\n             this.loginAnon()}>Anonymous Login\n          \n        \n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bar.html":{"url":"interfaces/Bar.html","title":"interface - Bar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Bar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/global/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        rating\n                                \n                                \n                                        vicinity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vicinity\n                                    \n                                \n                                \n                                    \n                                        vicinity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Beer {\n  name: string,\n  abv: string,\n  ibu: string,\n  description: string,\n  id: string,\n  labels: Labels\n}\n\nexport interface Labels {\n  medium: string,\n  large: string\n}\n\nexport interface Bar {\n  name: string,\n  vicinity: string,\n  id: string\n  rating: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BarDirections.html":{"url":"components/BarDirections.html","title":"component - BarDirections","body":"\n                   \n\n\n\n\n\n  Components\n  BarDirections\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/bar-directions/bar-directions.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                bar-directions\n            \n\n            \n                styleUrl\n                bar-directions.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                dest\n                            \n                            \n                                directionsLeg\n                            \n                            \n                                loading\n                            \n                            \n                                loadingCtrl\n                            \n                            \n                                script\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                componentDidLoad\n                            \n                            \n                                loadScript\n                            \n                            \n                                openMaps\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        componentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenMaps()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dest:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            directionsLeg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        directionsLeg:     google.maps.DirectionsLeg\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.DirectionsLeg\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     HTMLIonLoadingElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonLoadingElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingCtrl:     HTMLIonLoadingControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonLoadingControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-loading-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            script\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        script:     HTMLScriptElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLScriptElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCb9lhLYxUnRjSp1oIGl6aAsXLODc3o-f4'\n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-directions/bar-directions.tsx:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'bar-directions',\n  styleUrl: 'bar-directions.css'\n})\nexport class BarDirections {\n\n  @Prop() address: string;\n  @Prop() dest: string;\n  @Prop({ connect: 'ion-loading-controller' }) loadingCtrl: HTMLIonLoadingControllerElement;\n\n  @State() directionsLeg: google.maps.DirectionsLeg;\n\n  url = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCb9lhLYxUnRjSp1oIGl6aAsXLODc3o-f4';\n  script: HTMLScriptElement;\n  loading: HTMLIonLoadingElement;\n\n  loadScript() {\n    return new Promise((resolve) => {\n      this.script = document.createElement('script');\n      this.script.src = this.url;\n      document.body.appendChild(this.script);\n      resolve();\n    });\n  }\n\n  async componentDidLoad() {\n    this.loading = await this.loadingCtrl.create({\n      content: 'loading directions...'\n    });\n    this.loading.present();\n\n    await this.loadScript();\n\n    this.script.addEventListener('load', async () => {\n      const response = await fetch('/googleGeocode', {\n        method: 'post',\n        body: JSON.stringify({ address: this.address })\n      });\n      const data = await response.json();\n\n      navigator.geolocation.getCurrentPosition((position) => {\n        const start = { lat: position.coords.latitude, lng: position.coords.longitude };\n        const dest = { lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng };\n\n        const map = new google.maps.Map(document.querySelector('#map'), {\n          center: start,\n          zoom: 7\n        });\n\n        const directionsDisplay = new google.maps.DirectionsRenderer({\n          map: map\n        });\n\n        // Set destination, origin and travel mode.\n        const request = {\n          destination: dest,\n          origin: start,\n          travelMode: google.maps.TravelMode.DRIVING\n        };\n\n        // Pass the directions request to the directions service.\n        const directionsService = new google.maps.DirectionsService();\n        directionsService.route(request, (response, status) => {\n          if (status === google.maps.DirectionsStatus.OK) {\n            console.log(response);\n            this.directionsLeg = response.routes[0].legs[0];\n            console.log(this.directionsLeg);\n            // Display the route on the map.\n            directionsDisplay.setDirections(response);\n            this.loading.dismiss();\n          } else {\n            this.loading.dismiss();\n          }\n        });\n      })\n    });\n  }\n\n  openMaps() {\n    window.open(`https://www.google.com/maps/dir/?api=1&origin=${this.directionsLeg.start_address}&destination=${this.directionsLeg.end_address}`);\n  }\n\n  render() {\n    return [\n      \n        \n      ,\n      \n      \n        \n        \n\n          \n             this.openMaps()}>\n              \n            \n          \n\n          \n            \n              \n                {this.dest}\n              \n            \n\n            \n              \n                {this.directionsLeg ? {this.directionsLeg.duration.text} away : 'Loading...'}\n              \n            \n\n            \n              \n\n              \n                {this.directionsLeg ? this.directionsLeg.end_address : 'Loading...'}\n              \n            \n          \n        \n      \n    ];\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BarDirections'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BarPage.html":{"url":"components/BarPage.html","title":"component - BarPage","body":"\n                   \n\n\n\n\n\n  Components\n  BarPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/bar-page/bar-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                bar-page\n            \n\n            \n                styleUrl\n                bar-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bars\n                            \n                            \n                                    Private\n                                isServer\n                            \n                            \n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                    Async\n                                getBars\n                            \n                            \n                                render\n                            \n                            \n                                search\n                            \n                            \n                                    Async\n                                showErrorToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getBars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBars(position: Position)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        position\n                                                        \n                                                                    Position\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(ev)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Listen('ionInput')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ev\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            showErrorToast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorToast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bars:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isServer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({context: 'isServer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     HTMLIonToastControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonToastControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-toast-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-page/bar-page.tsx:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, State, Prop, Listen } from '@stencil/core';\n\nimport { Bar } from '../../global/interfaces';\n\n@Component({\n  tag: 'bar-page',\n  styleUrl: 'bar-page.css'\n})\nexport class BarPage {\n\n  @State() bars: Array;\n\n  @Prop({ context: 'isServer' }) private isServer: boolean;\n  @Prop({ connect: 'ion-toast-controller' }) toastCtrl: HTMLIonToastControllerElement;\n\n  componentDidLoad() {\n    if (!this.isServer) {\n      navigator.geolocation.getCurrentPosition((position: Position) => {\n        try {\n          this.getBars(position);\n        }\n        catch (err) {\n          this.showErrorToast();\n        }\n      });\n    }\n  }\n\n  async showErrorToast() {\n    const toast = await this.toastCtrl.create({ message: 'Error loading data', duration: 1000 });\n    toast.present();\n  }\n\n  async getBars(position: Position) {\n    const response = await fetch('/googlePlaces', {\n      method: 'post',\n      body: JSON.stringify({ lat: position.coords.latitude, long: position.coords.longitude })\n    })\n    const data = await response.json();\n    console.log(data);\n\n    this.bars = data;\n  }\n\n  @Listen('ionInput')\n  search(ev) {\n    setTimeout(() => {\n      const term = ev.detail.target.value;\n      console.log(term);\n      console.log(this.bars);\n\n      this.bars = this.bars.filter((bar) =>\n        bar.name.toLowerCase().indexOf(term.toLowerCase()) > -1\n      );\n    }, 1000);\n  }\n\n  render() {\n    return [\n      \n      ,\n\n      \n        \n      ,\n\n      \n        \n      \n    ];\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BarPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Beer.html":{"url":"interfaces/Beer.html","title":"interface - Beer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Beer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/global/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abv\n                                \n                                \n                                        description\n                                \n                                \n                                        ibu\n                                \n                                \n                                        id\n                                \n                                \n                                        labels\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                    \n                                \n                                \n                                    \n                                        abv:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ibu\n                                    \n                                \n                                \n                                    \n                                        ibu:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     Labels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Labels\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Beer {\n  name: string,\n  abv: string,\n  ibu: string,\n  description: string,\n  id: string,\n  labels: Labels\n}\n\nexport interface Labels {\n  medium: string,\n  large: string\n}\n\nexport interface Bar {\n  name: string,\n  vicinity: string,\n  id: string\n  rating: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BeerDetail.html":{"url":"components/BeerDetail.html","title":"component - BeerDetail","body":"\n                   \n\n\n\n\n\n  Components\n  BeerDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/beer-detail/beer-detail.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                beer-detail\n            \n\n            \n                styleUrl\n                beer-detail.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beer\n                            \n                            \n                                beerId\n                            \n                            \n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                    Async\n                                getBeerDetail\n                            \n                            \n                                render\n                            \n                            \n                                    Async\n                                share\n                            \n                            \n                                    Async\n                                showErrorToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getBeerDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBeerDetail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            share\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        share(beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            showErrorToast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorToast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beer:     Beer\n\n                    \n                \n                    \n                        \n                            Type :     Beer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beerId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beerId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     HTMLIonToastControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonToastControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-toast-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-detail/beer-detail.tsx:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop, State } from '@stencil/core';\n\nimport { Beer } from '../../global/interfaces';\nimport { getBeerDetail } from '../../global/http-service';\n\n@Component({\n  tag: 'beer-detail',\n  styleUrl: 'beer-detail.css'\n})\nexport class BeerDetail {\n\n  @State() beer: Beer;\n\n  @Prop({ connect: 'ion-toast-controller' }) toastCtrl: HTMLIonToastControllerElement;\n  @Prop() beerId: string;\n\n  componentDidLoad() {\n    try {\n      this.getBeerDetail();\n    }\n    catch (err) {\n      this.showErrorToast();\n      console.log(err);\n    }\n  }\n\n  async showErrorToast() {\n    const toast = await this.toastCtrl.create({ message: 'Error loading data', duration: 1000 });\n    toast.present();\n  }\n\n  async getBeerDetail() {\n    this.beer = await getBeerDetail(this.beerId);\n  }\n\n  async share(beer) {\n    await (navigator as any).share({\n      title: document.title,\n      text: \"Check out this cool beer\",\n      url: `${window.location.href}/detail/${beer.id}`\n    })\n\n    const toast = await this.toastCtrl.create({ message: 'beer shared', duration: 1000 });\n    toast.present();\n  }\n\n  render() {\n    if (this.beer) {\n      return [\n        \n          \n        ,\n\n        \n          \n            \n              \n            \n            {this.beer.name}\n\n            ABV: {this.beer.abv ? this.beer.abv : 'Not available'}\n            IBU: {this.beer.ibu ? this.beer.ibu : 'Not available'}\n\n            {this.beer.description ? this.beer.description : 'No description available'}\n\n          \n\n          \n             this.share(this.beer)}>\n              \n            \n          \n        \n      ]\n    } else {\n      return [\n        \n          \n        ,\n\n        \n          \n            \n          \n        \n      ];\n    }\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BeerDetail'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BeerItem.html":{"url":"components/BeerItem.html","title":"component - BeerItem","body":"\n                   \n\n\n\n\n\n  Components\n  BeerItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/beer-item/beer-item.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                beer-item\n            \n\n            \n                styleUrl\n                beer-item.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertCtrl\n                            \n                            \n                                beer\n                            \n                            \n                                beerDeleted\n                            \n                            \n                                el\n                            \n                            \n                                fave\n                            \n                            \n                                io\n                            \n                            \n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIntersectionObserver\n                            \n                            \n                                componentDidLoad\n                            \n                            \n                                    Async\n                                deleteBeer\n                            \n                            \n                                    Async\n                                deleteBeerHelper\n                            \n                            \n                                handleAnimation\n                            \n                            \n                                navigateToDetail\n                            \n                            \n                                removeIntersectionObserver\n                            \n                            \n                                render\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                saveBeer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addIntersectionObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \naddIntersectionObserver()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            deleteBeer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteBeer(beer: Beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beer\n                                                        \n                                                                    Beer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            deleteBeerHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteBeerHelper(passedBeer: Beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        passedBeer\n                                                        \n                                                                    Beer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleAnimation(element: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateToDetail(beerId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beerId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeIntersectionObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveIntersectionObserver()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        save(beer: Beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beer\n                                                        \n                                                                    Beer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveBeer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveBeer(value: Beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Beer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertCtrl:     HTMLIonAlertControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonAlertControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-alert-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beer:     Beer\n\n                    \n                \n                    \n                        \n                            Type :     Beer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beerDeleted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beerDeleted:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fave:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     HTMLIonToastControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonToastControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-toast-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-item/beer-item.tsx:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop, Element, Event, EventEmitter } from '@stencil/core';\n\nimport { Beer } from '../../global/interfaces';\nimport { checkAnon } from '../../global/utils';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'beer-item',\n  styleUrl: 'beer-item.css'\n})\nexport class BeerItem {\n\n  @Prop() beer: Beer;\n  @Prop() fave: Boolean = false;\n  @Prop({ connect: 'ion-toast-controller' }) toastCtrl: HTMLIonToastControllerElement;\n  @Prop({ connect: 'ion-alert-controller' }) alertCtrl: HTMLIonAlertControllerElement;\n\n  @Element() el: HTMLElement;\n\n  @Event() beerDeleted: EventEmitter;\n\n  io: IntersectionObserver;\n\n  componentDidLoad() {\n    this.addIntersectionObserver();\n  }\n\n  addIntersectionObserver() {\n    if ('IntersectionObserver' in window) {\n      this.io = new IntersectionObserver((data: IntersectionObserverEntry[]) => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.handleAnimation((data[0].target as HTMLElement));\n          this.removeIntersectionObserver();\n        }\n      }, {\n          threshold: [0.2]\n        })\n\n      this.io.observe(this.el.querySelector('ion-card'));\n    } else {\n      (this.el.querySelector('ion-card') as any).style.opacity = '1';\n    }\n  }\n\n  removeIntersectionObserver() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = null;\n    }\n  }\n\n  handleAnimation(element: HTMLElement) {\n    if ('animate' in element) {\n      element.animate(\n        [\n          { transform: 'translateY(20px)', opacity: 0 },\n          { transform: 'translateY(0)', opacity: 1 }\n        ], {\n          duration: 300,\n          easing: 'cubic-bezier(.36,.66,.04,1)',\n          fill: 'forwards'\n        }\n      )\n    } else {\n      (this.el.querySelector('ion-card') as any).style.opacity = '1';\n    }\n  }\n\n  async save(beer: Beer) {\n    console.log('here');\n    if (!checkAnon()) {\n      this.saveBeer(beer);\n\n      const toast = await this.toastCtrl.create({ message: 'beer favorited', duration: 1000 });\n      await toast.present();\n    } else {\n      const alert = await this.alertCtrl.create({\n        header: 'Must login',\n        message: 'This feature is not available to anonymous users. Would you like to sign in with Google?',\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel: blah');\n            }\n          }, {\n            text: 'Yes',\n            handler: () => {\n              const provider = new firebase.auth.GoogleAuthProvider();\n              firebase.auth().currentUser.linkWithRedirect(provider);\n            }\n          }\n        ]\n      });\n      return await alert.present();\n    }\n  }\n\n  async deleteBeer(beer: Beer) {\n    await this.deleteBeerHelper(beer);\n\n    this.beerDeleted.emit();\n\n    const toast = await this.toastCtrl.create({ message: 'beer un-favorited', duration: 1000 });\n    toast.present();\n  }\n\n  saveBeer(value: Beer) {\n    firebase.firestore().collection('savedBeers').add({\n      author: firebase.auth().currentUser.email,\n      beer: value\n    });\n  }\n\n  async deleteBeerHelper(passedBeer: Beer) {\n    const doc = await firebase.firestore().collection('savedBeers')\n      .where('beer.name', '==', passedBeer.name)\n      .where('author', '==', (window as any).firebase.auth().currentUser.email)\n      .get();\n\n    doc.forEach((beer) => {\n      beer.ref.delete();\n    })\n  }\n\n  navigateToDetail(beerId: string) {\n    (this.el.closest('ion-nav') as HTMLIonNavElement).push('beer-detail', { beerId });\n  }\n\n  render() {\n    return (\n      \n        \n        \n          \n            {this.beer.name}\n          \n\n          \n            {this.beer.description ? this.beer.description : 'No description available'}\n          \n\n          \n            {this.fave ?\n               this.deleteBeer(this.beer)} fill='clear' icon-only>\n                \n              \n              :\n               this.save(this.beer)} fill='clear' icon-only>\n                \n              \n            }\n\n            \n\n            \n              Detail\n            \n          \n\n        \n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BeerItem'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BeerList.html":{"url":"components/BeerList.html","title":"component - BeerList","body":"\n                   \n\n\n\n\n\n  Components\n  BeerList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/beer-list/beer-list.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                beer-list\n            \n\n            \n                styleUrl\n                beer-list.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beers\n                            \n                            \n                                fave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-list/beer-list.tsx:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beers:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-list/beer-list.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fave:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-list/beer-list.tsx:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop } from '@stencil/core';\n\nimport { Beer } from '../../global/interfaces';\n\n\n@Component({\n  tag: 'beer-list',\n  styleUrl: 'beer-list.css'\n})\nexport class BeerList {\n\n  @Prop() beers: Array;\n  @Prop() fave: Boolean;\n\n  render() {\n    if (this.beers) {\n      const beers = this.beers.map((beer) => {\n        return (\n          \n        )\n      });\n\n      return (\n        \n          {beers}\n        \n      )\n    } else {\n      return (\n        \n          \n          \n          \n          \n        \n      )\n    }\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BeerList'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BeerPage.html":{"url":"components/BeerPage.html","title":"component - BeerPage","body":"\n                   \n\n\n\n\n\n  Components\n  BeerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/beer-page/beer-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                beer-page\n            \n\n            \n                styleUrl\n                beer-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beers\n                            \n                            \n                                currentStyle\n                            \n                            \n                                el\n                            \n                            \n                                page\n                            \n                            \n                                styles\n                            \n                            \n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                componentDidLoad\n                            \n                            \n                                    Async\n                                newStyle\n                            \n                            \n                                render\n                            \n                            \n                                search\n                            \n                            \n                                    Async\n                                setUpBeers\n                            \n                            \n                                    Async\n                                showErrorToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        componentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            newStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        newStyle(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(ev)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Listen('ionInput')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ev\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            setUpBeers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUpBeers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            showErrorToast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorToast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beers:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStyle:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'English IPA',\n      id: 2\n    },\n    {\n      name: 'Imperial IPA',\n      id: 31\n    },\n    {\n      name: 'Stout',\n      id: 20\n    },\n    {\n      name: 'Wheat',\n      id: 112\n    },\n    {\n      name: 'Oktoberfest',\n      id: 82\n    },\n    {\n      name: 'Lager',\n      id: 93\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     HTMLIonToastControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonToastControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-toast-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/beer-page/beer-page.tsx:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, State, Prop, Listen } from '@stencil/core';\n\nimport { Beer } from '../../global/interfaces';\nimport { fetchBeers, doSearch } from '../../global/http-service';\n\n@Component({\n  tag: 'beer-page',\n  styleUrl: 'beer-page.css'\n})\nexport class BeerPage {\n\n  page: number = 1;\n  currentStyle: number = 2;\n  styles: Array = [\n    {\n      name: 'English IPA',\n      id: 2\n    },\n    {\n      name: 'Imperial IPA',\n      id: 31\n    },\n    {\n      name: 'Stout',\n      id: 20\n    },\n    {\n      name: 'Wheat',\n      id: 112\n    },\n    {\n      name: 'Oktoberfest',\n      id: 82\n    },\n    {\n      name: 'Lager',\n      id: 93\n    }\n  ];\n\n  @State() beers: Array;\n\n  @Prop({ connect: 'ion-toast-controller' }) toastCtrl: HTMLIonToastControllerElement;\n\n\n  @Element() el: Element;\n\n  async componentDidLoad() {\n    this.setUpBeers();\n  }\n\n  async setUpBeers() {\n    // set up with first bit of content\n    try {\n      this.beers = await fetchBeers(this.page, this.currentStyle);\n    }\n    catch (err) {\n      console.log(err);\n      this.showErrorToast();\n    }\n\n    // now lets init infiniteScrolling\n    const iScroll: HTMLIonInfiniteScrollElement = this.el.querySelector('#infinite-scroll');\n\n    iScroll.addEventListener('ionInfinite', async () => {\n      this.page = this.page + 1;\n\n      try {\n        const newBeers = await fetchBeers(this.page, this.currentStyle);\n        this.beers = this.beers.concat(newBeers);\n        iScroll.complete();\n      }\n      catch (err) {\n        console.log(err);\n        this.showErrorToast();\n      }\n    })\n  }\n\n  async newStyle(id: number) {\n    // reset beers\n    this.beers = null;\n\n    try {\n      this.beers = await fetchBeers(1, id);\n    }\n    catch (err) {\n      console.error(err);\n      this.showErrorToast();\n    }\n  }\n\n  async showErrorToast() {\n    const toast = await this.toastCtrl.create({ message: 'Error loading data', duration: 1000 });\n    toast.present();\n  }\n\n  @Listen('ionInput')\n  search(ev) {\n    setTimeout(async () => {\n      if (ev.target.value.length > 0) {\n        try {\n          const searchTerm = ev.target.value;\n          this.beers = await doSearch(searchTerm);\n        }\n        catch (err) {\n          this.beers = await fetchBeers(this.page);\n        }\n      } else {\n        this.beers = await fetchBeers(1);\n      }\n    }, 500);\n  }\n\n  render() {\n    return [\n      \n        \n          \n        \n      ,\n\n      \n        \n          {\n            this.styles.map((style) => {\n              return (\n                 this.newStyle(style.id)} color='dark' shape='round'>\n                  {style.name}\n                \n              )\n            })\n          }\n        \n        \n\n        \n          \n          \n        \n      \n    ];\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BeerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedPage.html":{"url":"components/FeedPage.html","title":"component - FeedPage","body":"\n                   \n\n\n\n\n\n  Components\n  FeedPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/feed-page/feed-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                feed-page\n            \n\n            \n                styleUrl\n                feed-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalCtrl\n                            \n                            \n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                    Async\n                                getPosts\n                            \n                            \n                                    Async\n                                makeNewPost\n                            \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page/feed-page.tsx:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getPosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPosts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page/feed-page.tsx:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            makeNewPost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        makeNewPost()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page/feed-page.tsx:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page/feed-page.tsx:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Listen('body:ionModalDidDismiss')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/components/feed-page/feed-page.tsx:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalCtrl:     HTMLIonModalControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonModalControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-modal-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page/feed-page.tsx:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page/feed-page.tsx:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Listen, Prop, State } from '@stencil/core';\n\nimport { checkAnon } from '../../global/utils';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'feed-page',\n  styleUrl: 'feed-page.css'\n})\nexport class FeedPage {\n\n  @State() posts: any = [];\n\n  @Prop({ connect: 'ion-modal-controller' }) modalCtrl: HTMLIonModalControllerElement;\n\n  componentDidLoad() {\n    this.getPosts();\n  }\n\n  async getPosts() {\n    const tempPosts = [];\n\n    const snapshot = await firebase.firestore().collection('feed').get();\n    snapshot.forEach((doc) => {\n      tempPosts.push(doc.data());\n    });\n\n    console.log(tempPosts);\n\n    this.posts = tempPosts;\n  }\n\n  @Listen('body:ionModalDidDismiss')\n  update() {\n    this.getPosts();\n  }\n\n  async makeNewPost() {\n    const modal = await this.modalCtrl.create({\n      component: 'feed-page-modal'\n    });\n    await modal.present();\n  }\n\n  render() {\n    return (\n      \n\n        \n        \n\n        \n          \n\n          {checkAnon() ? null : \n             this.makeNewPost()}>\n              \n            \n          }\n        \n\n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedPageModal.html":{"url":"components/FeedPageModal.html","title":"component - FeedPageModal","body":"\n                   \n\n\n\n\n\n  Components\n  FeedPageModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/feed-page-modal/feed-page-modal.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                feed-page-modal\n            \n\n            \n                styleUrl\n                feed-page-modal.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertCtrl\n                            \n                            \n                                beerNameValue\n                            \n                            \n                                el\n                            \n                            \n                                fileToUpload\n                            \n                            \n                                imageRef\n                            \n                            \n                                imageSrc\n                            \n                            \n                                postValue\n                            \n                            \n                                ratingValue\n                            \n                            \n                                rootRef\n                            \n                            \n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancel\n                            \n                            \n                                componentDidLoad\n                            \n                            \n                                dismiss\n                            \n                            \n                                handleBeerNameValue\n                            \n                            \n                                handlePostValue\n                            \n                            \n                                handleRatingValue\n                            \n                            \n                                render\n                            \n                            \n                                    Async\n                                submit\n                            \n                            \n                                takePicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \ndismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleBeerNameValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleBeerNameValue(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handlePostValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandlePostValue(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleRatingValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleRatingValue(event)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Listen('ionChange')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            takePicture\n                            \n                            \n                        \n                    \n                \n                \n                    \ntakePicture()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertCtrl:     HTMLIonAlertControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonAlertControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-alert-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beerNameValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beerNameValue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileToUpload:     File\n\n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageRef:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageSrc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postValue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ratingValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ratingValue:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootRef:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-page-modal/feed-page-modal.tsx:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, Listen, Prop, State } from '@stencil/core';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'feed-page-modal',\n  styleUrl: 'feed-page-modal.css'\n})\nexport class FeedPageModal {\n\n  @State() postValue: string;\n  @State() beerNameValue: string;\n  @State() ratingValue: number = 0;\n  @State() imageSrc: string;\n\n  @Prop({ connect: 'ion-alert-controller' }) alertCtrl: HTMLIonAlertControllerElement;\n\n  @Element() el: Element;\n\n  storage: any;\n  rootRef: any;\n  imageRef: any;\n  fileToUpload: File;\n\n  componentDidLoad() {\n    this.storage = firebase.storage();\n    this.rootRef = this.storage.ref();\n  }\n\n  dismiss() {\n    (this.el.closest('ion-modal') as any).dismiss();\n  }\n\n  handlePostValue(event) {\n    this.postValue = event.target.value;\n    console.log(this.postValue);\n  }\n\n  handleBeerNameValue(event) {\n    this.beerNameValue = event.target.value;\n  }\n\n  @Listen('ionChange')\n  handleRatingValue(event) {\n    console.log('I got an event', event);\n    console.log(event.target.localName);\n    if (event.target.localName === 'ion-range') {\n      console.log(event.detail.value);\n      this.ratingValue = event.detail.value;\n    }\n  }\n\n  takePicture() {\n    console.log('take picture');\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.name = 'image';\n    input.accept = 'image/*';\n    input.setAttribute('capture', 'camera');\n\n    input.addEventListener('change', (ev: Event) => {\n      console.log('changed', ev);\n      console.log((ev.target as HTMLInputElement).files);\n      this.fileToUpload = (ev.target as HTMLInputElement).files[0];\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.imageSrc = reader.result;\n        console.log(this.imageSrc);\n      }\n      reader.readAsDataURL(this.fileToUpload);\n\n      this.imageRef = this.rootRef.child(`images/${this.fileToUpload.name}`);\n    }, false);\n\n    input.click();\n  }\n\n  async submit() {\n    if (this.postValue && this.beerNameValue && this.ratingValue) {\n      firebase.firestore().collection('feed').add({\n        author: firebase.auth().currentUser.email,\n        postText: this.postValue,\n        title: this.beerNameValue,\n        rating: this.ratingValue,\n        image: this.imageRef ? this.imageRef.fullPath : null\n      });\n\n      if (this.imageRef) {\n        await this.imageRef.put(this.fileToUpload);\n      }\n\n      this.dismiss();\n    } else {\n      const alert = await this.alertCtrl.create({\n        header: 'Cant Submit',\n        message: 'You must enter a post, title and rating to submit. Would you like to discard this post?',\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel: blah');\n            }\n          }, {\n            text: 'Yes',\n            cssClass: 'danger',\n            handler: () => {\n              this.dismiss()\n            }\n          }\n        ]\n      });\n      return await alert.present();\n    }\n  }\n\n  async cancel() {\n    const alert = await this.alertCtrl.create({\n      header: 'Discard Post?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Yes',\n          cssClass: 'danger',\n          handler: () => {\n            this.dismiss();\n          }\n        }\n      ]\n    });\n    return await alert.present();\n  }\n\n  render() {\n    return (\n      \n        \n          \n            New Post\n\n            \n               this.cancel()}>Cancel\n               this.submit()}>Post\n            \n          \n        \n\n        \n          \n            Beer Name\n             { this.handleBeerNameValue(event) }} required>\n          \n\n          \n            New Post\n             { this.handlePostValue(event) }} required>\n          \n\n          Rating\n          \n            \n          \n\n          \n             this.takePicture()} expand='block' color='primary'>Add Picture\n          \n\n          {this.imageSrc ?  : null}\n        \n\n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedPageModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Labels.html":{"url":"interfaces/Labels.html","title":"interface - Labels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Labels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/global/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        large\n                                \n                                \n                                        medium\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        large\n                                    \n                                \n                                \n                                    \n                                        large:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medium\n                                    \n                                \n                                \n                                    \n                                        medium:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Beer {\n  name: string,\n  abv: string,\n  ibu: string,\n  description: string,\n  id: string,\n  labels: Labels\n}\n\nexport interface Labels {\n  medium: string,\n  large: string\n}\n\nexport interface Bar {\n  name: string,\n  vicinity: string,\n  id: string\n  rating: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LazyImg.html":{"url":"components/LazyImg.html","title":"component - LazyImg","body":"\n                   \n\n\n\n\n\n  Components\n  LazyImg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/lazy-img/lazy-img.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                lazy-img\n            \n\n            \n                styleUrl\n                lazy-img.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alt\n                            \n                            \n                                el\n                            \n                            \n                                io\n                            \n                            \n                                lazyImgloaded\n                            \n                            \n                                oldSrc\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIntersectionObserver\n                            \n                            \n                                componentDidLoad\n                            \n                            \n                                componentWillUpdate\n                            \n                            \n                                handleImage\n                            \n                            \n                                removeIntersectionObserver\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addIntersectionObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \naddIntersectionObserver()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentWillUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentWillUpdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeIntersectionObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveIntersectionObserver()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alt:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lazyImgloaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lazyImgloaded:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldSrc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            src\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        src:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/lazy-img/lazy-img.tsx:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Element, Event, EventEmitter, Prop, State} from '@stencil/core';\n\n/*\n  You can use this component to lazy load below the fold images to improve load time.\n  Below the fold images are images that are not seen by the user until they have started to scroll.\n  Instead of loading all these images up front before the user even sees them, which will eat up\n  network bandwith, we can use this component to put off loading these images until the user has\n  scrolled to where that image is in your PWA.\n  To use this component use the following markup: \n*/\n\n@Component({\n  tag: 'lazy-img',\n  styleUrl: 'lazy-img.css'\n})\nexport class LazyImg {\n\n  @Element() el: HTMLElement;\n\n  @Prop() src: string;\n  @Prop() alt: string;\n\n  @State() oldSrc: string;\n\n  @Event() lazyImgloaded: EventEmitter;\n\n  io: IntersectionObserver;\n\n  componentDidLoad() {\n    this.addIntersectionObserver();\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate called', this.src, this.oldSrc);\n    if (this.src !== this.el.querySelector('img').getAttribute('data-src')) {\n      this.addIntersectionObserver();\n    }\n  }\n\n  handleImage() {\n    const image: HTMLImageElement = this.el.querySelector('img');\n    console.log(image.getAttribute('data-src'));\n    if (image.getAttribute('data-src')) {\n      image.setAttribute('src', image.getAttribute('data-src'));\n      image.onload = () => {\n        image.removeAttribute('data-src');\n        this.lazyImgloaded.emit(image);\n      };\n    }\n  }\n\n  addIntersectionObserver() {\n    if (!this.src) {\n      return;\n    }\n    if ('IntersectionObserver' in window) {\n      this.io = new IntersectionObserver((data: IntersectionObserverEntry[]) => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.handleImage();\n          this.removeIntersectionObserver();\n        }\n      })\n\n      this.io.observe(this.el.querySelector('img'));\n    } else {\n      // fall back to just loading the image for Safari and IE\n      this.handleImage();\n    }\n  }\n\n  removeIntersectionObserver() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = null;\n    }\n  }\n\n  render() {\n    return (\n      \n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LazyImg'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopoverPage.html":{"url":"components/PopoverPage.html","title":"component - PopoverPage","body":"\n                   \n\n\n\n\n\n  Components\n  PopoverPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/popover-page/popover-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                popover-page\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closePopover\n                            \n                            \n                                el\n                            \n                            \n                                popoverCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                logout\n                            \n                            \n                                openAll\n                            \n                            \n                                openProfile\n                            \n                            \n                                render\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenProfile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                            \n                        \n                    \n                \n                \n                    \nsettings()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closePopover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closePopover:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     HTMLIonPopoverControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonPopoverControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-popover-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/popover-page/popover-page.tsx:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, Event, EventEmitter, Prop } from '@stencil/core';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'popover-page'\n})\nexport class PopoverPage {\n\n  @Prop({ connect: 'ion-popover-controller' }) popoverCtrl: HTMLIonPopoverControllerElement;\n\n  @Event() closePopover: EventEmitter;\n\n  @Element() el: Element;\n\n  openProfile() {\n    this.closePopover.emit();\n    (document.querySelector('ion-nav') as HTMLIonNavElement).push('profile-page');\n\n  }\n\n  openAll() {\n    this.closePopover.emit();\n    (document.querySelector('ion-nav') as HTMLIonNavElement).push('users-page');\n  }\n\n  settings() {\n    this.closePopover.emit();\n    (document.querySelector('ion-nav') as HTMLIonNavElement).push('settings-page');\n  }\n\n  async logout() {\n    console.log('here');\n    this.closePopover.emit();\n    await firebase.auth().signOut();\n    // this.history.replace('/', {});\n    (document.querySelector('ion-nav') as HTMLIonNavElement).setRoot('auth-page');\n  }\n\n  render() {\n    return (\n      \n         this.openProfile()}>My Profile\n         this.openAll()}>All Users\n         this.settings()}>Settings\n         this.logout()}>Logout\n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PopoverPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostDetail.html":{"url":"components/PostDetail.html","title":"component - PostDetail","body":"\n                   \n\n\n\n\n\n  Components\n  PostDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/post-detail/post-detail.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                post-detail\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-detail/post-detail.tsx:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        post:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-detail/post-detail.tsx:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop } from '@stencil/core';\n\n\n@Component({\n  tag: 'post-detail'\n})\nexport class PostDetail {\n\n  @Prop() post: any;\n\n  render() {\n    return (\n      \n\n        \n          \n        \n\n        \n          \n\n          {this.post.title}\n          {this.post.postText}\n\n          \n        \n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostDetail'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostImg.html":{"url":"components/PostImg.html","title":"component - PostImg","body":"\n                   \n\n\n\n\n\n  Components\n  PostImg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/post-img/post-img.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                post-img\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alt\n                            \n                            \n                                el\n                            \n                            \n                                firebaseSrc\n                            \n                            \n                                io\n                            \n                            \n                                lazyImgloaded\n                            \n                            \n                                oldSrc\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIntersectionObserver\n                            \n                            \n                                componentDidLoad\n                            \n                            \n                                componentWillUpdate\n                            \n                            \n                                    Async\n                                handleImage\n                            \n                            \n                                removeIntersectionObserver\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addIntersectionObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \naddIntersectionObserver()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentWillUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentWillUpdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            handleImage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeIntersectionObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveIntersectionObserver()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alt:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firebaseSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseSrc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lazyImgloaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lazyImgloaded:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldSrc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            src\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        src:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-img/post-img.tsx:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, Event, EventEmitter, Prop, State } from '@stencil/core';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'post-img'\n})\nexport class PostImg {\n  @Element() el: HTMLElement;\n\n  @Prop() src: string;\n  @Prop() alt: string;\n\n  @State() oldSrc: string;\n  @State() firebaseSrc: string;\n\n  @Event() lazyImgloaded: EventEmitter;\n\n  io: IntersectionObserver;\n\n  componentDidLoad() {\n    this.addIntersectionObserver();\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate called', this.src, this.oldSrc);\n    if (this.src !== this.el.querySelector('img').getAttribute('data-src')) {\n      this.addIntersectionObserver();\n    }\n  }\n\n  async handleImage() {\n    const image: HTMLImageElement = this.el.querySelector('img');\n\n    const storage = firebase.storage();\n    const imagePath = storage.ref(this.src);\n\n    const url = await imagePath.getDownloadURL();\n\n    this.firebaseSrc = url;\n\n    image.onload = () => {\n      this.lazyImgloaded.emit(image);\n    };\n  }\n\n  addIntersectionObserver() {\n    if (!this.src) {\n      return;\n    }\n    if ('IntersectionObserver' in window) {\n      this.io = new IntersectionObserver((data: IntersectionObserverEntry[]) => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.handleImage();\n          this.removeIntersectionObserver();\n        }\n      })\n\n      this.io.observe(this.el.querySelector('img'));\n    } else {\n      // fall back to just loading the image for Safari and IE\n      this.handleImage();\n    }\n  }\n\n  removeIntersectionObserver() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = null;\n    }\n  }\n\n  render() {\n    return (\n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostImg'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostItem.html":{"url":"components/PostItem.html","title":"component - PostItem","body":"\n                   \n\n\n\n\n\n  Components\n  PostItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/post-item/post-item.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                post-item\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickedDetail\n                            \n                            \n                                componentDidLoad\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickedDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickedDetail(post)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-item/post-item.tsx:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        post\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-item/post-item.tsx:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/post-item/post-item.tsx:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-item/post-item.tsx:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        post:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/post-item/post-item.tsx:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, Prop } from '@stencil/core';\n\n\n@Component({\n  tag: 'post-item'\n})\nexport class PostItem {\n\n  @Prop() post: any;\n\n  @Element() el: Element;\n\n  componentDidLoad() {\n    console.log(this.post);\n  }\n\n  clickedDetail(post) {\n    (this.el.closest('ion-nav')as HTMLIonNavElement).push('post-detail', {post});\n  }\n\n  render() {\n    return (\n       {this.clickedDetail(this.post)}}>\n        \n          \n        \n\n        \n          {this.post.title}\n          {this.post.postText}\n\n          \n        \n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostItem'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileHeader.html":{"url":"components/ProfileHeader.html","title":"component - ProfileHeader","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/profile-header/profile-header.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                profile-header\n            \n\n            \n                styleUrl\n                profile-header.css\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                popover\n                            \n                            \n                                popoverCtrl\n                            \n                            \n                                profilePic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePopover\n                            \n                            \n                                componentDidLoad\n                            \n                            \n                                    Async\n                                openPopover\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closePopover\n                            \n                            \n                        \n                    \n                \n                \n                    \nclosePopover()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Listen('body:closePopover')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/components/profile-header/profile-header.tsx:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-header/profile-header.tsx:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            openPopover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openPopover(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-header/profile-header.tsx:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-header/profile-header.tsx:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popover:     HTMLIonPopoverElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonPopoverElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-header/profile-header.tsx:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     HTMLIonPopoverControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonPopoverControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-popover-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-header/profile-header.tsx:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profilePic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profilePic:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-header/profile-header.tsx:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop, State, Listen } from '@stencil/core';\n\nimport { checkAnon } from '../../global/utils';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'profile-header',\n  styleUrl: 'profile-header.css',\n  scoped: true\n})\nexport class ProfileHeader {\n\n  popover: HTMLIonPopoverElement;\n\n  @State() profilePic: string;\n\n  @Prop({ connect: 'ion-popover-controller' }) popoverCtrl: HTMLIonPopoverControllerElement;\n\n  componentDidLoad() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.profilePic = user.photoURL;\n      }\n    });\n\n    console.log(checkAnon());\n  }\n\n  @Listen('body:closePopover')\n  closePopover() {\n    this.popover.dismiss();\n  }\n\n  async openPopover(event) {\n    console.log(event);\n    this.popover = await this.popoverCtrl.create({\n      component: 'popover-page',\n      ev: event\n    });\n\n    await this.popover.present();\n  }\n\n  render() {\n    return (\n      \n        \n          \n            \n          \n          IonicBeer\n\n          {checkAnon() ? null : \n             this.openPopover(ev)} icon-only>\n              {this.profilePic ?  : }\n            \n          }\n        \n\n        \n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileHeader'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/profile-page/profile-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                profile-page\n            \n\n            \n                styleUrl\n                profile-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isServer\n                            \n                            \n                                subscribed\n                            \n                            \n                                swSupport\n                            \n                            \n                                toastCtrl\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                componentWillLoad\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                notications\n                            \n                            \n                                render\n                            \n                            \n                                    Async\n                                showErrorToast\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentWillLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentWillLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            notications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notications()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            showErrorToast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorToast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isServer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({context: 'isServer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscribed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swSupport\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swSupport:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     HTMLIonToastControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonToastControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-toast-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/profile-page/profile-page.tsx:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, State, Prop } from '@stencil/core';\n\nimport { notify } from '../../global/notify-service';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'profile-page',\n  styleUrl: 'profile-page.css'\n})\nexport class ProfilePage {\n\n  @State() user: any;\n  @State() subscribed: boolean;\n  @State() swSupport: boolean;\n\n  @Prop({ connect: 'ion-toast-controller' }) toastCtrl: HTMLIonToastControllerElement;\n  @Prop({ context: 'isServer' }) private isServer: boolean;\n\n  componentWillLoad() {\n    if (!this.isServer) {\n      this.user = firebase.auth().currentUser;\n\n      if ('serviceWorker' in navigator && 'PushManager' in window) {\n        this.swSupport = true;\n      } else {\n        this.swSupport = false;\n      }\n    }\n  }\n\n  componentDidLoad() {\n    if (!this.isServer) {\n      navigator.serviceWorker.getRegistration().then((reg: ServiceWorkerRegistration) => {\n        if (reg) {\n          reg.pushManager.getSubscription().then((sub: PushSubscription) => {\n            if (sub) {\n              this.subscribed = true;\n            } else {\n              this.subscribed = false;\n            }\n          })\n        }\n      })\n    }\n  }\n\n  unsubscribe() {\n    navigator.serviceWorker.getRegistration().then((reg: ServiceWorkerRegistration) => {\n      reg.pushManager.getSubscription().then((sub: PushSubscription) => {\n        sub.unsubscribe();\n      })\n    })\n  }\n\n  async logout() {\n    console.log('here');\n    try {\n      await firebase.auth().signOut();\n      // this.history.replace('/', {});\n      (document.querySelector('ion-nav') as HTMLIonNavElement).setRoot('auth-page');\n    } catch (e) {\n      this.showErrorToast();\n    }\n  }\n\n  async showErrorToast() {\n    const toast = await this.toastCtrl.create({ message: 'Error logging out', duration: 1000 });\n    toast.present();\n  }\n\n  async notications() {\n    const perm = await notify();\n    console.log(perm);\n\n    if (perm) {\n      this.subscribed = true;\n    } else {\n      this.subscribed = false;\n    }\n  }\n\n  render() {\n    if (this.user && this.swSupport) {\n      return [\n        \n          \n            \n              \n            \n            IonicBeer\n          \n        ,\n\n        \n          \n            \n          \n\n          {this.user.displayName}\n          {this.user.email}\n\n          \n            {this.subscribed ?  this.unsubscribe()} expand='block' color='danger'>Unsubscribe\n              :  this.notications()} expand='block' color='primary'>Get Notifications\n            }\n\n             this.logout()} id='logoutButton' expand='block' color='danger'>Logout\n          \n        \n      ];\n    } else if (this.user && !this.swSupport) {\n      return [\n        \n          \n            \n              \n            \n            IonicBeer\n          \n        ,\n\n        \n          \n            \n          \n\n          {this.user.displayName}\n          {this.user.email}\n\n          \n             this.logout()} id='logoutButton' expand='block' color='danger'>Logout\n          \n        \n      ]\n    }\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/settings-page/settings-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                settings-page\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertCtrl\n                            \n                            \n                                offlineChecked\n                            \n                            \n                                storageUsed\n                            \n                            \n                                toastCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changed\n                            \n                            \n                                checkState\n                            \n                            \n                                    Async\n                                componentDidLoad\n                            \n                            \n                                    Async\n                                disableOffline\n                            \n                            \n                                    Async\n                                enableOffline\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changed(ev)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ev\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkState\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        componentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            disableOffline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disableOffline()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            enableOffline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enableOffline()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertCtrl:     HTMLIonAlertControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonAlertControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-alert-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            offlineChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        offlineChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storageUsed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storageUsed:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastCtrl:     HTMLIonToastControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonToastControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-toast-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/settings-page/settings-page.tsx:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop, State } from '@stencil/core';\n\nimport { formatBytes } from '../../global/utils';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'settings-page'\n})\nexport class SettingsPage {\n\n  @State() storageUsed: string = '0';\n  @State() offlineChecked: boolean;\n\n  @Prop({ connect: 'ion-toast-controller' }) toastCtrl: HTMLIonToastControllerElement;\n  @Prop({ connect: 'ion-alert-controller' }) alertCtrl: HTMLIonAlertControllerElement;\n\n  async componentDidLoad() {\n    if ((navigator as any).storage) {\n      const estimate = await (navigator as any).storage.estimate();\n      this.storageUsed = formatBytes(estimate.usage);\n    }\n\n    this.checkState();\n  }\n\n  checkState() {\n    const offlineState = localStorage.getItem('offlineEnabled');\n    console.log(offlineState);\n    if (offlineState === 'true') {\n      this.offlineChecked = true;\n    } else {\n      this.offlineChecked = false;\n      console.log('here');\n    }\n  }\n\n  async enableOffline() {\n    console.log('offline');\n\n    try {\n      await firebase.firestore().enablePersistence();\n      const toast = await this.toastCtrl.create({ message: 'Advanced Offline Mode enabled', duration: 1000 });\n      toast.present();\n    } catch (err) {\n      if (err.code == 'failed-precondition') {\n        // Multiple tabs open, persistence can only be enabled\n        // in one tab at a a time.\n        // ...\n        const toast = await this.toastCtrl.create({ message: 'Error enabling Advanced Offline Mode', duration: 1000 });\n        toast.present();\n      } else if (err.code == 'unimplemented') {\n        // The current browser does not support all of the\n        // features required to enable persistence\n        // ...\n        const toast = await this.toastCtrl.create({ message: 'Not supported in your browser', duration: 1000 });\n        toast.present();\n      }\n    }\n  }\n\n  async disableOffline() {\n    await firebase.firestore().enableNetwork();\n    const toast = await this.toastCtrl.create({ message: 'Advanced Offline Mode disabled', duration: 1000 });\n    toast.present();\n  }\n\n\n  async changed(ev) {\n    console.log(ev);\n    /*if (ev.target.checked === true) {\n      const alert = await this.alertCtrl.create({\n        title: 'Are you sure?',\n        message: 'Advanced Offline Mode will use more storage on your device',\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel: blah');\n              this.offlineChecked = false;\n            }\n          }, {\n            text: 'Enable',\n            handler: () => {\n              this.enableOffline();\n              localStorage.setItem('offlineEnabled', 'true');\n            }\n          }\n        ]\n      });\n      return await alert.present();\n    } else if (ev.target.checked === false) {\n      this.disableOffline();\n      localStorage.setItem('offlineEnabled', 'false');\n    }*/\n  }\n\n  render() {\n    return [\n      \n        \n      ,\n\n      \n        \n          \n            \n              Storage Used\n              {this.storageUsed}\n            \n          \n          \n            \n              Advanced Offline Mode\n              Use if you are frequently offline\n            \n            \n               this.changed(event)} checked={this.offlineChecked}>\n            \n          \n        \n      \n    ];\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareButton.html":{"url":"components/ShareButton.html","title":"component - ShareButton","body":"\n                   \n\n\n\n\n\n  Components\n  ShareButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/share-button/share-button.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                share-button\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertCtrl\n                            \n                            \n                                beer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleNativeShare\n                            \n                            \n                                handleTradShare\n                            \n                            \n                                render\n                            \n                            \n                                    Async\n                                share\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            handleNativeShare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleNativeShare(beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/share-button/share-button.tsx:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleTradShare\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleTradShare(beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/share-button/share-button.tsx:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/share-button/share-button.tsx:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            share\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        share(beer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/share-button/share-button.tsx:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertCtrl:     HTMLIonAlertControllerElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonAlertControllerElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({connect: 'ion-alert-controller'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/share-button/share-button.tsx:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/share-button/share-button.tsx:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop } from '@stencil/core';\n\n\n@Component({\n  tag: 'share-button'\n})\nexport class ShareButton {\n\n  @Prop() beer: any;\n  @Prop({ connect: 'ion-alert-controller' }) alertCtrl: HTMLIonAlertControllerElement;\n\n  async share(beer) {\n    if ((navigator as any).share) {\n      // have to catch here as web share\n      // is available on desktop chrome\n      // but fails\n      try {\n        this.handleNativeShare(beer);\n      } catch (e) {\n        this.handleTradShare(beer);\n      }\n    } else {\n      this.handleTradShare(beer);\n    }\n  }\n\n  handleTradShare(beer) {\n    window.open(`http://twitter.com/share?text=Check this out!&url=${window.location.href}/detail/${beer.id}`);\n  }\n\n  async handleNativeShare(beer) {\n    (navigator as any).share({\n      title: document.title,\n      text: 'Check out this cool beer',\n      url: `${window.location.href}/detail/${beer.id}`\n    })\n  }\n\n  render() {\n    return (\n       this.share(this.beer)} fill='clear' icon-only>\n        \n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StencilBeer.html":{"url":"components/StencilBeer.html","title":"component - StencilBeer","body":"\n                   \n\n\n\n\n\n  Components\n  StencilBeer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/stencil-beer/stencil-beer.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                stencil-beer\n            \n\n            \n                styleUrl\n                stencil-beer.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/stencil-beer/stencil-beer.tsx:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import '@ionic/core';\nimport { Component } from '@stencil/core';\n\n@Component({\n  tag: 'stencil-beer',\n  styleUrl: 'stencil-beer.css'\n})\nexport class StencilBeer {\n\n  render() {\n    return (\n      \n        \n\n          \n          \n\n            {/*\n              \n              \n    */}\n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n          \n\n          \n          \n          \n          \n\n        \n\n        \n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StencilBeer'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StencilComponent.html":{"url":"components/StencilComponent.html","title":"component - StencilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StencilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/feed-list/feed-list.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                feed-list\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/feed-list/feed-list.tsx:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/feed-list/feed-list.tsx:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'feed-list'\n})\nexport class StencilComponent {\n\n  @Prop() posts: any;\n\n  render() {\n    if (this.posts) {\n      const posts = this.posts.map((post) => {\n        return (\n          \n        )\n      });\n\n      return (\n        \n          {posts}\n        \n      )\n    } else {\n      return (\n        \n          \n        \n      )\n    }\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StencilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/tabs-page/tabs-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                tabs-page\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/tabs-page/tabs-page.tsx:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component } from '@stencil/core';\n\nimport { checkAnon } from '../../global/utils';\n\n@Component({\n  tag: 'tabs-page'\n})\nexport class TabsPage {\n\n  render() {\n    return (\n      \n\n        \n          \n        \n\n        \n          \n        \n\n        {checkAnon() ? null : \n        }\n      \n    );\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfile.html":{"url":"components/UserProfile.html","title":"component - UserProfile","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/user-profile/user-profile.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                user-profile\n            \n\n            \n                styleUrl\n                user-profile.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beers\n                            \n                            \n                                user\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                componentDidLoad\n                            \n                            \n                                    Async\n                                follow\n                            \n                            \n                                    Async\n                                getFullUser\n                            \n                            \n                                getUserBeers\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        componentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            follow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        follow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getFullUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFullUser(name)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserBeers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserBeers(email)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beers:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/user-profile/user-profile.tsx:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Prop, State } from '@stencil/core';\n\nimport { Beer } from '../../global/interfaces';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'user-profile',\n  styleUrl: 'user-profile.css'\n})\nexport class UserProfile {\n\n  @Prop() userName: string;\n\n  @State() beers: Array;\n  @State() user: any;\n\n  async componentDidLoad() {\n    const allData = await this.getFullUser(this.userName);\n\n    if (allData[1].length > 0) {\n      this.beers = allData[1];\n    }\n    console.log(this.beers);\n    this.user = allData[0];\n  }\n\n  getUserBeers(email) {\n    return firebase.firestore().collection('savedBeers').where('author', '==', email).get();\n  }\n\n  async getFullUser(name) {\n    console.log(name);\n    const fullUser = [];\n    let userEmail = null;\n\n    const doc = await firebase.firestore().collection('users').where('name', '==', name).get();\n\n    await doc.forEach((user) => {\n      console.log(user);\n      fullUser.push(user.data());\n      userEmail = user.data().email;\n    })\n\n    const tempBeers = [];\n\n    const beerDoc = await this.getUserBeers(userEmail)\n\n    await beerDoc.forEach((doc) => {\n      tempBeers.push(doc.data().beer);\n    })\n\n    fullUser.push(tempBeers);\n\n    console.log(fullUser);\n    return fullUser;\n  }\n\n  async follow() {\n    // const currentUser = firebase.auth().currentUser;\n    const doc = await firebase.firestore().collection('users').where('name', '==', this.userName).get();\n\n    await doc.forEach((user) => {\n      console.log(user.data());\n    });\n  }\n\n  render() {\n    if (this.user) {\n      return [\n        \n          \n        ,\n\n        \n          \n            \n          \n\n          {this.user.name}\n\n          {this.beers ?\n            Favorite Beers\n            : null\n          }\n\n          {this.beers ?\n            \n            : null\n          }\n\n        \n      ];\n    } else {\n      return [\n        \n          \n        ,\n\n        \n          \n        \n      ]\n    }\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfile'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersList.html":{"url":"components/UsersList.html","title":"component - UsersList","body":"\n                   \n\n\n\n\n\n  Components\n  UsersList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/users-list/users-list.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                users-list\n            \n\n            \n                styleUrl\n                users-list.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToUser\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToUser(userName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/users-list/users-list.tsx:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/users-list/users-list.tsx:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users-list/users-list.tsx:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users-list/users-list.tsx:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, Prop } from '@stencil/core';\n\n\n@Component({\n  tag: 'users-list',\n  styleUrl: 'users-list.css'\n})\nexport class UsersList {\n\n  @Prop() users: any[];\n\n  @Element() el: Element;\n\n  goToUser(userName: string) {\n    (this.el.closest('ion-nav') as HTMLIonNavElement).push('user-profile', {userName});\n  }\n\n  render() {\n    if (this.users) {\n      return (\n        \n          {this.users.map((user) => {\n            return (\n              \n                \n                  \n                \n                \n                  {user.name}\n                \n\n                \n                  \n                     this.goToUser(user.name)} color='primary' fill='clear'>\n                      See Profile\n                    \n                  \n                \n              \n            )\n          })}\n        \n      )\n    } else {\n      return (\n        \n          \n        \n      )\n    }\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersList'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersPage.html":{"url":"components/UsersPage.html","title":"component - UsersPage","body":"\n                   \n\n\n\n\n\n  Components\n  UsersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/users-page/users-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                users-page\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                iScroll\n                            \n                            \n                                    Private\n                                isPrerender\n                            \n                            \n                                last\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                getUsers\n                            \n                            \n                                paginate\n                            \n                            \n                                render\n                            \n                            \n                                setUpUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomponentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginate\n                            \n                            \n                        \n                    \n                \n                \n                    \npaginate(last)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        last\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUpUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUpUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iScroll:     HTMLIonInfiniteScrollElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLIonInfiniteScrollElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isPrerender\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPrerender:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({context: 'isPrerender'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        last:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users-page/users-page.tsx:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, State, Prop } from '@stencil/core';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'users-page'\n})\nexport class UsersPage {\n\n  @State() users: any[];\n  @Prop({ context: 'isPrerender' }) private isPrerender: boolean;\n\n  @Element() el: Element;\n\n  iScroll: HTMLIonInfiniteScrollElement;\n  last: number;\n\n  componentDidLoad() {\n    if (!this.isPrerender) {\n      this.setUpUsers();\n    }\n  }\n\n  setUpUsers() {\n    const tempUsers = [];\n\n    const currentUser = firebase.auth().currentUser;\n\n    this.getUsers().then((querySnapshot) => {\n\n      querySnapshot.forEach((doc) => {\n        if (doc.data().email !== currentUser.email) {\n          tempUsers.push(doc.data());\n        }\n      })\n\n      this.users = tempUsers;\n      this.last = querySnapshot.docs[querySnapshot.docs.length - 1];\n\n      // now lets init infiniteScrolling\n      this.iScroll = this.el.querySelector('#infinite-scroll');\n\n      this.iScroll.addEventListener('ionInfinite', async () => {\n        const emptyUsers = [];\n\n        const snapshot = await this.paginate(this.last);\n\n        this.last = snapshot.docs[snapshot.docs.length - 1];\n\n        snapshot.forEach((doc) => {\n          if (doc.data().email !== currentUser.email) {\n            emptyUsers.push(doc.data());\n          }\n        });\n\n        this.users = this.users.concat(emptyUsers);\n        console.log(this.users);\n\n        this.iScroll.complete();\n      })\n    });\n  }\n\n  paginate(last) {\n    return firebase.firestore().collection('users')\n      .startAfter(last)\n      .limit(12)\n      .get();\n  }\n\n  getUsers() {\n    return firebase.firestore().collection('users')\n      .limit(12)\n      .get();\n  }\n\n  render() {\n    return [\n      \n        \n      ,\n\n      \n        \n\n        \n          \n          \n        \n      \n    ];\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/barList.html":{"url":"components/barList.html","title":"component - barList","body":"\n                   \n\n\n\n\n\n  Components\n  barList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/bar-list/bar-list.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                bar-list\n            \n\n            \n                styleUrl\n                bar-list.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bars\n                            \n                            \n                                el\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDirections\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToDirections\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToDirections(address: string, dest: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-list/bar-list.tsx:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        dest\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/bar-list/bar-list.tsx:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bars:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-list/bar-list.tsx:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     Element\n\n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/bar-list/bar-list.tsx:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Element, Prop } from '@stencil/core';\n\nimport { Bar } from '../../global/interfaces';\n\n@Component({\n  tag: 'bar-list',\n  styleUrl: 'bar-list.css'\n})\nexport class barList {\n\n  @Prop() bars: Array;\n\n  @Element() el: Element;\n\n  goToDirections(address: string, dest: string) {\n    (this.el.closest('ion-nav') as HTMLIonNavElement).push('bar-directions', { address, dest });\n  }\n\n  render() {\n    if (this.bars) {\n      return (\n        \n          {this.bars.map((bar: Bar) => {\n            let color;\n\n            if (bar.rating >= 4.0) {\n              color = 'good';\n            } else if (bar.rating  2.9) {\n              color = 'ok'\n            } else {\n              color = 'bad';\n            };\n\n            return (\n              \n                \n                  {bar.rating}\n                \n                \n                  {bar.name}\n\n                  {bar.vicinity}\n\n                  \n                     this.goToDirections(bar.vicinity, bar.name)} color='primary' fill='clear'> Directions \n\n                    \n\n                  \n                \n              \n            )\n          })}\n        \n      );\n    } else {\n      return (\n        \n          \n        \n      )\n    }\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'barList'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/am-rating/am-rating.tsx\n            \n            \n                component\n            \n            \n                AMRating\n            \n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                src/components/auth-page/auth-page.tsx\n            \n            \n                component\n            \n            \n                AuthPage\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/auth-page/auth-page.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/bar-directions/bar-directions.tsx\n            \n            \n                component\n            \n            \n                BarDirections\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/components/bar-list/bar-list.tsx\n            \n            \n                component\n            \n            \n                barList\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/bar-page/bar-page.tsx\n            \n            \n                component\n            \n            \n                BarPage\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/components/beer-detail/beer-detail.tsx\n            \n            \n                component\n            \n            \n                BeerDetail\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/components/beer-item/beer-item.tsx\n            \n            \n                component\n            \n            \n                BeerItem\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/components/beer-item/beer-item.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/beer-list/beer-list.tsx\n            \n            \n                component\n            \n            \n                BeerList\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/beer-page/beer-page.tsx\n            \n            \n                component\n            \n            \n                BeerPage\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/components/favorites-page/favorites-page.tsx\n            \n            \n                component\n            \n            \n                favoritesPage\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/favorites-page/favorites-page.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/feed-list/feed-list.tsx\n            \n            \n                component\n            \n            \n                StencilComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/feed-page-modal/feed-page-modal.tsx\n            \n            \n                component\n            \n            \n                FeedPageModal\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/components/feed-page-modal/feed-page-modal.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/feed-page/feed-page.tsx\n            \n            \n                component\n            \n            \n                FeedPage\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/feed-page/feed-page.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/lazy-img/lazy-img.tsx\n            \n            \n                component\n            \n            \n                LazyImg\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/components/popover-page/popover-page.tsx\n            \n            \n                component\n            \n            \n                PopoverPage\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/components/popover-page/popover-page.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/post-detail/post-detail.tsx\n            \n            \n                component\n            \n            \n                PostDetail\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/post-img/post-img.tsx\n            \n            \n                component\n            \n            \n                PostImg\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/components/post-img/post-img.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/post-item/post-item.tsx\n            \n            \n                component\n            \n            \n                PostItem\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/profile-header/profile-header.tsx\n            \n            \n                component\n            \n            \n                ProfileHeader\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/profile-header/profile-header.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/profile-page/profile-page.tsx\n            \n            \n                component\n            \n            \n                ProfilePage\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/components/profile-page/profile-page.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/settings-page/settings-page.tsx\n            \n            \n                component\n            \n            \n                SettingsPage\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/settings-page/settings-page.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/share-button/share-button.tsx\n            \n            \n                component\n            \n            \n                ShareButton\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/components/stencil-beer/stencil-beer.tsx\n            \n            \n                component\n            \n            \n                StencilBeer\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/tabs-page/tabs-page.tsx\n            \n            \n                component\n            \n            \n                TabsPage\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/user-profile/user-profile.tsx\n            \n            \n                component\n            \n            \n                UserProfile\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/components/user-profile/user-profile.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/users-list/users-list.tsx\n            \n            \n                component\n            \n            \n                UsersList\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/users-page/users-page.tsx\n            \n            \n                component\n            \n            \n                UsersPage\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/users-page/users-page.tsx\n            \n            \n                variable\n            \n            \n                firebase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/http-service.ts\n            \n            \n                variable\n            \n            \n                doSearch\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/http-service.ts\n            \n            \n                variable\n            \n            \n                fetchBeers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/http-service.ts\n            \n            \n                variable\n            \n            \n                fetchStyles\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/http-service.ts\n            \n            \n                variable\n            \n            \n                getBeerDetail\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/interfaces.ts\n            \n            \n                interface\n            \n            \n                Bar\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/global/interfaces.ts\n            \n            \n                interface\n            \n            \n                Beer\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/global/interfaces.ts\n            \n            \n                interface\n            \n            \n                Labels\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/global/notify-service.ts\n            \n            \n                function\n            \n            \n                getServerKey\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/notify-service.ts\n            \n            \n                function\n            \n            \n                notify\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/notify-service.ts\n            \n            \n                function\n            \n            \n                requestPerm\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/notify-service.ts\n            \n            \n                function\n            \n            \n                sendTokenToServer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/utils.ts\n            \n            \n                function\n            \n            \n                checkAnon\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/utils.ts\n            \n            \n                function\n            \n            \n                debounce\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/utils.ts\n            \n            \n                function\n            \n            \n                formatBytes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/global/utils.ts\n            \n            \n                function\n            \n            \n                urlB64ToUint8Array\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/favoritesPage.html":{"url":"components/favoritesPage.html","title":"component - favoritesPage","body":"\n                   \n\n\n\n\n\n  Components\n  favoritesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/favorites-page/favorites-page.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                favorites-page\n            \n\n            \n                styleUrl\n                favorites-page.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                componentDidLoad\n                            \n                            \n                                getFreshBeers\n                            \n                            \n                                getSavedBeers\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            componentDidLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        componentDidLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/favorites-page/favorites-page.tsx:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFreshBeers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFreshBeers()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Listen('beerDeleted')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/components/favorites-page/favorites-page.tsx:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSavedBeers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSavedBeers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/favorites-page/favorites-page.tsx:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/favorites-page/favorites-page.tsx:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beers:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/favorites-page/favorites-page.tsx:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, State, Listen } from '@stencil/core';\n\nimport { Beer } from '../../global/interfaces';\n\ndeclare var firebase: any;\n\n@Component({\n  tag: 'favorites-page',\n  styleUrl: 'favorites-page.css'\n})\nexport class favoritesPage {\n\n  @State() beers: Array;\n\n  async componentDidLoad() {\n    const tempBeers = [];\n\n\n    this.getSavedBeers().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        tempBeers.push(doc.data().beer);\n      })\n\n      this.beers = tempBeers;\n    })\n  }\n\n  getSavedBeers() {\n    return firebase.firestore().collection('savedBeers').where('author', '==', firebase.auth().currentUser.email).get();\n  }\n\n  @Listen('beerDeleted')\n  getFreshBeers() {\n    const tempBeers = [];\n\n    this.getSavedBeers().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        tempBeers.push(doc.data().beer);\n      })\n\n      this.beers = tempBeers;\n    })\n  }\n\n  render() {\n    return [\n      \n      ,\n\n      \n        \n      \n    ];\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AMRating', 'selector': ''},{'name': 'AuthPage', 'selector': ''},{'name': 'BarDirections', 'selector': ''},{'name': 'barList', 'selector': ''},{'name': 'BarPage', 'selector': ''},{'name': 'BeerDetail', 'selector': ''},{'name': 'BeerItem', 'selector': ''},{'name': 'BeerList', 'selector': ''},{'name': 'BeerPage', 'selector': ''},{'name': 'favoritesPage', 'selector': ''},{'name': 'FeedPage', 'selector': ''},{'name': 'FeedPageModal', 'selector': ''},{'name': 'LazyImg', 'selector': ''},{'name': 'PopoverPage', 'selector': ''},{'name': 'PostDetail', 'selector': ''},{'name': 'PostImg', 'selector': ''},{'name': 'PostItem', 'selector': ''},{'name': 'ProfileHeader', 'selector': ''},{'name': 'ProfilePage', 'selector': ''},{'name': 'SettingsPage', 'selector': ''},{'name': 'ShareButton', 'selector': ''},{'name': 'StencilBeer', 'selector': ''},{'name': 'StencilComponent', 'selector': ''},{'name': 'TabsPage', 'selector': ''},{'name': 'UserProfile', 'selector': ''},{'name': 'UsersList', 'selector': ''},{'name': 'UsersPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'favoritesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkAnon   (src/.../utils.ts)\n                        \n                        \n                            debounce   (src/.../utils.ts)\n                        \n                        \n                            formatBytes   (src/.../utils.ts)\n                        \n                        \n                            getServerKey   (src/.../notify-service.ts)\n                        \n                        \n                            notify   (src/.../notify-service.ts)\n                        \n                        \n                            requestPerm   (src/.../notify-service.ts)\n                        \n                        \n                            sendTokenToServer   (src/.../notify-service.ts)\n                        \n                        \n                            urlB64ToUint8Array   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/global/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            checkAnon\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckAnon()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debounce\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebounce(fn, delay)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        delay\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatBytes\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatBytes(bytes, decimals?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bytes\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        decimals\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlB64ToUint8Array\n                            \n                            \n                        \n                    \n                \n                \n                    \nurlB64ToUint8Array(base64String)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        base64String\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/global/notify-service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getServerKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServerKey()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotify()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestPerm\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestPerm()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendTokenToServer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendTokenToServer(token)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCompodoc Demo Stencil\nLive demo\nThis project was forked from https://github.com/jgw96/stencil-beer\nIt is a demo project for demonstrating Compodoc features :\n\narchitecture\ncomponents documentation\ndocumentating methods and properties of components, classes, interfaces, etc...\n\nGetting Started\nTo build the documentation, run:\nnpm i\nnpm run doc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Ionic\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            doSearch   (src/.../http-service.ts)\n                        \n                        \n                            fetchBeers   (src/.../http-service.ts)\n                        \n                        \n                            fetchStyles   (src/.../http-service.ts)\n                        \n                        \n                            firebase   (src/.../user-profile.tsx)\n                        \n                        \n                            firebase   (src/.../auth-page.tsx)\n                        \n                        \n                            firebase   (src/.../beer-item.tsx)\n                        \n                        \n                            firebase   (src/.../favorites-page.tsx)\n                        \n                        \n                            firebase   (src/.../feed-page.tsx)\n                        \n                        \n                            firebase   (src/.../users-page.tsx)\n                        \n                        \n                            firebase   (src/.../popover-page.tsx)\n                        \n                        \n                            firebase   (src/.../post-img.tsx)\n                        \n                        \n                            firebase   (src/.../profile-header.tsx)\n                        \n                        \n                            firebase   (src/.../profile-page.tsx)\n                        \n                        \n                            firebase   (src/.../settings-page.tsx)\n                        \n                        \n                            firebase   (src/.../feed-page-modal.tsx)\n                        \n                        \n                            getBeerDetail   (src/.../http-service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/global/http-service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            doSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doSearch:     \n\n                    \n                \n                    \n                        \n                            Default value : (searchTerm: string) => {\n  const key = '0ebd6396901832ee0176a008410ef5d9';\n  const url = `https://cors-anywhere.herokuapp.com/http://api.brewerydb.com/v2/search?key=${key}&q=${searchTerm}&type=beer`;\n\n  return fetch(url).then((res) => {\n    return res.json()\n  }).then((data) => {\n    return data.data;\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchBeers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fetchBeers:     \n\n                    \n                \n                    \n                        \n                            Default value : async (page: number, style: number = 1) => {\n  const key = '0ebd6396901832ee0176a008410ef5d9';\n  const url = `https://cors-anywhere.herokuapp.com/http://api.brewerydb.com/v2/beers?key=${key}&p=${page}&styleId=${style}`;\n\n  // return cached data first\n  const cachedData = await get('cachedBeerData');\n  if (cachedData) {\n    return cachedData;\n  }\n\n  const response = await fetch(url);\n  const data = await response.json();\n  await set('cachedBeerData', data.data);\n\n  return data.data;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchStyles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fetchStyles:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n  const key = '0ebd6396901832ee0176a008410ef5d9';\n  const url = `https://cors-anywhere.herokuapp.com/http://api.brewerydb.com/v2/styles?key=${key}`;\n\n  return fetch(url).then((res) => {\n    return res.json()\n  }).then((data) => {\n    return data.data;\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBeerDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getBeerDetail:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string) => {\n  const key = '0ebd6396901832ee0176a008410ef5d9';\n  const url = `https://cors-anywhere.herokuapp.com/http://api.brewerydb.com/v2/beer/${id}?key=${key}`;\n\n  return fetch(url).then((res) => {\n    return res.json()\n  }).then((data) => {\n    return data.data;\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/components/user-profile/user-profile.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/auth-page/auth-page.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/beer-item/beer-item.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/favorites-page/favorites-page.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/feed-page/feed-page.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/users-page/users-page.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/popover-page/popover-page.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/post-img/post-img.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/profile-header/profile-header.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/profile-page/profile-page.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/settings-page/settings-page.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/components/feed-page-modal/feed-page-modal.tsx\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebase:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
